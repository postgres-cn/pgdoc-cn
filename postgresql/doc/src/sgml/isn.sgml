<!-- doc/src/sgml/isn.sgml -->

<sect1 id="isn" xreflabel="isn">
 <title>isn</title>

 <indexterm zone="isn">
  <primary>isn</primary>
 </indexterm>

 <para>
  <filename>isn</filename>模块为下列国际产品编号标准提供数据类型：EAN13、UPC、ISBN（图书）、ISMN（音乐）以及 ISSN（期刊）。在输入时会按照一个硬编码的前缀列表对输入进行验证，这个前缀的列表也被用来在输出时连接号码。因为新的前缀总是不时地出现，这个前缀列表可能会过时。这个模块的一个未来版本有希望得到一个来自于一个或多个表的前缀列表，这样用户可以根据需要来方便地更新前缀列表。不过，在当前该列表只能通过修改源代码并且重新编译来更新。另外一种方案是，在这个模块的未来版本中可能会直接移除掉前缀验证和连接支持。
 </para>

 <sect2>
  <title>数据类型</title>

  <para>
   <xref linkend="isn-datatypes">展示了<filename>isn</filename>模块提供的数据类型。
  </para>

  <table id="isn-datatypes">
   <title><filename>isn</filename> 数据类型</title>
   <tgroup cols="2">
    <thead>
     <row>
      <entry>数据类型</entry>
      <entry>描述</entry>
     </row>
    </thead>

    <tbody>
     <row>
      <entry><type>EAN13</type></entry>
      <entry>
       欧洲文章号，总是以 EAN13 格式显示
      </entry>
     </row>

     <row>
      <entry><type>ISBN13</type></entry>
      <entry>
       国际标准图书号，以新的 EAN13 格式显示
      </entry>
     </row>

     <row>
      <entry><type>ISMN13</type></entry>
      <entry>
       国际标准音乐号，以新的 EAN13 格式显示
      </entry>
     </row>
     <row>
      <entry><type>ISSN13</type></entry>
      <entry>
       国际标准期刊号，以新的 EAN13 格式显示
      </entry>
     </row>
     <row>
      <entry><type>ISBN</type></entry>
      <entry>
       国际标准图书号，以旧的短格式显示
      </entry>
     </row>
     <row>
      <entry><type>ISMN</type></entry>
      <entry>
       国际标准音乐号，以旧的短格式显示
      </entry>
     </row>
     <row>
      <entry><type>ISSN</type></entry>
      <entry>
       国际标准期刊号，以旧的短格式显示
      </entry>
     </row>
     <row>
      <entry><type>UPC</type></entry>
      <entry>
       通用产品代码
      </entry>
     </row>
    </tbody>
   </tgroup>
  </table>

  <para>
   一些注记：
  </para>

  <orderedlist>
   <listitem>
    <para>ISBN13、ISMN13、ISSN13 号码都是 EAN13 号码。</para>
   </listitem>
   <listitem>
    <para>EAN13 号码不总是 ISBN13、ISMN13 或 ISSN13（有些是）。</para>
   </listitem>
   <listitem>
    <para>一些 ISBN13 号码能够作为 ISBN 显示。</para>
   </listitem>
   <listitem>
    <para>一些 ISMN13 号码能够作为 ISMN 显示。</para>
   </listitem>
   <listitem>
    <para>一些 ISSN13 号码能够作为 ISSN 显示。</para>
   </listitem>
   <listitem>
    <para>UPC 号码是 EAN13 号码的一个子集（它们基本上是去掉了第一个<literal>0</>位的 EAN13）。</para>
   </listitem>
   <listitem>
    <para>所有 UPC、ISBN、ISMN 以及 ISSN 号码可以被表示为 EAN13 号码。</para>
   </listitem>
  </orderedlist>

  <para>
   在内部，所有这些类型使用同一种表达（一个 64 位整数）并且所有内部表达是可以互换的。多种类型被提供来控制显示格式化并且对假定为表示一种特定类型号码的输入进行更严格的合法性检查。
  </para>

  <para>
   在可能时，<type>ISBN</>、<type>ISMN</>和<type>ISSN</>类型将显示号码的短版本（ISxN 10），并且在无法适应短版本时显示号码的 ISxN 13 格式。<type>EAN13</type>、<type>ISBN13</type>、<type>ISMN13</type>和<type>ISSN13</type>类型总是显示长版本的 ISxN（EAN13）。
  </para>
 </sect2>

 <sect2>
  <title>造型</title>

  <para>
   <filename>isn</>模块提供了下列类型之间的造型：
  </para>

  <itemizedlist>
   <listitem>
    <para>
     ISBN13 &lt;=&gt; EAN13
    </para>
   </listitem>
   <listitem>
    <para>
     ISMN13 &lt;=&gt; EAN13
    </para>
   </listitem>
   <listitem>
    <para>
     ISSN13 &lt;=&gt; EAN13
    </para>
   </listitem>
   <listitem>
    <para>
     ISBN &lt;=&gt; EAN13
    </para>
   </listitem>
   <listitem>
    <para>
     ISMN &lt;=&gt; EAN13
    </para>
   </listitem>
   <listitem>
    <para>
     ISSN &lt;=&gt; EAN13
    </para>
   </listitem>
   <listitem>
    <para>
     UPC  &lt;=&gt; EAN13
    </para>
   </listitem>
   <listitem>
    <para>
     ISBN &lt;=&gt; ISBN13
    </para>
   </listitem>
   <listitem>
    <para>
     ISMN &lt;=&gt; ISMN13
    </para>
   </listitem>
   <listitem>
    <para>
     ISSN &lt;=&gt; ISSN13
    </para>
   </listitem>
  </itemizedlist>

  <para>
   当从<type>EAN13</>造型为另一种类型时， 会有对该值是否在另一种类型的域中的运行时检查，如果不在则抛出一个错误。其他的造型则是简单地重新贴个标签，因而总是会成功。
  </para>
 </sect2>

 <sect2>
  <title>函数和操作符</title>

  <para>
   <filename>isn</>模块提供了标准的比较操作符，外加对所有这些数据类型的 B 树和哈希索引支持。此外还有一些特殊的函数，它们展示在<xref linkend="isn-functions">中。在这个表中，<type>isn</>意味着该模块的数据类型中的任何一种。
  </para>

  <table id="isn-functions">
   <title><filename>isn</> 函数</title>
   <tgroup cols="3">
    <thead>
     <row>
      <entry>函数</entry>
      <entry>返回</entry>
      <entry>描述</entry>
     </row>
    </thead>

    <tbody>
     <row>
      <entry><function>isn_weak(boolean)</function><indexterm><primary>isn_weak</primary></indexterm></entry>
      <entry><type>boolean</type></entry>
      <entry>设置弱输入模式（返回新设置）</entry>
     </row>
     <row>
      <entry><function>isn_weak()</function></entry>
      <entry><type>boolean</type></entry>
      <entry>得到弱模式的当前状态</entry>
     </row>
     <row>
      <entry><function>make_valid(isn)</function><indexterm><primary>make_valid</primary></indexterm></entry>
      <entry><type>isn</type></entry>
      <entry>验证一个非法号码（清除非法标志）</entry>
     </row>
     <row>
      <entry><function>is_valid(isn)</function><indexterm><primary>is_valid</primary></indexterm></entry>
      <entry><type>boolean</type></entry>
      <entry>检查非法标志的存在</entry>
     </row>
    </tbody>
   </tgroup>
  </table>

  <para>
   <firstterm>弱</firstterm>模式被用来允许插入非法数据到一个表中。非法意味着校验位错误，而不是有丢失号码。
  </para>

  <para>
   为什么你会想要使用弱模式？你可能有一个巨大的 ISBN 号码集合并且出于某种奇怪的原因其中具有错误的校验位（可能这些号码是从印刷稿中扫描并且 OCR 而来，也可能是手工输入的......谁知道呢）。不管怎样，重点是你可能希望清理这些混乱，但是你仍然想要能够把这些号码放在你的数据库中并且可能会使用一个外部工具在数据库中定位非法号码，这样你能够更容易地验证信息。因此你可能会想要在表中选择所有非法的号码。
  </para>

  <para>
   当你使用弱模式在一个表中插入非法号码时，被插入的号码将会被加上修正过的校验位，但是它的最后将会有一个感叹号（<literal>!</>），例如<literal>0-11-000322-5!</>。这种非法标志符可以用<function>is_valid</>函数检查并且可以用<function>make_valid</>函数清除。
  </para>

  <para>
   即使不在弱模式中，你也能通过在号码某位追加<literal>!</>字符来强制非法号码的插入。
  </para>

  <para>
   另一个特殊特性是在输入过程中，你可以写一个<literal>?</>代替校验位，然后正确的校验位将被自动插入。
  </para>
 </sect2>

 <sect2>
  <title>例子</title>

<programlisting>
--直接使用类型：
SELECT isbn('978-0-393-04002-9');
SELECT isbn13('0901690546');
SELECT issn('1436-4522');

--转换类型：
-- 注意只有在号码处于另一种类型的合法值之中时，才能从 EAN13 转换成另一种类型
-- 因此下面的用法将不会工作： select isbn(ean13('0220356483481'));
-- 但是下面的可以：
SELECT upc(ean13('0220356483481'));
SELECT ean13(upc('220356483481'));

--创建一个表，它有一个单一列来保存 ISBN 号码：
CREATE TABLE test (id isbn);
INSERT INTO test VALUES('9780393040029');

--自动计算校验位（观察 '?'）：
INSERT INTO test VALUES('220500896?');
INSERT INTO test VALUES('978055215372?');

SELECT issn('3251231?');
SELECT ismn('979047213542?');

--使用弱模式：
SELECT isn_weak(true);
INSERT INTO test VALUES('978-0-11-000533-4');
INSERT INTO test VALUES('9780141219307');
INSERT INTO test VALUES('2-205-00876-X');
SELECT isn_weak(false);

SELECT id FROM test WHERE NOT is_valid(id);
UPDATE test SET id = make_valid(id) WHERE id = '2-205-00876-X!';

SELECT * FROM test;

SELECT isbn13(id) FROM test;
</programlisting>
 </sect2>

 <sect2>
  <title>参考文献</title>

  <para>
   实现这个模块的信息可以从下列网站收集到：
   <itemizedlist>
    <listitem><para><ulink url="http://www.isbn-international.org/"></ulink></para></listitem>
    <listitem><para><ulink url="http://www.issn.org/"></ulink></para></listitem>
    <listitem><para><ulink url="http://www.ismn-international.org/"></ulink></para></listitem>
    <listitem><para><ulink url="http://www.wikipedia.org/"></ulink></para></listitem>
   </itemizedlist>

   用于连接的前缀：
   <itemizedlist>
    <listitem><para><ulink url="http://www.gs1.org/productssolutions/idkeys/support/prefix_list.html"></ulink></para></listitem>
    <listitem><para><ulink url="http://en.wikipedia.org/wiki/List_of_ISBN_identifier_groups"></ulink></para></listitem>
    <listitem><para><ulink url="https://www.isbn-international.org/content/isbn-users-manual"></ulink></para></listitem>
    <listitem><para><ulink url="http://en.wikipedia.org/wiki/International_Standard_Music_Number"></ulink></para></listitem>
    <listitem><para><ulink url="http://www.ismn-international.org/ranges.html"></ulink></para></listitem>
   </itemizedlist>

   创建算法时已经注意严谨地使用 ISBN、ISMN、ISSN 官方用户手册中的推荐算法进行了验证。
  </para>
 </sect2>

 <sect2>
  <title>作者</title>
  <para>
   Germ&aacute;n M&eacute;ndez Bravo (Kronuz), 2004 - 2006
  </para>

  <para>
   这个模块受到了 Garrett A. Wollman 的<filename>isbn_issn</>代码的启发。
  </para>
 </sect2>

</sect1>
