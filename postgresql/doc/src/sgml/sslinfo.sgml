<!-- doc/src/sgml/sslinfo.sgml -->

<sect1 id="sslinfo" xreflabel="sslinfo">
 <title>sslinfo</title>

 <indexterm zone="sslinfo">
  <primary>sslinfo</primary>
 </indexterm>

 <para>
  在连接到<productname>PostgreSQL</>时，<filename>sslinfo</>模块提供当前客户端提供的 SSL 证书的有关信息。如果当前连接不使用 SSL，这个模块就没有用处（大部分函数将返回 NULL）。
 </para>

 <para>
  除非安装时用<literal>--with-openssl</>进行了配置，这个扩展压根就不会被编译。
 </para>

 <sect2>
  <title>提供的函数</title>

  <variablelist>
   <varlistentry>
    <term>
     <function>ssl_is_used() 返回 boolean</function>
    <indexterm>
     <primary>ssl_is_used</primary>
    </indexterm>
    </term>
    <listitem>
    <para>
     如果当前到服务器的连接使用 SSL 则返回 TRUE，否则返回 FALSE。
    </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term>
     <function>ssl_version() 返回 text</function>
     <indexterm>
     <primary>ssl_version</primary>
    </indexterm>
    </term>
    <listitem>
    <para>
     返回 SSL 连接使用的协议名称（如 SSLv2、SSLv3 或者 TLSv1）。
    </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term>
     <function>ssl_cipher() 返回 text</function>
     <indexterm>
     <primary>ssl_cipher</primary>
    </indexterm>
    </term>
    <listitem>
    <para>
     返回 SSL 连接所用的加密方法名称（如 DHE-RSA-AES256-SHA）。
    </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term>
     <function>ssl_client_cert_present() 返回 boolean</function>
     <indexterm>
     <primary>ssl_client_cert_present</primary>
    </indexterm>
    </term>
    <listitem>
    <para>
     如果当前客户端已经向服务器出示了一个合法的 SSL 客户端证书则返回 TRUE，否则返回 FALSE（服务器可能被配置要求一个客户端配置，也可能没有被配置成这样）。
    </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term>
     <function>ssl_client_serial() 返回 numeric</function>
     <indexterm>
     <primary>ssl_client_serial</primary>
    </indexterm>
    </term>
    <listitem>
    <para>
     返回当前客户端证书的序列号。证书序列号和证书发行人的组合被确保可以唯一标识一个证书（但是不能唯一标识其拥有者 &mdash; 拥有者应该定期地更换其密钥，并且从发行人那里得到新的证书）。
    </para>

    <para>
     因此，如果你运行自己的 CA 并且只允许服务器接收来自于这个 CA 的证书，序列号就是最可靠的（虽然并非很好记忆）标识一个用户的方法。
    </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term>
     <function>ssl_client_dn() 返回 text</function>
     <indexterm>
     <primary>ssl_client_dn</primary>
    </indexterm>
    </term>
    <listitem>
    <para>
     返回当前客户端证书的完整主题，并且将字符数据转换成当前数据库的编码。我们假定如果你在证书名中使用非 ASCII 字符，你的数据库也有能力展示这些字符。如果你的数据库使用 SQL_ASCII 编码，名称中的非 ASCII 字符将被表示为 UTF-8 序列。
    </para>

    <para>
     结果看起来像<literal>/CN=某人 /C=某个国家 /O=某个组织</>。
    </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term>
     <function>ssl_issuer_dn() 返回 text</function>
    <indexterm>
     <primary>ssl_issuer_dn</primary>
    </indexterm>
    </term>
    <listitem>
    <para>
     返回当前客户端证书的完整的发行人名称，并把字符数据转换成当前数据库的编码。编码转换以与<function>ssl_client_dn</>相同的方式处理。
    </para>
    <para>
     这个函数的返回值与证书序列号的组合唯一地标识证书。
    </para>
    <para>
     如果在服务器的<filename>root.crt</>文件中有多于一个的可信 CA 证书，或者如果 CAI 已经发行了某些中间认证授权证书，这个函数就真的很有用。
    </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term>
     <function>ssl_client_dn_field(fieldname text) 返回 text</function>
    <indexterm>
     <primary>ssl_client_dn_field</primary>
    </indexterm>
    </term>
    <listitem>
    <para>
     这个函数返回证书主题中指定域的值，如果域不存在则返回 NULL。域的名称是字符串常量，它们被使用 OpenSSL 对象数据库转换成 ASN1 对象标识符。下列值是可接受的：
    </para>
<literallayout class="monospaced">
commonName (alias CN)
surname (alias SN)
name
givenName (alias GN)
countryName (alias C)
localityName (alias L)
stateOrProvinceName (alias ST)
organizationName (alias O)
organizationUnitName (alias OU)
title
description
initials
postalCode
streetAddress
generationQualifier
description
dnQualifier
x500UniqueIdentifier
pseudonym
role
emailAddress
</literallayout>
    <para>
     这些域中除了<structfield>commonName</>都是可选的。它们之中哪些会被包括或者不会被包括完全取决于你的 CA 策略。不过，这些域的含义由 X.500 和 X.509 标准严格地定义，因此你不能只是为它们分配任意含义。
    </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term>
     <function>ssl_issuer_field(fieldname text) 返回 text</function>
    <indexterm>
     <primary>ssl_issuer_field</primary>
    </indexterm>
    </term>
    <listitem>
    <para>
     和<function>ssl_client_dn_field</>一样，但是用于证书发行人而不是证书主题。
    </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </sect2>

 <sect2>
  <title>作者</title>

  <para>
   Victor Wagner <email>vitus@cryptocom.ru</email>, Cryptocom LTD
  </para>

  <para>
   Cryptocom OpenSSL 开发组的 E-Mail：
   <email>openssl@cryptocom.ru</email>
  </para>
 </sect2>

</sect1>
