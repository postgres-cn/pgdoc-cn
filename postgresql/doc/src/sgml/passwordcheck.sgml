<!-- doc/src/sgml/passwordcheck.sgml -->

<sect1 id="passwordcheck" xreflabel="passwordcheck">
 <title>passwordcheck</title>

 <indexterm zone="passwordcheck">
  <primary>passwordcheck</primary>
 </indexterm>

 <!--
<para>
  The <filename>passwordcheck</filename> module checks users' passwords
  whenever they are set with
  <xref linkend="SQL-CREATEROLE"> or
  <xref linkend="SQL-ALTERROLE">.
  If a password is considered too weak, it will be rejected and
  the command will terminate with an error.
 </para>
-->
<para>
无论用户是否设置<xref linkend="SQL-CREATEROLE">或<xref linkend="SQL-ALTERROLE">，<filename>passwordcheck</filename>模块都会检查用户的密码。如果系统认为密码太弱，
那么将拒绝该密码，并且正在执行的命令会被终止，并带有错误信息。
</para>

 <!--
<para>
  To enable this module, add <literal>'$libdir/passwordcheck'</literal>
  to <xref linkend="guc-shared-preload-libraries"> in
  <filename>postgresql.conf</filename>, then restart the server.
 </para>
-->
<para>
要启用这个模块，在<filename>postgresql.conf</filename>中添加
<literal>'$libdir/passwordcheck'</literal>到<xref linkend="guc-shared-preload-libraries">，
然后重启服务器。
</para>

 <!--
<para>
  You can adapt this module to your needs by changing the source code.
  For example, you can use
  <ulink url="http://sourceforge.net/projects/cracklib/">CrackLib</ulink>
  to check passwords &mdash; this only requires uncommenting
  two lines in the <filename>Makefile</filename> and rebuilding the
  module.  (We cannot include <productname>CrackLib</productname>
  by default for license reasons.)
  Without <productname>CrackLib</productname>, the module enforces a few
  simple rules for password strength, which you can modify or extend
  as you see fit.
 </para>
-->
<para>
你可以通过改变这个模块的源码使其调整为你所需要的样子。例如，你可以使用
<ulink url="http://sourceforge.net/projects/cracklib/">CrackLib</ulink>
检查密码&mdash;这只需要在<filename>Makefile</filename>文件中取消两行的注释，
并重新编译该模块。（因为许可证的原因，我们缺省不能包括<productname>CrackLib</productname>。）
没有<productname>CrackLib</productname>，该模块为密码强度强制制定一些简单的规则，
这些规则可以根据你认为合适的去修改或扩展。
</para>

 <caution>
  <!--
<para>
   To prevent unencrypted passwords from being sent across the network,
   written to the server log or otherwise stolen by a database administrator,
   <productname>PostgreSQL</productname> allows the user to supply
   pre-encrypted passwords. Many client programs make use of this
   functionality and encrypt the password before sending it to the server.
  </para>
-->
<para>
为了阻止未加密的口令通过网络发送出去，或被写到服务器日志，或被数据库管理员偷走，
<productname>PostgreSQL</productname>允许用户提供预先加密的口令。
许多客户端程序使用这个功能，并在发送到服务器之前加密口令。
</para>
  <!--
<para>
   This limits the usefulness of the <filename>passwordcheck</filename>
   module, because in that case it can only try to guess the password.
   For this reason, <filename>passwordcheck</filename> is not
   recommended if your security requirements are high.
   It is more secure to use an external authentication method such as GSSAPI
   (see <xref linkend="client-authentication">) than to rely on
   passwords within the database.
  </para>
-->
<para>
这会限制<filename>passwordcheck</filename>模块的有用性，因为那种情况下只能尝试猜测口令。
因为这个原因，如果你的安全需求比较高，那么不建议使用<filename>passwordcheck</filename>。
使用一个额外的认证方法（如GSSAPI）(参阅 <xref linkend="client-authentication">)
比依赖于数据库中的密码更安全。
</para>
  <!--
<para>
   Alternatively, you could modify <filename>passwordcheck</filename>
   to reject pre-encrypted passwords, but forcing users to set their
   passwords in clear text carries its own security risks.
  </para>
-->
<para>
或者，你可以修改<filename>passwordcheck</filename>来拒绝预先加密的口令，
但是强制用户以明文的方式设置他们的口令有其自身的安全风险。
</para>
 </caution>

</sect1>
