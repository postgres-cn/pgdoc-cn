<!-- doc/src/sgml/passwordcheck.sgml -->

<sect1 id="passwordcheck" xreflabel="passwordcheck">
 <title>passwordcheck</title>

 <indexterm zone="passwordcheck">
  <primary>passwordcheck</primary>
 </indexterm>

 <para>
  只要通过<xref linkend="SQL-CREATEROLE">或<xref linkend="SQL-ALTERROLE">设置用户，<filename>passwordcheck</filename>模块会检查用户的口令。如果一个口令被认为太弱，它将被拒绝并且该命令将带着一个错误终止。
 </para>

 <para>
  要启用这个模块，把<literal>'$libdir/passwordcheck'</literal>加入到<filename>postgresql.conf</filename>中的<xref linkend="guc-shared-preload-libraries">，然后重启服务器。
 </para>

 <para>
  你可以通过修改源代码来按你的需要修改这个模块。例如，你可以使用<ulink url="http://sourceforge.net/projects/cracklib/">CrackLib</ulink>来检查口令 &mdash; 这只需要在<filename>Makefile</filename>中取消两行的注释并且重新编译该模块（由于授权原因，我们不能默认包括<productname>CrackLib</productname>）。如果没有<productname>CrackLib</productname>，该模块会对口令强度强制一些简单的规则，你可以自行修改和扩充。
 </para>

 <caution>
  <para>
   要阻止未加密的口令被通过网络传送、写入到服务器日志或者被一个数据库管理员窃取，<productname>PostgreSQL</productname>允许用户提供预加密的口令。很多客户端程序利用这种功能并且在把口令发送给服务器之前加密它。
  </para>
  <para>
   这限制了<filename>passwordcheck</filename>模块的有用性，因为这种情况下它只能尝试猜测口令。由于这个原因，如果你的安全性需求很高，我们不推荐<filename>passwordcheck</filename>。使用一个诸如 GSSAPI （见<xref linkend="client-authentication">）的外部认证方法比依赖数据库内的口令更加安全。
  </para>
  <para>
   此外，你可以修改<filename>passwordcheck</filename>来拒绝预加密的口令，但是强制用户将口令设置为明文带来了它的安全风险。
  </para>
 </caution>

</sect1>
