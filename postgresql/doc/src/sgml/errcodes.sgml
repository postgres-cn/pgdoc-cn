<!-- doc/src/sgml/errcodes.sgml -->

<appendix id="errcodes-appendix">
 <title><productname>PostgreSQL</productname>错误代码</title>

 <indexterm zone="errcodes-appendix">
  <primary>error codes</primary>
  <secondary>list of</secondary>
 </indexterm>

 <para>
  <productname>PostgreSQL</productname>服务器发出的所有消息都被赋予了五个字符错误代码，这遵循 SQL 标准对<quote>SQLSTATE</>代码的习惯。需要知道发生了什么错误条件的应用通常应该测试错误代码， 而不是查看文本形式的错误消息。这些错误代码轻易不会在<productname>PostgreSQL</>的版本之间改变，并且一般也不会随着错误消息的本地化而改变。请注意有些（但不是全部）<productname>PostgreSQL</>生成的错误代码是由 SQL 标准定义的；有些标准没有定义的额外错误代码是<productname>PostgreSQL</>发明的或者是从其它数据库借用的。
 </para>

 <para>
  根据标准，错误代码的前两个字符表示错误类别，而后三个字符表示在该类别内的一种特定情况。因此， 那些不能识别特定错误代码的应用仍然可以从错误类别中推断要做什么。
 </para>

 <para>
  <xref linkend="errcodes-table">中列出了<productname>PostgreSQL</productname> &version;定义的所有错误代码（有些实际上目前并没有使用，但是 SQL 标准中有定义）。错误类别也在其中列出。对于每个错误类别都有一个 <quote>标准</>错误代码，它的最后三个字符是<literal>000</>。这个代码只用于那些属于该类别但是没有被赋予更特定代码的错误情况。
 </para>

 <para>
  <quote>情况名称</quote>列中显示的符号是在<application>PL/pgSQL</>中使用的情况名称。情况名称可以被写成大写或小写形式（注意<application>PL/pgSQL</>不识别警告（与错误不同）情况名称，它们是类别 00、01 和 02）。
 </para>

 <para>
  对于某些类型的错误，服务器会报告与错误相关的数据库对象（一个表、表列、数据类型或约束）的名称。例如，导致一个<symbol>unique_violation</>错误的唯一约束的名称。这些名字被包含在错误报告消息的独立域中，这样应用就不必从可能是本地化的人类可读的消息文本中抽取它们。到<productname>PostgreSQL</> 9.3 位置，对于这个特性的完全覆盖只在 SQLSTATE 类别 23 （完整性约束未被）的错误中存在，但是很可能会在未来进行扩展。
 </para>


<table id="errcodes-table">
 <title><productname>PostgreSQL</productname>错误代码</title>

 <tgroup cols="2">
  <colspec colnum="1" colname="errorcode">
  <colspec colnum="2" colname="condname">
  <spanspec namest="errorcode" nameend="condname" spanname="span12">

  <thead>
   <row>
    <entry>错误代码</entry>
    <entry>情况名称</entry>
   </row>
  </thead>

  <tbody>

    &errcodes-table;

  </tbody>
 </tgroup>
</table>


</appendix>
