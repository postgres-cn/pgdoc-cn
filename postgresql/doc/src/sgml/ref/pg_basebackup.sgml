<!--
doc/src/sgml/ref/pg_basebackup.sgml
PostgreSQL documentation
-->

<refentry id="app-pgbasebackup">
<!--==========================orignal english content==========================
 <indexterm zone="app-pgbasebackup">
  <primary>pg_basebackup</primary>
 </indexterm>
____________________________________________________________________________-->
 <indexterm zone="app-pgbasebackup">
  <primary>pg_basebackup</primary>
 </indexterm>

<!--==========================orignal english content==========================
 <refmeta>
  <refentrytitle><application>pg_basebackup</application></refentrytitle>
  <manvolnum>1</manvolnum>
  <refmiscinfo>Application</refmiscinfo>
 </refmeta>
____________________________________________________________________________-->
 <refmeta>
  <refentrytitle><application>pg_basebackup</application></refentrytitle>
  <manvolnum>1</manvolnum>
  <refmiscinfo>Application</refmiscinfo>
 </refmeta>

<!--==========================orignal english content==========================
 <refnamediv>
  <refname>pg_basebackup</refname>
  <refpurpose>take a base backup of a <productname>PostgreSQL</productname> cluster</refpurpose>
 </refnamediv>
____________________________________________________________________________-->
 <refnamediv>
  <refname>pg_basebackup</refname>
  <refpurpose>获得一个<productname>PostgreSQL</productname>集簇的一个基础备份</refpurpose>
 </refnamediv>

 <refsynopsisdiv>
<!--==========================orignal english content==========================
  <cmdsynopsis>
   <command>pg_basebackup</command>
   <arg rep="repeat"><replaceable>option</replaceable></arg>
  </cmdsynopsis>
____________________________________________________________________________-->
  <cmdsynopsis>
   <command>pg_basebackup</command>
   <arg rep="repeat"><replaceable>option</replaceable></arg>
  </cmdsynopsis>
 </refsynopsisdiv>

 <refsect1>
<!--==========================orignal english content==========================
  <title>Description</title>
____________________________________________________________________________-->
  <title>描述</title>
<!--==========================orignal english content==========================
  <para>
   <application>pg_basebackup</application> is used to take a base backup of
   a running <productname>PostgreSQL</productname> database cluster. The backup
   is taken without affecting other clients of the database, and can be used
   both for point-in-time recovery (see <xref linkend="continuous-archiving"/>)
   and as the starting point for a log-shipping or streaming-replication standby
   server (see <xref linkend="warm-standby"/>).
  </para>
____________________________________________________________________________-->
  <para>
   <application>pg_basebackup</application>被用于获得一个正在运行的<productname>PostgreSQL</productname>数据库集簇的基础备份。获得这些备份不会影响数据库的其他客户端，并且可以被用于时间点恢复（见<xref linkend="continuous-archiving"/>）以及用作一个日志传送或流复制后备服务器的开始点（见<xref linkend="warm-standby"/>）。
  </para>

<!--==========================orignal english content==========================
  <para>
   <application>pg_basebackup</application> makes an exact copy of the database
   cluster's files, while making sure the server is put into and
   out of backup mode automatically. Backups are always taken of the entire
   database cluster; it is not possible to back up individual databases or
   database objects. For selective backups, another tool such as
   <xref linkend="app-pgdump"/> must be used.
  </para>
____________________________________________________________________________-->
  <para>
   <application>pg_basebackup</application>对数据库群集的文件进行精确复制，同时确保服务器自动进入和退出备份模式。备份总是从整个数据库集簇获得，不可能备份单个数据库或数据库对象。关于选择性备份，必须使用一个像<xref linkend="app-pgdump"/>的工具。
  </para>

<!--==========================orignal english content==========================
  <para>
   The backup is made over a regular <productname>PostgreSQL</productname>
   connection that uses the replication protocol. The connection must be made
   with a user ID that has <literal>REPLICATION</literal> permissions
   (see <xref linkend="role-attributes"/>) or is a superuser,
   and <link linkend="auth-pg-hba-conf"><filename>pg_hba.conf</filename></link>
   must permit the replication connection. The server must also be configured
   with <xref linkend="guc-max-wal-senders"/> set high enough to provide at
   least one walsender for the backup plus one for WAL streaming (if used).
  </para>
____________________________________________________________________________-->
  <para>
   备份通过一个使用复制协议常规<productname>PostgreSQL</productname>连接制作。该连接必须由一个具有<literal>REPLICATION</literal>权限（详见<xref linkend="role-attributes"/>）或者具有超级用户权限的用户ID建立，并且<link linkend="auth-pg-hba-conf"><filename>pg_hba.conf</filename></link>必须允许该复制连接。该服务器还必须被配置，使<xref linkend="guc-max-wal-senders"/>设置得足够高以提供至少一个walsender用于备份以及一个用于WAL流（如果使用流）。
  </para>

<!--==========================orignal english content==========================
  <para>
   There can be multiple <command>pg_basebackup</command>s running at the same time, but it is usually
   better from a performance point of view to take only one backup, and copy
   the result.
  </para>
____________________________________________________________________________-->
  <para>
   在同一时间可以有多个<command>pg_basebackup</command>运行，但是从性能的角度来说，只进行一次备份并且复制结果通常更好。
  </para>

<!--==========================orignal english content==========================
  <para>
   <application>pg_basebackup</application> can make a base backup from
   not only a primary server but also a standby. To take a backup from a standby,
   set up the standby so that it can accept replication connections (that is, set
   <varname>max_wal_senders</varname> and <xref linkend="guc-hot-standby"/>,
   and configure its <filename>pg_hba.conf</filename> appropriately).
   You will also need to enable <xref linkend="guc-full-page-writes"/> on the primary.
  </para>
____________________________________________________________________________-->
  <para>
   <application>pg_basebackup</application>不仅能从主控机也能从后备机创建一个基础备份。要从后备机获得一个备份，设置后备机让它能接受复制连接（也就是，设置<varname>max_wal_senders</varname>和<xref linkend="guc-hot-standby"/>，并且适当配置其<filename>pg_hba.conf</filename>）。你将也需要在主控机上启用<xref linkend="guc-full-page-writes"/>。
  </para>

<!--==========================orignal english content==========================
  <para>
   Note that there are some limitations in taking a backup from a standby:

   <itemizedlist>
    <listitem>
     <para>
      The backup history file is not created in the database cluster backed up.
     </para>
    </listitem>
    <listitem>
     <para>
      If you are using <literal>-X none</literal>, there is no guarantee that all
      WAL files required for the backup are archived at the end of backup.
     </para>
    </listitem>
    <listitem>
     <para>
      If the standby is promoted to be primary during backup, the backup fails.
     </para>
    </listitem>
    <listitem>
     <para>
      All WAL records required for the backup must contain sufficient full-page writes,
      which requires you to enable <varname>full_page_writes</varname> on the primary and
      not to use a tool like <application>pg_compresslog</application> as
      <varname>archive_command</varname> to remove full-page writes from WAL files.
     </para>
    </listitem>
   </itemizedlist>
  </para>
____________________________________________________________________________-->
  <para>
   注意在来自后备机的备份中有一些限制：

   <itemizedlist>
    <listitem>
     <para>
      不会在被备份的数据库集簇中创建备份历史文件。
     </para>
    </listitem>
    <listitem>
     <para>
      如果正在使用<literal>-X none</literal>，不保证备份所需的所有 WAL 文件在备份结束时被归档。
     </para>
    </listitem>
    <listitem>
     <para>
      如果在备份期间后备机被提升为主控机，备份会失败。
     </para>
    </listitem>
    <listitem>
     <para>
      备份所需的所有 WAL 记录必须包含足够的全页写，这要求你在主控机上启用<varname>full_page_writes</varname>并且不使用一个类似<application>pg_compresslog</application>的工具以<varname>archive_command</varname>从 WAL 文件中移除全页写。
     </para>
    </listitem>
   </itemizedlist>
  </para>
<!--==========================orignal english content==========================  
  <para>
   Whenever <application>pg_basebackup</application> is taking a base
   backup, the server's <structname>pg_stat_progress_basebackup</structname>
   view will report the progress of the backup.
   See <xref linkend="basebackup-progress-reporting"/> for details.
  </para>
____________________________________________________________________________-->
  <para>
   每当<application>pg_basebackup</application>进行基本备份时，服务器的<structname>pg_stat_progress_basebackup</structname>视图将报告备份的进度。有关详细信息，请参见<xref linkend="basebackup-progress-reporting"/>。
  </para>
 </refsect1>

 <refsect1>
<!--==========================orignal english content==========================
  <title>Options</title>
____________________________________________________________________________-->
  <title>选项</title>

<!--==========================orignal english content==========================
   <para>
    The following command-line options control the location and format of the
    output:

    <variablelist>
     <varlistentry>
      <term><option>-D <replaceable class="parameter">directory</replaceable></option></term>
      <term><option>-&minus;pgdata=<replaceable class="parameter">directory</replaceable></option></term>
      <listitem>
       <para>
        Sets the target directory to write the output to.
        <application>pg_basebackup</application> will create this directory
        (and any missing parent directories) if it does not exist.  If it
        already exists, it must be empty.
       </para>
       <para>
        When the backup is in tar format, the target directory may be
        specified as <literal>-</literal> (dash), causing the tar file to be
        written to <literal>stdout</literal>.
       </para>
       <para>
        This option is required.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-F <replaceable class="parameter">format</replaceable></option></term>
      <term><option>-&minus;format=<replaceable class="parameter">format</replaceable></option></term>
      <listitem>
       <para>
        Selects the format for the output. <replaceable>format</replaceable>
        can be one of the following:

        <variablelist>
         <varlistentry>
          <term><literal>p</literal></term>
          <term><literal>plain</literal></term>
          <listitem>
           <para>
            Write the output as plain files, with the same layout as the
            source server's data directory and tablespaces. When the cluster has
            no additional tablespaces, the whole database will be placed in
            the target directory. If the cluster contains additional
            tablespaces, the main data directory will be placed in the
            target directory, but all other tablespaces will be placed
            in the same absolute path as they have on the source server.
           </para>
           <para>
            This is the default format.
           </para>
          </listitem>
         </varlistentry>

         <varlistentry>
          <term><literal>t</literal></term>
          <term><literal>tar</literal></term>
          <listitem>
           <para>
            Write the output as tar files in the target directory. The main
            data directory's contents will be written to a file named
            <filename>base.tar</filename>, and each other tablespace will be
            written to a separate tar file named after that tablespace's OID.
            </para>
           <para>
            If the target directory is specified as <literal>-</literal>
            (dash), the tar contents will be written to
            standard output, suitable for piping to (for example)
            <productname>gzip</productname>. This is only allowed if
            the cluster has no additional tablespaces and WAL
            streaming is not used.
           </para>
           </listitem>
         </varlistentry>
        </variablelist></para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-R</option></term>
      <term><option>-&minus;write-recovery-conf</option></term>
      <listitem>

       <para>
        Creates a <filename>standby.signal</filename> file and appends
        connection settings to the <filename>postgresql.auto.conf</filename>
        file in the target directory (or within the base archive file when
        using tar format).  This eases setting up a standby server using the
        results of the backup.
       </para>
       <para>
        The <filename>postgresql.auto.conf</filename> file will record the connection
        settings and, if specified, the replication slot
        that <application>pg_basebackup</application> is using, so that
        streaming replication will use the same settings later on.
       </para>

      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-T <replaceable class="parameter">olddir</replaceable>=<replaceable class="parameter">newdir</replaceable></option></term>
      <term><option>-&minus;tablespace-mapping=<replaceable class="parameter">olddir</replaceable>=<replaceable class="parameter">newdir</replaceable></option></term>
      <listitem>
       <para>
        Relocates the tablespace in directory <replaceable>olddir</replaceable>
        to <replaceable>newdir</replaceable> during the backup.  To be
        effective, <replaceable>olddir</replaceable> must exactly match the
        path specification of the tablespace as it is defined on the source
        server.  (But it is not an error if there is no tablespace
        in <replaceable>olddir</replaceable> on the source server.)
        Meanwhile <replaceable>newdir</replaceable> is a directory in the
        receiving host's filesystem.  As with the main target directory,
        <replaceable>newdir</replaceable> need not exist already, but if
        it does exist it must be empty.
        Both <replaceable>olddir</replaceable>
        and <replaceable>newdir</replaceable> must be absolute paths.  If
        either path needs to contain an equal sign (<literal>=</literal>),
        precede that with a backslash.  This option can be specified multiple
        times for multiple tablespaces.
       </para>

       <para>
        If a tablespace is relocated in this way, the symbolic links inside
        the main data directory are updated to point to the new location.  So
        the new data directory is ready to be used for a new server instance
        with all tablespaces in the updated locations.
        </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-&minus;waldir=<replaceable class="parameter">waldir</replaceable></option></term>
      <listitem>
       <para>
        Sets the directory to write WAL (write-ahead log) files to.
        By default WAL files will be placed in
        the <filename>pg_wal</filename> subdirectory of the target
        directory, but this option can be used to place them elsewhere.
        <replaceable>waldir</replaceable> must be an absolute path.
        As with the main target directory,
        <replaceable>waldir</replaceable> need not exist already, but if
        it does exist it must be empty.
        This option can only be specified when
        the backup is in plain format.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-X <replaceable class="parameter">method</replaceable></option></term>
      <term><option>-&minus;wal-method=<replaceable class="parameter">method</replaceable></option></term>
      <listitem>
       <para>
        Includes the required WAL (write-ahead log) files in the
        backup. This will include all write-ahead logs generated during
        the backup. Unless the method <literal>none</literal> is specified,
        it is possible to start a postmaster in the target
        directory without the need to consult the log archive, thus
        making the output a completely standalone backup.
       </para>
       <para>
        The following <replaceable>method</replaceable>s for collecting the
        write-ahead logs are supported:

        <variablelist>
         <varlistentry>
          <term><literal>n</literal></term>
          <term><literal>none</literal></term>
          <listitem>
           <para>
            Don't include write-ahead logs in the backup.
           </para>
          </listitem>
         </varlistentry>

         <varlistentry>
          <term><literal>f</literal></term>
          <term><literal>fetch</literal></term>
          <listitem>
           <para>
            The write-ahead log files are collected at the end of the backup.
            Therefore, it is necessary for the source server's
            <xref linkend="guc-wal-keep-size"/> parameter to be set high
            enough that the required log data is not removed before the end
            of the backup.  If the required log data has been recycled
            before it's time to transfer it, the backup will fail and be
            unusable.
           </para>
           <para>
            When tar format is used, the write-ahead log files will be
            included in the <filename>base.tar</filename> file.
           </para>
          </listitem>
         </varlistentry>

         <varlistentry>
          <term><literal>s</literal></term>
          <term><literal>stream</literal></term>
          <listitem>
           <para>
            Stream write-ahead log data while the backup is being taken.
            This method will open a second connection to the server and
            start streaming the write-ahead log in parallel while running
            the backup.  Therefore, it will require two replication
            connections not just one.  As long as the client can keep up
            with the write-ahead log data, using this method requires no
            extra write-ahead logs to be saved on the source server.
           </para>
           <para>
            When tar format is used, the write-ahead log files will be
            written to a separate file named <filename>pg_wal.tar</filename>
            (if the server is a version earlier than 10, the file will be named
            <filename>pg_xlog.tar</filename>).
           </para>
           <para>
            This value is the default.
           </para>
          </listitem>
         </varlistentry>
        </variablelist></para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-z</option></term>
      <term><option>-&minus;gzip</option></term>
      <listitem>
       <para>
        Enables gzip compression of tar file output, with the default
        compression level. Compression is only available when using
        the tar format, and the suffix <filename>.gz</filename> will
        automatically be added to all tar filenames.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-Z <replaceable class="parameter">level</replaceable></option></term>
      <term><option>-&minus;compress=<replaceable class="parameter">level</replaceable></option></term>
      <listitem>
       <para>
        Enables gzip compression of tar file output, and specifies the
        compression level (0 through 9, 0 being no compression and 9 being best
        compression). Compression is only available when using the tar
        format, and the suffix <filename>.gz</filename> will
        automatically be added to all tar filenames.
       </para>
      </listitem>
     </varlistentry>
    </variablelist>
   </para>
____________________________________________________________________________-->
   <para>
    下列命令行选项控制输出的位置和格式：

    <variablelist>
     <varlistentry>
      <term><option>-D <replaceable class="parameter">directory</replaceable></option></term>
      <term><option>--pgdata=<replaceable class="parameter">directory</replaceable></option></term>
      <listitem>
       <para>
        设置目标目录以将输出写入。如果该目录不存在，<application>pg_basebackup</application>将创建该目录（以及所有丢失的父目录）。如果已经存在，则必须为空。
       </para>
       <para>
        当备份处于 tar 模式中，目标目录可以被指定为<literal>-</literal>（破折号），从而将 tar 文件写入<literal>stdout</literal>。
       </para>
       <para>
        这个选项是必需的。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-F <replaceable class="parameter">format</replaceable></option></term>
      <term><option>--format=<replaceable class="parameter">format</replaceable></option></term>
      <listitem>
       <para>
        为输出选择格式。<replaceable>format</replaceable>可以是下列之一：

        <variablelist>
         <varlistentry>
          <term><literal>p</literal></term>
          <term><literal>plain</literal></term>
          <listitem>
           <para>
            把输出写成平面文件，使用和源服务器数据目录和表空间相同的布局。当集簇没有额外表空间时，整个数据库将被放在目标目录中。如果集簇包含额外的表空间，主数据目录将被放置在目标目录中，但是所有其他表空间将被放在它们位于源服务器上的相同的绝对路径中。
           </para>
           <para>
            这是默认格式。
           </para>
          </listitem>
         </varlistentry>

         <varlistentry>
          <term><literal>t</literal></term>
          <term><literal>tar</literal></term>
          <listitem>
           <para>
            将输出作为tar文件写入目标目录中。 主数据目录的内容将被写入名为<filename>base.tar</filename>的文件，而其他表空间将被写入以该表空间的OID命名的单独的tar文件。
            </para>
           <para>
            如果将目标目录指定为<literal>-</literal>（破折号），则tar内容将被写入标准输出，该标准输出适用于管道传输至<productname>gzip</productname>（例如）。 只有当集簇没有额外表空间并且没有使用WAL流时才允许这样做。
           </para>
           </listitem>
         </varlistentry>
        </variablelist></para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-R</option></term>
      <term><option>--write-recovery-conf</option></term>
      <listitem>

       <para>
        创建一个<filename>standby.signal</filename>文件，并将连接设置附加到目标目录（或使用tar格式的基本存档文件中）的<filename>postgresql.auto.conf</filename>文件中。 这样可以简化使用备份结果设置备用服务器的过程。
       </para> 
       <para>  
        <filename>postgresql.auto.conf</filename>文件将记录连接设置（如果有）以及<application>pg_basebackup</application>所使用的复制槽，这样流复制后面就会使用相同的设置。
       </para>

      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-T <replaceable class="parameter">olddir</replaceable>=<replaceable class="parameter">newdir</replaceable></option></term>
      <term><option>--tablespace-mapping=<replaceable class="parameter">olddir</replaceable>=<replaceable class="parameter">newdir</replaceable></option></term>
      <listitem>
       <para>
        在备份期间将目录<replaceable>olddir</replaceable>中的表空间重定位到<replaceable>newdir</replaceable>中。为使之有效，<replaceable>olddir</replaceable>必须与源服务器上定义的表空间的路径规范完全匹配。（但如果备份中没有包含<replaceable>olddir</replaceable>中的表空间也不是错误）。同时，<replaceable>newdir</replaceable>是接收主机文件系统中的目录。与主目标目录一样，<replaceable>newdir</replaceable>不必已经存在，但是如果确实存在，则必须为空。<replaceable>olddir</replaceable>和<replaceable>newdir</replaceable>必须是绝对路径。如果一个路径凑巧包含了一个<literal>=</literal>符号，可用反斜线对它转义。对于多个表空间可以多次使用这个选项。
       </para>

       <para>
        如果以这种方法重定位一个表空间，主数据目录中的符号链接会被更新成指向新位置。因此新数据目录已经可以被一个所有表空间位于更新后位置的新服务器实例使用。
        </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>--waldir=<replaceable class="parameter">waldir</replaceable></option></term>
      <listitem>
       <para>
        指定用于预写式日志目录的位置。<replaceable>waldir</replaceable>必须是绝对路径。只有当备份是平面文件模式时才能指定事务日志目录。
        设置要写入WAL（预写日志）文件的目录。 默认情况下，WAL文件将放置在目标目录的<filename>pg_wal</filename>子目录中，但是此选项可用于将它们放置在其他位置。<replaceable>waldir</replaceable>必须是绝对路径。与主目标目录一样，<replaceable>waldir</replaceable>不必已经存在，但是如果确实存在，则必须为空。只有当备份是平面文件模式时才可以指定此选项。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-X <replaceable class="parameter">method</replaceable></option></term>
      <term><option>--wal-method=<replaceable class="parameter">method</replaceable></option></term>
      <listitem>
       <para>
        在备份中包括所需的WAL（预写式日志）文件。这包括所有在备份期间产生的预写式日志。除非指定了方法<literal>none</literal>，可以在目标目录中启动postmaster而无需参考日志归档，从而使输出成为完全独立的备份。
       </para>
       <para>
        支持下列收集预写式日志的<replaceable>方法</replaceable>：

        <variablelist>
         <varlistentry>
          <term><literal>n</literal></term>
          <term><literal>none</literal></term>
          <listitem>
           <para>
            不要在备份中包括预写式日志。
           </para>
          </listitem>
         </varlistentry>

         <varlistentry>
          <term><literal>f</literal></term>
          <term><literal>fetch</literal></term>
          <listitem>
           <para>
            在备份末尾收集预写式日志文件。因此，有必要把源服务器的<xref linkend="guc-wal-keep-segments"/>参数设置得足够高，这样在备份末尾之前需要的日志数据不会被移除。如果所需的日志数据在传输之前已被回收，则备份将失败并且无法使用。
           </para>
           <para>
            如果使用tar格式，预写式日志文件将被包含在<filename>base.tar</filename>文件。
           </para>
          </listitem>
         </varlistentry>

         <varlistentry>
          <term><literal>s</literal></term>
          <term><literal>stream</literal></term>
          <listitem>
           <para>
            在进行备份时，流式传输预写式日志数据。将开启一个到服务器的第二连接并且在运行备份时并行开始流传输预写式日志。因此，它将需要两个复制连接，而不仅仅是一个。 只要客户端可以跟上预写式日志数据，使用此方法就不需要在源服务器上保存额外的预写式日志。
           </para>
           <para>
            如果使用tar格式，预写式日志文件被写入到一个单独的名为<filename>pg_wal.tar</filename>的文件（如果服务器的版本超过10，该文件将被命名为<filename>pg_xlog.tar</filename>）。
           </para>
           <para>
            这个值是默认值。
           </para>
          </listitem>
         </varlistentry>
        </variablelist>
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-z</option></term>
      <term><option>--gzip</option></term>
      <listitem>
       <para>
        启用对 tar 文件输出的 gzip 压缩，使用默认的压缩级别。只有使用 tar 格式时压缩才可用，并且会在所有tar文件名后面自动加上后缀<filename>.gz</filename>。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-Z <replaceable class="parameter">level</replaceable></option></term>
      <term><option>--compress=<replaceable class="parameter">level</replaceable></option></term>
      <listitem>
       <para>
        启用对 tar 文件输出的 gzip 压缩，并且制定压缩机别（0 到 9，0 是不压缩，9 是最佳压缩）。只有使用 tar 格式时压缩才可用，并且会在所有tar文件名后面自动加上后缀<filename>.gz</filename>。
       </para>
      </listitem>
     </varlistentry>
    </variablelist>
   </para>
<!--==========================orignal english content==========================
   <para>
    The following command-line options control the generation of the
    backup and the invocation of the program:

    <variablelist>
     <varlistentry>
      <term><option>-c <replaceable class="parameter">fast|spread</replaceable></option></term>
      <term><option>-&minus;checkpoint=<replaceable class="parameter">fast|spread</replaceable></option></term>
      <listitem>
       <para>
        Sets checkpoint mode to fast (immediate) or spread (the default) 
        (see <xref linkend="backup-lowlevel-base-backup"/>).
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-C</option></term>
      <term><option>-&minus;create-slot</option></term>
      <listitem>
       <para>
        Specifies that the replication slot named by the
        <literal>-&minus;slot</literal> option should be created before starting
        the backup.  An error is raised if the slot already exists.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-l <replaceable class="parameter">label</replaceable></option></term>
      <term><option>-&minus;label=<replaceable class="parameter">label</replaceable></option></term>
      <listitem>
       <para>
        Sets the label for the backup. If none is specified, a default value of
        <quote><literal>pg_basebackup base backup</literal></quote> will be used.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-n</option></term>
      <term><option>-&minus;no-clean</option></term>
      <listitem>
       <para>
        By default, when <command>pg_basebackup</command> aborts with an
        error, it removes any directories it might have created before
        discovering that it cannot finish the job (for example, the target
        directory and write-ahead log directory). This option inhibits
        tidying-up and is thus useful for debugging.
       </para>

       <para>
        Note that tablespace directories are not cleaned up either way.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-N</option></term>
      <term><option>-&minus;no-sync</option></term>
      <listitem>
       <para>
        By default, <command>pg_basebackup</command> will wait for all files
        to be written safely to disk.  This option causes
        <command>pg_basebackup</command> to return without waiting, which is
        faster, but means that a subsequent operating system crash can leave
        the base backup corrupt.  Generally, this option is useful for testing
        but should not be used when creating a production installation.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-P</option></term>
      <term><option>-&minus;progress</option></term>
      <listitem>
       <para>
        Enables progress reporting. Turning this on will deliver an approximate
        progress report during the backup. Since the database may change during
        the backup, this is only an approximation and may not end at exactly
        <literal>100%</literal>. In particular, when WAL log is included in the
        backup, the total amount of data cannot be estimated in advance, and
        in this case the estimated target size will increase once it passes the
        total estimate without WAL.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-r <replaceable class="parameter">rate</replaceable></option></term>
      <term><option>-&minus;max-rate=<replaceable class="parameter">rate</replaceable></option></term>
      <listitem>
       <para>
        Sets the maximum transfer rate at which data is collected from the
        source server.  This can be useful to limit the impact
        of <application>pg_basebackup</application> on the server.  Values
        are in kilobytes per second.  Use a suffix of <literal>M</literal>
        to indicate megabytes per second.  A suffix of <literal>k</literal>
        is also accepted, and has no effect.  Valid values are between 32
        kilobytes per second and 1024 megabytes per second.
       </para>
       <para>
        This option always affects transfer of the data directory. Transfer of
        WAL files is only affected if the collection method
        is <literal>fetch</literal>.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-S <replaceable>slotname</replaceable></option></term>
      <term><option>-&minus;slot=<replaceable class="parameter">slotname</replaceable></option></term>
      <listitem>
       <para>
        This option can only be used together with <literal>-X
        stream</literal>.  It causes WAL streaming to use the specified
        replication slot.  If the base backup is intended to be used as a
        streaming-replication standby using a replication slot, the standby
        should then use the same replication slot name as
        <xref linkend="guc-primary-slot-name"/>.  This ensures that the
        primary server does not remove any necessary WAL data in the time
        between the end of the base backup and the start of streaming
        replication on the new standby.
       </para>
       <para>
        The specified replication slot has to exist unless the
        option <option>-C</option> is also used.
       </para>
       <para>
        If this option is not specified and the server supports temporary
        replication slots (version 10 and later), then a temporary replication
        slot is automatically used for WAL streaming.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-v</option></term>
      <term><option>-&minus;verbose</option></term>
      <listitem>
       <para>
        Enables verbose mode. Will output some extra steps during startup and
        shutdown, as well as show the exact file name that is currently being
        processed if progress reporting is also enabled.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-&minus;manifest-checksums=<replaceable class="parameter">algorithm</replaceable></option></term>
      <listitem>
       <para>
        Specifies the checksum algorithm that should be applied to each file
        included in the backup manifest. Currently, the available
        algorithms are <literal>NONE</literal>, <literal>CRC32C</literal>,
        <literal>SHA224</literal>, <literal>SHA256</literal>,
        <literal>SHA384</literal>, and <literal>SHA512</literal>.
        The default is <literal>CRC32C</literal>.
       </para>
       <para>
        If <literal>NONE</literal> is selected, the backup manifest will
        not contain any checksums. Otherwise, it will contain a checksum
        of each file in the backup using the specified algorithm. In addition,
        the manifest will always contain a <literal>SHA256</literal>
        checksum of its own contents. The <literal>SHA</literal> algorithms
        are significantly more CPU-intensive than <literal>CRC32C</literal>,
        so selecting one of them may increase the time required to complete
        the backup.
       </para>
       <para>
        Using a SHA hash function provides a cryptographically secure digest
        of each file for users who wish to verify that the backup has not been
        tampered with, while the CRC32C algorithm provides a checksum that is
        much faster to calculate; it is good at catching errors due to accidental
        changes but is not resistant to malicious modifications.  Note that, to
        be useful against an adversary who has access to the backup, the backup
        manifest would need to be stored securely elsewhere or otherwise
        verified not to have been modified since the backup was taken.
       </para>
       <para>
        <xref linkend="app-pgverifybackup"/> can be used to check the
        integrity of a backup against the backup manifest.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-&minus;manifest-force-encode</option></term>
      <listitem>
       <para>
        Forces all filenames in the backup manifest to be hex-encoded.
        If this option is not specified, only non-UTF8 filenames are
        hex-encoded. This option is mostly intended to test that tools which
        read a backup manifest file properly handle this case.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-&minus;no-estimate-size</option></term>
      <listitem>
       <para>
        Prevents the server from estimating the total
        amount of backup data that will be streamed, resulting in the
        <structfield>backup_total</structfield> column in the
        <structname>pg_stat_progress_basebackup</structname> view
        always being <literal>NULL</literal>.
       </para>
       <para>
        Without this option, the backup will start by enumerating
        the size of the entire database, and then go back and send
        the actual contents. This may make the backup take slightly
        longer, and in particular it will take longer before the first
        data is sent. This option is useful to avoid such estimation
        time if it's too long.
       </para>
       <para>
        This option is not allowed when using <option>-&minus;progress</option>.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-&minus;no-manifest</option></term>
      <listitem>
       <para>
        Disables generation of a backup manifest. If this option is not
        specified, the server will generate and send a backup manifest
        which can be verified using <xref linkend="app-pgverifybackup"/>.
        The manifest is a list of every file present in the backup with the
        exception of any WAL files that may be included. It also stores the
        size, last modification time, and an optional checksum for each file.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-&minus;no-slot</option></term>
      <listitem>
       <para>
        Prevents the creation of a temporary replication slot
        for the backup.
       </para>
       <para>
        By default, if log streaming is selected but no slot name is given
        with the <option>-S</option> option, then a temporary replication
        slot is created (if supported by the source server).
       </para>
       <para>
        The main purpose of this option is to allow taking a base backup when
        the server has no free replication slots.  Using a replication slot
        is almost always preferred, because it prevents needed WAL from being
        removed by the server during the backup.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-&minus;no-verify-checksums</option></term>
      <listitem>
       <para>
        Disables verification of checksums, if they are enabled on the server
        the base backup is taken from.
       </para>
       <para>
        By default, checksums are verified and checksum failures will result
        in a non-zero exit status. However, the base backup will not be
        removed in such a case, as if the <option>-&minus;no-clean</option> option
        had been used.  Checksum verification failures will also be reported
        in the <link linkend="monitoring-pg-stat-database-view">
        <structname>pg_stat_database</structname></link> view.
       </para>
      </listitem>
     </varlistentry>
    </variablelist>
   </para>
____________________________________________________________________________-->
   <para>
    下列命令行选项控制备份的生成和程序的调用：

    <variablelist>
     <varlistentry>
      <term><option>-c <replaceable class="parameter">fast|spread</replaceable></option></term>
      <term><option>--checkpoint=<replaceable class="parameter">fast|spread</replaceable></option></term>
      <listitem>
       <para>
        将检查点模式设置为 fast（立刻）或 spread（默认）（见<xref linkend="backup-lowlevel-base-backup"/>）。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-C</option></term>
      <term><option>--create-slot</option></term>
      <listitem>
       <para>
        指定在启动备份之前应创建由<literal>--slot</literal>选项命名的复制插槽。如果插槽已存在，则会引发错误。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-l <replaceable class="parameter">label</replaceable></option></term>
      <term><option>--label=<replaceable class="parameter">label</replaceable></option></term>
      <listitem>
       <para>
        为备份设置标签。如果没有指定，将使用一个默认值<quote><literal>pg_basebackup base backup</literal></quote>。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-n</option></term>
      <term><option>--no-clean</option></term>
      <listitem>
       <para>
        默认情况下，当<command>pg_basebackup</command>因为一个错误而中止时，它会把它意识到无法完成该工作之前已经创建的目录（例如目标目录和预写式日志目录）都移除。这个选项可以禁止这种清洗，因此可以用于调试。
       </para>

       <para>
        注意不管哪一种方式都不会清除表空间目录。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-N</option></term>
      <term><option>--no-sync</option></term>
      <listitem>
       <para>
        默认情况下，<command>pg_basebackup</command>将等待所有文件被安全地写到磁盘上。这个选项导致<command>pg_basebackup</command>不做这种等待就返回，这样会更快一些，但是也意味着后续发生的操作系统崩溃可能会使得这个基础备份损坏。通常这个选项对测试比较有用，在创建生产安装时不应该使用。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-P</option></term>
      <term><option>--progress</option></term>
      <listitem>
       <para>
        启用进度报告。启用这个选项将在备份期间发表一个大致的进度报告。由于数据库可能在备份期间改变，这仅仅是一种近似并且可能不会刚好在<literal>100%</literal>结束。特别地，当 WAL 日志被包括在备份中时，总数据量无法预先估计，并且在这种情况中估计的目标尺寸会在它经过不带 WAL 的总估计后增加。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-r <replaceable class="parameter">rate</replaceable></option></term>
      <term><option>--max-rate=<replaceable class="parameter">rate</replaceable></option></term>
      <listitem>
       <para>
        设置从源服务器收集数据的最大传输速率。这有助于限制<application>pg_basebackup</application>对服务器的影响。值以每秒千字节为单位。使用后缀<literal>M</literal>表示每秒兆字节数。后缀<literal>k</literal>也可以接受，没有任何影响。有效值介于每秒32千字节和每秒1024兆字节之间。
       </para>
       <para>
        此选项始终影响数据目录的传输。只有收集方法为<literal>fetch</literal>时，才会影响WAL文件的传输。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-S <replaceable>slotname</replaceable></option></term>
      <term><option>--slot=<replaceable class="parameter">slotname</replaceable></option></term>
      <listitem>
       <para>
        这个选项仅能与<literal>-X stream</literal>一起使用。它导致WAL流使用指定的复制槽。如果该基础备份的目的是被用作一台使用复制槽的流复制后备，则它应该使用与<xref linkend="guc-primary-slot-name"/>中相同的复制槽名称。这可以确保主服务器不会移除位于该基础备份结束与新备用数据库上流复制开始之间产生的任何所需的WAL数据。
       </para>
       <para>
        指定的复制槽必须已经存在，除非同时使用了选项<option>-C</option>。
       </para>
       <para>
        如果这个选项没有被指定并且服务器支持临时复制槽（版本10以后），则会自动使用一个临时复制槽来进行WAL流。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-v</option></term>
      <term><option>--verbose</option></term>
      <listitem>
       <para>
        启用冗长模式。将在启动和关闭期间输出一些额外步骤，并且如果进度报告也被启用，还会显示当前正在被处理的确切文件名。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>--manifest-checksums=<replaceable class="parameter">algorithm</replaceable></option></term>
      <listitem>
       <para>
        指定应应用于备份清单中包含的每个文件的校验和算法。目前，可用的算法有<literal>NONE</literal>、<literal>CRC32C</literal>、<literal>SHA224</literal>、<literal>SHA256</literal>、
        <literal>SHA384</literal>和<literal>SHA512</literal>。默认值为<literal>CRC32C</literal>。
       </para>
       <para>
        如果选择了<literal>NONE</literal>，备份清单将不包含任何校验和。否则，它将包含备份中使用指定算法的每个文件的校验和。此外，清单将始终包含自身内容的<literal>SHA256</literal>校验和。<literal>SHA</literal>算法比<literal>CRC32C</literal>算法占用大量CPU，因此选择其中一种算法可能会增加完成备份所需的时间。
       </para>
       <para>
        使用SHA散列函数可为希望验证备份是否遭到篡改的用户提供每个文件的加密安全摘要，而CRC32C算法提供的校验和计算速度更快。它擅长捕获由于意外更改引起的错误，但不能抵抗恶意修改。 请注意，为了对有权访问备份的对手有用，备份清单必须安全地存储在其他位置，否则必须经过验证以确保自从进行备份以来未进行任何修改。
       </para>
       <para>
        <xref linkend="app-pgverifybackup"/>可用于根据备份清单检查备份的完整性。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>--manifest-force-encode</option></term>
      <listitem>
       <para>
        强制备份清单中的所有文件名采用十六进制编码。如果未指定此选项，则仅对非UTF8文件名进行十六进制编码。此选项主要用于测试读取备份清单文件的工具是否正确处理此情况。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>--no-estimate-size</option></term>
      <listitem>
       <para>
        阻止服务器估计将要流式传输的备份数据总量，从而导致<structname>pg_stat_progress_basebackup</structname>视图中的<structfield>backup_total</structfield>列始终为<literal>NULL</literal>。
       </para>
       <para>
        如果没有此选项，则备份将从枚举整个数据库的大小开始，然后返回并发送实际内容。这可能会使备份花费的时间稍长一些，特别是在发送第一个数据之前，备份将花费更长的时间。
        如果估计时间过长，此选项将有助于避免此类估计时间。
       </para>
       <para>
        使用<option>--progress</option>时不允许使用此选项。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>--no-manifest</option></term>
      <listitem>
       <para>
        禁用备份清单的生成。如果未指定此选项，则服务器将生成并发送备份清单，可以使用<xref linkend="app-pgverifybackup"/>进行验证。清单是备份中存在的每个文件的列表，可能包含的所有WAL文件除外。它还存储大小、上次修改时间和每个文件的可选校验和。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>--no-slot</option></term>
      <listitem>
       <para>
        防止为备份创建临时复制插槽。
       </para>
       <para>
        默认情况下，如果选择了日志流，但没有用选项<option>-S</option>指定槽名称，则会创建一个临时复制插槽（如果源服务器支持）。
       </para>
       <para>
        这个选项的主要目的是允许在服务器没有空闲复制槽可用时制作基础备份。使用复制槽几乎总是最好的方式，因为它能防止备份期间所需的WAL被删除。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>--no-verify-checksums</option></term>
      <listitem>
       <para>
        如果在取基础备份的服务器上启用了校验码验证，则禁用校验码验证。
       </para>
       <para>
        默认情况下，校验码会被验证并且校验码失败将会导致一种非零的退出状态。不过，基础备份在这种情况下将不会被移除，就好像使用了<option>--no-clean</option>选项一样。校验和验证失败也将报告在 <link linkend="monitoring-pg-stat-database-view"><structname>pg_stat_database</structname></link>视图中。
       </para>
      </listitem>
     </varlistentry>
    </variablelist>
   </para>

<!--==========================orignal english content==========================
   <para>
    The following command-line options control the connection to the source
    server:

    <variablelist>
     <varlistentry>
      <term><option>-d <replaceable class="parameter">connstr</replaceable></option></term>
      <term><option>-&minus;dbname=<replaceable class="parameter">connstr</replaceable></option></term>
      <listitem>
       <para>
        Specifies parameters used to connect to the server, as a <link
        linkend="libpq-connstring">connction string</link>;  these
        will override any conflicting command line options.
       </para>
       <para>
        The option is called <literal>-&minus;dbname</literal> for consistency with other
        client applications, but because <application>pg_basebackup</application>
        doesn't connect to any particular database in the cluster, any database
        name in the connection string will be ignored.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-h <replaceable class="parameter">host</replaceable></option></term>
      <term><option>-&minus;host=<replaceable class="parameter">host</replaceable></option></term>
      <listitem>
       <para>
        Specifies the host name of the machine on which the server is
        running.  If the value begins with a slash, it is used as the
        directory for a Unix domain socket. The default is taken
        from the <envar>PGHOST</envar> environment variable, if set,
        else a Unix domain socket connection is attempted.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-p <replaceable class="parameter">port</replaceable></option></term>
      <term><option>-&minus;port=<replaceable class="parameter">port</replaceable></option></term>
      <listitem>
       <para>
        Specifies the TCP port or local Unix domain socket file
        extension on which the server is listening for connections.
        Defaults to the <envar>PGPORT</envar> environment variable, if
        set, or a compiled-in default.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-s <replaceable class="parameter">interval</replaceable></option></term>
      <term><option>-&minus;status-interval=<replaceable class="parameter">interval</replaceable></option></term>
      <listitem>
       <para>
        Specifies the number of seconds between status packets sent back to
        the source server. Smaller values allow more accurate monitoring of
        backup progress from the server.
        A value of zero disables periodic status updates completely,
        although an update will still be sent when requested by the server, to
        avoid timeout-based disconnects. The default value is 10 seconds.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-U <replaceable>username</replaceable></option></term>
      <term><option>-&minus;username=<replaceable class="parameter">username</replaceable></option></term>
      <listitem>
       <para>
        Specifies the user name to connect as.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-w</option></term>
      <term><option>-&minus;no-password</option></term>
      <listitem>
       <para>
        Prevents issuing a password prompt.  If the server requires
        password authentication and a password is not available by
        other means such as a <filename>.pgpass</filename> file, the
        connection attempt will fail.  This option can be useful in
        batch jobs and scripts where no user is present to enter a
        password.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-W</option></term>
      <term><option>-&minus;password</option></term>
      <listitem>
       <para>
        Forces <application>pg_basebackup</application> to prompt for a
        password before connecting to the source server.
       </para>

       <para>
        This option is never essential, since
        <application>pg_basebackup</application> will automatically prompt
        for a password if the server demands password authentication.
        However, <application>pg_basebackup</application> will waste a
        connection attempt finding out that the server wants a password.
        In some cases it is worth typing <option>-W</option> to avoid the extra
        connection attempt.
       </para>
      </listitem>
     </varlistentry>
    </variablelist>
   </para>
____________________________________________________________________________-->
   <para>
    以下命令行选项控制到源服务器的连接：

    <variablelist>
     <varlistentry>
      <term><option>-d <replaceable class="parameter">connstr</replaceable></option></term>
      <term><option>--dbname=<replaceable class="parameter">connstr</replaceable></option></term>
      <listitem>
       <para>
        指定用于连接到服务器的参数，比如<link linkend="libpq-connstring">连接字符串</link>；这些将覆盖所有冲突的命令行选项。
       </para>
       <para>
        为了和其他客户端应用一致，该选项被称为<literal>--dbname</literal>。但是因为<application>pg_basebackup</application>并不连接到集簇中的任何特定数据库，连接字符串中的任何数据库名将被忽略。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-h <replaceable class="parameter">host</replaceable></option></term>
      <term><option>--host=<replaceable class="parameter">host</replaceable></option></term>
      <listitem>
       <para>
        指定运行服务器的机器的主机名。如果该值以一个斜线开始，它被用作 Unix 域套接字的目录。默认值取自<envar>PGHOST</envar>环境变量（如果设置），否则会尝试一个 Unix 域套接字连接。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-p <replaceable class="parameter">port</replaceable></option></term>
      <term><option>--port=<replaceable class="parameter">port</replaceable></option></term>
      <listitem>
       <para>
        指定服务器正在监听连接的 TCP 端口或本地 Unix 域套接字文件扩展。默认用<envar>PGPORT</envar>环境变量中的值（如果设置），或者一个编译在程序中的默认值。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-s <replaceable class="parameter">interval</replaceable></option></term>
      <term><option>--status-interval=<replaceable class="parameter">interval</replaceable></option></term>
      <listitem>
       <para>
        指定发送回源服务器的状态包之间的秒数。较小的值可以更准确地监视服务器的备份进度。一个零值完全禁用这种周期性的状态更新，不过当服务器需要时还是会有一个更新会被发送来避免超时导致的断开连接。默认值是 10 秒。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-U <replaceable>username</replaceable></option></term>
      <term><option>--username=<replaceable class="parameter">username</replaceable></option></term>
      <listitem>
       <para>
        指定连接的用户名。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-w</option></term>
      <term><option>--no-password</option></term>
      <listitem>
       <para>
        防止发出口令提示。如果服务器要求口令认证并且没有其他方式提供口令（例如一个<filename>.pgpass</filename>文件），那儿连接尝试将失败。这个选项对于批处理任务和脚本有用，因为在其中没有一个用户来输入口令。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-W</option></term>
      <term><option>--password</option></term>
      <listitem>
       <para>
        强制<application>pg_basebackup</application>在连接到源服务器之前提示要求一个口令。
       </para>

       <para>
        这个选项不是必不可少的，因为如果服务器要求口令认证，<application>pg_basebackup</application>将自动提示要求一个口令。但是，<application>pg_basebackup</application>将浪费一次连接尝试来发现服务器想要一个口令。在某些情况下值得用<option>-W</option>来避免额外的连接尝试。
       </para>
      </listitem>
     </varlistentry>
    </variablelist>
   </para>

<!--==========================orignal english content==========================
   <para>
    Other options are also available:

    <variablelist>
     <varlistentry>
       <term><option>-V</option></term>
       <term><option>-&minus;version</option></term>
       <listitem>
       <para>
       Prints the <application>pg_basebackup</application> version and exits.
       </para>
       </listitem>
     </varlistentry>

     <varlistentry>
       <term><option>-?</option></term>
       <term><option>-&minus;help</option></term>
       <listitem>
       <para>
       Shows help about <application>pg_basebackup</application> command line
       arguments, and exits.
       </para>
       </listitem>
     </varlistentry>

    </variablelist>
   </para>
____________________________________________________________________________-->
   <para>
    其他选项也可用：

    <variablelist>
     <varlistentry>
       <term><option>-V</option></term>
       <term><option>--version</option></term>
       <listitem>
       <para>
       打印<application>pg_basebackup</application>版本并退出。
       </para>
       </listitem>
     </varlistentry>

     <varlistentry>
       <term><option>-?</option></term>
       <term><option>--help</option></term>
       <listitem>
       <para>
       显示有关<application>pg_basebackup</application>命令行参数的帮助并退出。
       </para>
       </listitem>
     </varlistentry>

    </variablelist>
   </para>

 </refsect1>

 <refsect1>
<!--==========================orignal english content==========================
  <title>Environment</title>
____________________________________________________________________________-->
  <title>环境</title>

<!--==========================orignal english content==========================
  <para>
   This utility, like most other <productname>PostgreSQL</productname> utilities,
   uses the environment variables supported by <application>libpq</application>
   (see <xref linkend="libpq-envars"/>).
  </para>
____________________________________________________________________________-->
  <para>
   和大部分其他<productname>PostgreSQL</productname>工具相似，这个工具也使用<application>libpq</application>（见<xref linkend="libpq-envars"/>）支持的环境变量。
  </para>

<!--==========================orignal english content==========================
  <para>
   The environment variable <envar>PG_COLOR</envar> specifies whether to use
   color in diagnostic messages. Possible values are
   <literal>always</literal>, <literal>auto</literal> and
   <literal>never</literal>.
  </para>
____________________________________________________________________________-->
  <para>
   环境变量<envar>PG_COLOR</envar>规定在诊断消息中是否使用颜色。可能的值为<literal>always</literal>、<literal>auto</literal>、<literal>never</literal>。
  </para>
 </refsect1>

 <refsect1>
<!--==========================orignal english content==========================
  <title>Notes</title>
____________________________________________________________________________-->
  <title>注解</title>

<!--==========================orignal english content==========================
  <para>
   At the beginning of the backup, a checkpoint needs to be performed on the
   source server.  This can take some time (especially if the option
   <literal>-&minus;checkpoint=fast</literal> is not used), during
   which <application>pg_basebackup</application> will appear to be idle.
  </para>
____________________________________________________________________________-->
  <para>
   在备份的开始时，需要在源服务器上执行检查点。这可能需要一点时间（尤其在没有使用选项<literal>--checkpoint=fast</literal>时），在此期间<application>pg_basebackup</application>看起来处于闲置状态。
  </para>

<!--==========================orignal english content==========================
  <para>
   The backup will include all files in the data directory and tablespaces,
   including the configuration files and any additional files placed in the
   directory by third parties, except certain temporary files managed by
   PostgreSQL.  But only regular files and directories are copied, except that
   symbolic links used for tablespaces are preserved.  Symbolic links pointing
   to certain directories known to PostgreSQL are copied as empty directories.
   Other symbolic links and special device files are skipped.
   See <xref linkend="protocol-replication"/> for the precise details.
  </para>
____________________________________________________________________________-->
  <para>
   备份将包括数据目录和表空间中的所有文件，包括配置文件以及由第三方放在该目录中的任何额外文件，不过由PostgreSQL管理的特定临时文件除外。但只有常规文件和目录会被拷贝，但用于表空间的符号链接会被保留。指向PostgreSQL已知的特定目录的符号链接被拷贝为空目录。其他符号链接和特殊设备文件会被跳过。准确的细节请参考<xref linkend="protocol-replication"/>。
  </para>

<!--==========================orignal english content==========================
  <para>
   In plain format, tablespaces will be backed up to the same path
   they have on the source server, unless the
   option <literal>-&minus;tablespace-mapping</literal> is used.  Without
   this option, running a plain format base backup on the same host as the
   server will not work if tablespaces are in use, because the backup would
   have to be written to the same directory locations as the original
   tablespaces.
  </para>
____________________________________________________________________________-->
  <para>
   在普通格式中，表空间将备份到源服务器上的相同路径，除非使用了<literal>--tablespace-mapping</literal>选项。如果没有这个选项并且表空间正在使用，在同一台服务器上进行普通格式的基础备份将无法工作，因为备份必须要写入到与原始表空间相同的目录位置。
  </para>

<!--==========================orignal english content==========================
  <para>
   When tar format is used, it is the user's responsibility to unpack each
   tar file before starting a PostgreSQL server that uses the data. If there
   are additional tablespaces, the
   tar files for them need to be unpacked in the correct locations. In this
   case the symbolic links for those tablespaces will be created by the server
   according to the contents of the <filename>tablespace_map</filename> file that is
   included in the <filename>base.tar</filename> file.
  </para>
____________________________________________________________________________-->
  <para>
   在使用 tar 格式时，用户应负责在启动使用数据的 PostgreSQL 服务器前解压每一个 tar 文件。如果有额外的表空间，用于它们的 tar 文件需要被解压到正确的位置。在这种情况下，服务器将根据包含在<filename>base.tar</filename>文件中的<filename>tablespace_map</filename>文件的内容为那些表空间创建符号链接。
  </para>

<!--==========================orignal english content==========================
  <para>
   <application>pg_basebackup</application> works with servers of the same
   or an older major version, down to 9.1. However, WAL streaming mode (<literal>-X
   stream</literal>) only works with server version 9.3 and later, and tar format
   (<literal>-&minus;format=tar</literal>) only works with server version 9.5
   and later.
  </para>
____________________________________________________________________________-->
  <para>
   <application>pg_basebackup</application>可以和具有相同或较低主版本的服务器一起工作，最低是 9.1。但是，WAL 流模式（<literal>-X 流</literal>）只能和版本为 9.3 及以上版本的服务器一起工作。tar 格式（<literal>--format=tar</literal>）只能用于版本 9.5 及以上的服务器。
  </para>

<!--==========================orignal english content==========================
  <para>
   <application>pg_basebackup</application> will preserve group permissions
   for data files if group permissions are enabled on the source cluster.
  </para>
____________________________________________________________________________-->
  <para>
   如果在源集簇上启用了组权限，<application>pg_basebackup</application>将保留数据文件的组权限。
  </para>
 </refsect1>

 <refsect1>
<!--==========================orignal english content==========================
  <title>Examples</title>
____________________________________________________________________________-->
  <title>例子</title>

<!--==========================orignal english content==========================
  <para>
   To create a base backup of the server at <literal>mydbserver</literal>
   and store it in the local directory
   <filename>/usr/local/pgsql/data</filename>:
<screen>
<prompt>$</prompt> <userinput>pg_basebackup -h mydbserver -D /usr/local/pgsql/data</userinput>
</screen>
  </para>
____________________________________________________________________________-->
  <para>
   要创建服务器<literal>mydbserver</literal>的一个基础备份并将它存储在本地目录<filename>/usr/local/pgsql/data</filename>中：
<screen>
<prompt>$</prompt> <userinput>pg_basebackup -h mydbserver -D /usr/local/pgsql/data</userinput>
</screen>
  </para>

<!--==========================orignal english content==========================
  <para>
   To create a backup of the local server with one compressed
   tar file for each tablespace, and store it in the directory
   <filename>backup</filename>, showing a progress report while running:
<screen>
<prompt>$</prompt> <userinput>pg_basebackup -D backup -Ft -z -P</userinput>
</screen>
  </para>
____________________________________________________________________________-->
  <para>
   要创建本地服务器的一个备份，为其中每一个表空间产生一个压缩过的 tar 文件，并且将它存储在目录<filename>backup</filename>中，在运行期间显示一个进度报告：
<screen>
<prompt>$</prompt> <userinput>pg_basebackup -D backup -Ft -z -P</userinput>
</screen>
  </para>

<!--==========================orignal english content==========================
  <para>
   To create a backup of a single-tablespace local database and compress
   this with <productname>bzip2</productname>:
<screen>
<prompt>$</prompt> <userinput>pg_basebackup -D - -Ft -X fetch | bzip2 &gt; backup.tar.bz2</userinput>
</screen>
   (This command will fail if there are multiple tablespaces in the
   database.)
  </para>
____________________________________________________________________________-->
  <para>
   要创建一个单一表空间本地数据库的备份并且使用<productname>bzip2</productname>压缩它：
<screen>
<prompt>$</prompt> <userinput>pg_basebackup -D - -Ft -X fetch | bzip2 &gt; backup.tar.bz2</userinput>
</screen>
   （如果在该数据库中有多个表空间，这个命令将失败）。
  </para>

<!--==========================orignal english content==========================
  <para>
   To create a backup of a local database where the tablespace in
   <filename>/opt/ts</filename> is relocated
   to <filename>./backup/ts</filename>:
<screen>
<prompt>$</prompt> <userinput>pg_basebackup -D backup/data -T /opt/ts=$(pwd)/backup/ts</userinput>
</screen></para>
____________________________________________________________________________-->
  <para>
   要创建一个本地数据库的备份，其中<filename>/opt/ts</filename>中的表空间被重定位到<filename>./backup/ts</filename>：
<screen>
<prompt>$</prompt> <userinput>pg_basebackup -D backup/data -T /opt/ts=$(pwd)/backup/ts</userinput>
</screen></para>
 </refsect1>

 <refsect1>
<!--==========================orignal english content==========================
  <title>See Also</title>
____________________________________________________________________________-->
  <title>参见</title>

  <simplelist type="inline">
   <member><xref linkend="app-pgdump"/></member>
  </simplelist>
 </refsect1>

</refentry>
