<!--
doc/src/sgml/ref/listen.sgml
PostgreSQL documentation
-->

<refentry id="SQL-LISTEN">
 <indexterm zone="sql-listen">
  <primary>LISTEN</primary>
 </indexterm>
 
 <refmeta>
  <refentrytitle>LISTEN</refentrytitle>
  <manvolnum>7</manvolnum>
  <refmiscinfo>SQL - 语言语句</refmiscinfo>
 </refmeta>

 <refnamediv>
  <refname>LISTEN</refname>
  <refpurpose>监听一个通知</refpurpose>
 </refnamediv>

 <refsynopsisdiv>
<synopsis>
LISTEN <replaceable class="PARAMETER">channel</replaceable>
</synopsis>
 </refsynopsisdiv>

 <refsect1>
  <title>描述</title>

  <para>
   <command>LISTEN</command>在名为<replaceable class="PARAMETER">channel</replaceable>的通知频道上将当前会话注册为一个监听者。如果当前会话已经被注册为这个通知频道的一个监听者，则什么也不会发生。
  </para>

  <para>
   只要命令<command>NOTIFY <replaceable class="PARAMETER">channel</replaceable></command>被调用（不管是在这个会话还是在另一个连接到同一数据库的会话中），所有当前正在该通知频道上监听的会话都会被通知，并且每一个会话将会接着通知连接到它的客户端应用。
  </para>

  <para>
   可以使用<command>UNLISTEN</command>命令在一个给定通知频道上反注册一个会话。当会话结束时，它的监听注册会被自动清除。
  </para>

  <para>
   一个客户端应用检测通知事件的必用方法取决于它使用的<productname>PostgreSQL</productname>应用编程接口。如果使用<application>libpq</>库，应用会将<command>LISTEN</command>作为一个普通 SQL 命令发出，并且接着必须周期性地调用函数<function>PQnotifies</function>来查看是否接收到通知事件。其他诸如<application>libpgtcl</>的接口提供了更高层次上的处理通知事件的方法。事实上，通过使用<application>libpgtcl</>应用程序员甚至不必直接发出<command>LISTEN</command>或<command>UNLISTEN</command>。更多细节可参阅所使用的接口的文档。
  </para>

  <para>
   <xref linkend="sql-notify">包含了使用<command>LISTEN</command>和<command>NOTIFY</command>的更广泛的讨论。
  </para>
 </refsect1>

 <refsect1>
  <title>参数</title>

  <variablelist>
   <varlistentry>
    <term><replaceable class="PARAMETER">channel</replaceable></term>
    <listitem>
     <para>
      一个通知频道的名称（任意标识符）。
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </refsect1>

 <refsect1>
  <title>注解</title>

  <para>
   <command>LISTEN</command>在事务提交时生效。如果在一个后来被回滚的事务中执行了<command>LISTEN</command>或<command>UNLISTEN</command>，被监听的通知频道集合不会变化。
  </para>
  <para>
   一个已经执行了<command>LISTEN</command>的事务不能为两阶段提交做准备。
  </para>
 </refsect1>

 <refsect1>
  <title>例子</title>

  <para>
   从<application>psql</application>中配置并执行一个监听/通知序列

<programlisting>
LISTEN virtual;
NOTIFY virtual;
Asynchronous notification "virtual" received from server process with PID 8448.
</programlisting></para>
 </refsect1>

 <refsect1>
  <title>兼容性</title>

  <para>
   在 SQL 标准中没有<command>LISTEN</command>语句。
  </para>
 </refsect1>

 <refsect1>
  <title>参见</title>

  <simplelist type="inline">
   <member><xref linkend="sql-notify"></member>
   <member><xref linkend="sql-unlisten"></member>
  </simplelist>
 </refsect1>
</refentry>
