<!--
doc/src/sgml/ref/rollback_to.sgml
PostgreSQL documentation
-->

<refentry id="SQL-ROLLBACK-TO">
 <indexterm zone="sql-rollback-to">
  <primary>ROLLBACK TO SAVEPOINT</primary>
 </indexterm>

 <indexterm zone="sql-rollback-to">
  <primary>savepoints</primary>
  <secondary>rolling back</secondary>
 </indexterm>

 <refmeta>
  <refentrytitle>ROLLBACK TO SAVEPOINT</refentrytitle>
  <manvolnum>7</manvolnum>
  <refmiscinfo>SQL - Language Statements</refmiscinfo>
 </refmeta>

 <refnamediv>
  <refname>ROLLBACK TO SAVEPOINT</refname>
  <refpurpose>回滚到一个保存点</refpurpose>
 </refnamediv>

 <refsynopsisdiv>
<synopsis>
ROLLBACK [ WORK | TRANSACTION ] TO [ SAVEPOINT ] <replaceable>savepoint_name</replaceable>
</synopsis>
 </refsynopsisdiv>

 <refsect1>
  <title>描述</title>

  <para>
   回滚在该保存点被建立之后执行的所有命令。该保存点保持有效并且可以在
   以后再次回滚到它（如果需要）。
  </para>

  <para>
   <command>ROLLBACK TO SAVEPOINT</>隐式地销毁在所提及的保存点
   之后建立的所有保存点。
  </para>
 </refsect1>

 <refsect1>
  <title>参数</title>

  <variablelist>
   <varlistentry>
    <term><replaceable class="PARAMETER">savepoint_name</></term>
    <listitem>
     <para>
      要回滚到的保存点。
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </refsect1>

 <refsect1>
  <title>注解</title>

  <para>
   使用<xref linkend="SQL-RELEASE-SAVEPOINT">销毁一个保存点而
   不抛弃在它建立之后被执行的命令的效果。
  </para>

  <para>
   指定一个没有被建立的保存点是一种错误。
  </para>

  <para>
   相对于保存点，游标有一点非事务的行为。在保存点被回滚时，任何在该保存点
   内被打开的游标将会被关闭。如果一个先前打开的游标在一个保存点内被
   <command>FETCH</>或<command>MOVE</>命令所影响，而该该保存点
   后来又被回滚，那么该游标将保持<command>FETCH</>使它指向的位置（也
   就是说由<command>FETCH</>导致的游标动作不会被回滚）。回滚也不能
   撤销关闭一个游标。不过，其他由游标查询导致的副作用（例如
   被该查询所调用的易变函数的副作用）
   <emphasis>可以</>被回滚，只要它们发生在一个后来被回滚的保存点期间。
   如果一个游标的执行导致事务中止，它会被置于一种不能被执行的状态，这样当
   事务被用<command>ROLLBACK TO SAVEPOINT</>恢复后，该游标也不再能
   被使用。
  </para>
 </refsect1>

 <refsect1>
  <title>示例</title>

  <para>
   要撤销在<literal>my_savepoint</literal>建立后执行的命令的效果：
<programlisting>
ROLLBACK TO SAVEPOINT my_savepoint;
</programlisting>
  </para>

  <para>
   游标位置不会受保存点回滚的影响：
<programlisting>
BEGIN;

DECLARE foo CURSOR FOR SELECT 1 UNION SELECT 2;

SAVEPOINT foo;

FETCH 1 FROM foo;
 ?column? 
----------
        1

ROLLBACK TO SAVEPOINT foo;

FETCH 1 FROM foo;
 ?column? 
----------
        2

COMMIT;
</programlisting></para>


 </refsect1>

 <refsect1>
  <title>兼容性</title>

  <para>
   <acronym>SQL</>标准指定关键词
   <literal>SAVEPOINT</>是强制的，但是<productname>PostgreSQL</>
   和<productname>Oracle</>允许省略它。SQL 只允许<literal>WORK</>而
   不是<literal>TRANSACTION</>作为<literal>ROLLBACK</>之后的噪声词。
   还有，SQL 有一个可选的子句
   <literal>AND [ NO ] CHAIN</>，当前
   <productname>PostgreSQL</>并不支持。在其他方面，这个命令符合 SQL 标准。
  </para>
 </refsect1>

 <refsect1>
  <title>另见</title>

  <simplelist type="inline">
   <member><xref linkend="sql-begin"></member>
   <member><xref linkend="sql-commit"></member>
   <member><xref linkend="sql-release-savepoint"></member>
   <member><xref linkend="sql-rollback"></member>
   <member><xref linkend="sql-savepoint"></member>
  </simplelist>
 </refsect1>
</refentry>
