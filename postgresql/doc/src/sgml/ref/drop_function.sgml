<!--
doc/src/sgml/ref/drop_function.sgml
PostgreSQL documentation
-->

<refentry id="SQL-DROPFUNCTION">
 <indexterm zone="sql-dropfunction">
  <primary>DROP FUNCTION</primary>
 </indexterm>

 <refmeta>
  <refentrytitle>DROP FUNCTION</refentrytitle>
  <manvolnum>7</manvolnum>
  <refmiscinfo>SQL - Language Statements</refmiscinfo>
 </refmeta>

 <refnamediv>
  <refname>DROP FUNCTION</refname>
  <refpurpose>移除一个函数</refpurpose>
 </refnamediv>

 <refsynopsisdiv>
<synopsis>
DROP FUNCTION [ IF EXISTS ] <replaceable class="parameter">name</replaceable> ( [ [ <replaceable class="parameter">argmode</replaceable> ] [ <replaceable class="parameter">argname</replaceable> ] <replaceable class="parameter">argtype</replaceable> [, ...] ] )
    [ CASCADE | RESTRICT ]
</synopsis>
 </refsynopsisdiv>

 <refsect1>
  <title>描述</title>

  <para>
   <command>DROP FUNCTION</command>移除一个已有函数
   的定义。要执行这个命令用户必须是该函数的拥有者。该函数的参数
   类型必须被指定，因为多个不同的函数可能会具有相同的函数名和不
   同的参数列表。
  </para>
 </refsect1>

 <refsect1>
  <title>参数</title>

  <variablelist>
    <varlistentry>
    <term><literal>IF EXISTS</literal></term>
    <listitem>
     <para>
      如果该函数不存在则不要抛出一个错误，而是发出一个提示。
     </para>
    </listitem>
   </varlistentry>

  <varlistentry>
    <term><replaceable class="parameter">name</replaceable></term>
    <listitem>
     <para>
      一个现有函数的名称（可以是模式限定的）。
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><replaceable class="parameter">argmode</replaceable></term>

    <listitem>
     <para>
      一个参数的模式：<literal>IN</>、<literal>OUT</>、
      <literal>INOUT</>或者<literal>VARIADIC</>。如果被忽略，
      则默认为<literal>IN</>。注意
      <command>DROP FUNCTION</command>并不真正关心
      <literal>OUT</>参数，因为决定函数的身份时只需要输入参数。
      因此列出<literal>IN</>、<literal>INOUT</>和
      <literal>VARIADIC</>参数足以。
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><replaceable class="parameter">argname</replaceable></term>

    <listitem>
     <para>
      一个参数的名称。注意
      <command>DROP FUNCTION</command>并不真正关心
      参数名称，因为决定函数的身份时只需要参数的数据类型。
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><replaceable class="parameter">argtype</replaceable></term>

    <listitem>
     <para>
      如果函数有参数，这是函数参数的数据类型（可以是模式限定的）。
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>CASCADE</literal></term>
    <listitem>
     <para>
      自动删除依赖于该函数的对象（例如操作符和触发器）。
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>RESTRICT</literal></term>
    <listitem>
     <para>
      如果有任何对象依赖于该函数，则拒绝删除它。这是默认值。
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </refsect1>

 <refsect1 id="SQL-DROPFUNCTION-examples">
  <title>示例</title>

  <para>
   这个命令移除平方根函数：

<programlisting>
DROP FUNCTION sqrt(integer);
</programlisting></para>
 </refsect1>

 <refsect1 id="SQL-DROPFUNCTION-compatibility">
  <title>兼容性</title>

  <para>
   SQL 标准中定义了一个
   <command>DROP FUNCTION</command>语句，
   但是它与这个命令不兼容。
  </para>
 </refsect1>

 <refsect1>
  <title>另见</title>

  <simplelist type="inline">
   <member><xref linkend="sql-createfunction"></member>
   <member><xref linkend="sql-alterfunction"></member>
  </simplelist>
 </refsect1>

</refentry>
