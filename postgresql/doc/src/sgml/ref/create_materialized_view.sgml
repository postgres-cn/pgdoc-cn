<!--
doc/src/sgml/ref/create_materialized_view.sgml
PostgreSQL documentation
-->

<refentry id="SQL-CREATEMATERIALIZEDVIEW">
 <indexterm zone="sql-creatematerializedview">
  <primary>CREATE MATERIALIZED VIEW</primary>
 </indexterm>

 <refmeta>
  <refentrytitle>CREATE MATERIALIZED VIEW</refentrytitle>
  <manvolnum>7</manvolnum>
  <refmiscinfo>SQL - Language Statements</refmiscinfo>
 </refmeta>

 <refnamediv>
  <refname>CREATE MATERIALIZED VIEW</refname>
  <refpurpose>定义一个新的物化视图</refpurpose>
 </refnamediv>

 <refsynopsisdiv>
<synopsis>
CREATE MATERIALIZED VIEW <replaceable>table_name</replaceable>
    [ (<replaceable>column_name</replaceable> [, ...] ) ]
    [ WITH ( <replaceable class="PARAMETER">storage_parameter</replaceable> [= <replaceable class="PARAMETER">value</replaceable>] [, ... ] ) ]
    [ TABLESPACE <replaceable class="PARAMETER">tablespace_name</replaceable> ]
    AS <replaceable>query</replaceable>
    [ WITH [ NO ] DATA ]
</synopsis>
 </refsynopsisdiv>

 <refsect1>
  <title>描述</title>

  <para>
   <command>CREATE MATERIALIZED VIEW</command>定义一个查询的物化视图。
   在该命令被发出时，查询会被执行并且被用来填充该视图（除非使用了
   <command>WITH NO DATA</>），并且后来可能会用
   <command>REFRESH MATERIALIZED VIEW</command>进行刷新。
  </para>

  <para>
   <command>CREATE MATERIALIZED VIEW</command>类似于
   <command>CREATE TABLE AS</>，不过它还会记住被用来初始化该视图的查询，
   这样它可以在后来被命令刷新。一个物化视图有很多和表相同的属性，但是不支持
   临时物化视图以及自动生成  OID。
  </para>
 </refsect1>

 <refsect1>
  <title>参数</title>

  <variablelist>
   <varlistentry>
    <term><replaceable>table_name</replaceable></term>
    <listitem>
     <para>
      要创建的物化视图的名称（可以被模式限定）。
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><replaceable>column_name</replaceable></term>
    <listitem>
     <para>
      新物化视图中的一个列名。如果没有提供列名，会从查询的输出列名来得到。
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>WITH ( <replaceable class="PARAMETER">storage_parameter</replaceable> [= <replaceable class="PARAMETER">value</replaceable>] [, ... ] )</literal></term>
    <listitem>
     <para>
      这个子句为新的物化视图指定可选的存储参数，详见
      <xref linkend="sql-createtable-storage-parameters"
      endterm="sql-createtable-storage-parameters-title">。所有<literal>CREATE
      TABLE</literal>支持的参数<literal>CREATE MATERIALIZED
      VIEW</literal>也支持，不过<literal>OIDS</literal>除外。
      详见<xref linkend="sql-createtable">。
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>TABLESPACE <replaceable class="PARAMETER">tablespace_name</replaceable></literal></term>
    <listitem>
     <para>
      <replaceable class="PARAMETER">tablespace_name</replaceable>是
      要把新物化视图创建在其中的表空间的名称。如果没有指定，
      将查阅<xref linkend="guc-default-tablespace">。
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><replaceable>query</replaceable></term>
    <listitem>
     <para>
      一个<xref linkend="sql-select">、<link linkend="sql-table">TABLE</link>
      或者<xref linkend="sql-values">命令。这个查询将在一个安全受限的操作中运行。
      特别地，对本身会创建临时表的函数的调用将会失败。
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>WITH [ NO ] DATA</></term>
    <listitem>
     <para>
      这个子句指定物化视图是否在创建时被填充。如果不是，该物化视图将被标记为
      不可扫描并且在<command>REFRESH
      MATERIALIZED VIEW</>被使用前不能被查询。
     </para>
    </listitem>
   </varlistentry>

  </variablelist>
 </refsect1>

 <refsect1>
  <title>兼容性</title>

  <para>
   <command>CREATE MATERIALIZED VIEW</command>是一种
   <productname>PostgreSQL</productname>扩展。
  </para>
 </refsect1>

 <refsect1>
  <title>另见</title>

  <simplelist type="inline">
   <member><xref linkend="sql-altermaterializedview"></member>
   <member><xref linkend="sql-createtableas"></member>
   <member><xref linkend="sql-createview"></member>
   <member><xref linkend="sql-dropmaterializedview"></member>
   <member><xref linkend="sql-refreshmaterializedview"></member>
  </simplelist>
 </refsect1>

</refentry>
