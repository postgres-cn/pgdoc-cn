<!--
doc/src/sgml/ref/drop_aggregate.sgml
PostgreSQL documentation
-->

<refentry id="SQL-DROPAGGREGATE">
 <indexterm zone="sql-dropaggregate">
  <primary>DROP AGGREGATE</primary>
 </indexterm>
 
 <refmeta>
  <refentrytitle>DROP AGGREGATE</refentrytitle>
  <manvolnum>7</manvolnum>
  <!--
<refmiscinfo>SQL - Language Statements</refmiscinfo>
-->
<refmiscinfo>SQL - 语句</refmiscinfo>
 </refmeta>

 <refnamediv>
  <refname>DROP AGGREGATE</refname>
  <!--
  <refpurpose>remove an aggregate function</refpurpose>
  -->
  <refpurpose>删除一个聚合函数</refpurpose>
 </refnamediv>

 <refsynopsisdiv>
<synopsis>
DROP AGGREGATE [ IF EXISTS ] <replaceable>name</replaceable> ( <replaceable>aggregate_signature</replaceable> ) [ CASCADE | RESTRICT ]

<phrase>where <replaceable>aggregate_signature</replaceable> is:</phrase>

* |
[ <replaceable>argmode</replaceable> ] [ <replaceable>argname</replaceable> ] <replaceable>argtype</replaceable> [ , ... ] |
[ [ <replaceable>argmode</replaceable> ] [ <replaceable>argname</replaceable> ] <replaceable>argtype</replaceable> [ , ... ] ] ORDER BY [ <replaceable>argmode</replaceable> ] [ <replaceable>argname</replaceable> ] <replaceable>argtype</replaceable> [ , ... ]
</synopsis>
 </refsynopsisdiv>

 <refsect1>
  <!-- 
  <title>Description</title> 
  -->
  <title>描述</title>

  <!--
<para>
   <command>DROP AGGREGATE</command> removes an existing
   aggregate function. To execute this command the current
   user must be the owner of the aggregate function.
  </para>
-->
<para>
<command>DROP AGGREGATE</command>删除一个现存的聚合函数。执行这条命令的用户必须是该聚合函数的所有者。
</para>
 </refsect1>

 <refsect1>
  <!--
<title>Parameters</title>
-->
<title>参数</title>

  <variablelist>

   <varlistentry>
    <term><literal>IF EXISTS</literal></term>
    <listitem>
     <!--
<para>
      Do not throw an error if the aggregate does not exist. A notice is issued
      in this case.
     </para>
-->
<para>
如果指定的聚合不存在，那么发出一个 notice 而不是抛出一个错误。
</para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><replaceable class="parameter">name</replaceable></term>
    <listitem>
     <!--
<para>
      The name (optionally schema-qualified) of an existing aggregate function.
     </para>
-->
<para>
现存的聚合函数名(可以有模式修饰)
</para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><replaceable class="parameter">argmode</replaceable></term>

    <listitem>
<!-- 
     <para>
      The mode of an argument: <literal>IN</> or <literal>VARIADIC</>.
      If omitted, the default is <literal>IN</>.
     </para> 
-->
     <para>
      一个参数的模式：<literal>IN</>或<literal>VARIADIC</>。
      如果省略了，缺省是<literal>IN</>。
     </para>
    </listitem>
   </varlistentry>
   
   <varlistentry>
    <term><replaceable class="parameter">argname</replaceable></term>

    <listitem>
<!-- 
     <para>
      The name of an argument.
      Note that <command>DROP AGGREGATE</command> does not actually pay
      any attention to argument names, since only the argument data
      types are needed to determine the aggregate function's identity.
     </para> 
-->
     <para>
      一个参数的名字。请注意，<command>DROP AGGREGATE</command>
      实际上并不注意参数名，因为只需要参数数据类型决定聚合函数的身份。
     </para>
    </listitem>
   </varlistentry>
   
   <varlistentry>
    <term><replaceable class="parameter">argtype</replaceable></term>
    <listitem>
     <!--
<para>
      An input data type on which the aggregate function operates.
      To reference a zero-argument aggregate function, write <literal>*</>
      in place of the list of argument specifications.
      To reference an ordered-set aggregate function, write
      <literal>ORDER BY</> between the direct and aggregated argument
      specifications.
     </para>
-->
<para>
聚合函数操作的输入数据类型，要引用一个零参数聚合函数，
请用<literal>*</>代替参数声明列表。要引用一个有序集合的聚合函数，
在直接和聚合的参数声明中间写<literal>ORDER BY</>。
</para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>CASCADE</literal></term>
    <listitem>
     <!--
<para>
      Automatically drop objects that depend on the aggregate function.
     </para>
-->
<para>
级联删除依赖于这个聚合函数的对象
</para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>RESTRICT</literal></term>
    <listitem>
     <!--
<para>
      Refuse to drop the aggregate function if any objects depend on
      it.  This is the default.
     </para>
-->
<para>
如果有任何依赖对象，则拒绝删除这个聚合函数。这是缺省处理。
</para>
    </listitem>
   </varlistentry>
  </variablelist>
 </refsect1>

 <refsect1>

<!-- 
  <title>Notes</title> 
-->
  <title>注意</title>

<!--
    <para>
    Alternative syntaxes for referencing ordered-set aggregates
    are described under <xref linkend="sql-alteraggregate">.
   </para> 
-->
   <para>
    可供参考的有序集聚合的替换语法在<xref linkend="sql-alteraggregate">中描述。
   </para>
 </refsect1>

 <refsect1>
 <!--
<title>Examples</title>
-->
<title>例子</title>

  <!--
<para>
   To remove the aggregate function <literal>myavg</literal> for type
   <type>integer</type>:
<programlisting>
DROP AGGREGATE myavg(integer);
</programlisting></para>
-->
<para>
将<type>integer</type>类型的聚合函数<literal>myavg</literal>删除：
<programlisting>
DROP AGGREGATE myavg(integer);
</programlisting>
</para>

  <para>
<!-- 
   To remove the hypothetical-set aggregate function <literal>myrank</>,
   which takes an arbitrary list of ordering columns and a matching list
   of direct arguments: 
-->
要删除假设集聚合函数<literal>myrank</>，
它接受一个直接参数的有序字段和匹配列表的任意列表：

<programlisting>
DROP AGGREGATE myrank(VARIADIC "any" ORDER BY VARIADIC "any");
</programlisting>
  </para>
 </refsect1>

 <refsect1>
  <!--
<title>Compatibility</title>
-->
<title>兼容性</title>

  <!--
<para>
   There is no <command>DROP AGGREGATE</command> statement in the SQL
   standard.
  </para>
-->
<para>
SQL 标准里没有<command>DROP AGGREGATE</command>语句。
</para>
 </refsect1>

 <refsect1>
  <!--
<title>See Also</title>
-->
<title>又见</title>

  <simplelist type="inline">
   <member><xref linkend="sql-alteraggregate"></member>
   <member><xref linkend="sql-createaggregate"></member>
  </simplelist>
 </refsect1>

</refentry>
