<!--
doc/src/sgml/rel/alter_foreign_table.sgml
PostgreSQL documentation
-->

<refentry id="SQL-ALTERFOREIGNTABLE">
 <indexterm zone="sql-alterforeigntable">
  <primary>ALTER FOREIGN TABLE</primary>
 </indexterm>

 <refmeta>
  <refentrytitle>ALTER FOREIGN TABLE</refentrytitle>
  <manvolnum>7</manvolnum>
  <refmiscinfo>SQL - Language Statements</refmiscinfo>
 </refmeta>

 <refnamediv>
  <refname>ALTER FOREIGN TABLE</refname>
  <refpurpose>更改一个外部表的定义</refpurpose>
 </refnamediv>

 <refsynopsisdiv>
<synopsis>
ALTER FOREIGN TABLE [ IF EXISTS ] <replaceable class="PARAMETER">name</replaceable>
    <replaceable class="PARAMETER">action</replaceable> [, ... ]
ALTER FOREIGN TABLE [ IF EXISTS ] <replaceable class="PARAMETER">name</replaceable>
    RENAME [ COLUMN ] <replaceable class="PARAMETER">column_name</replaceable> TO <replaceable class="PARAMETER">new_column_name</replaceable>
ALTER FOREIGN TABLE [ IF EXISTS ] <replaceable class="PARAMETER">name</replaceable>
    RENAME TO <replaceable class="PARAMETER">new_name</replaceable>
ALTER FOREIGN TABLE [ IF EXISTS ] <replaceable class="PARAMETER">name</replaceable>
    SET SCHEMA <replaceable class="PARAMETER">new_schema</replaceable>

<phrase>其中 <replaceable class="PARAMETER">action</replaceable> 是以下之一：</phrase>

    ADD [ COLUMN ] <replaceable class="PARAMETER">column_name</replaceable> <replaceable class="PARAMETER">data_type</replaceable> [ COLLATE <replaceable class="PARAMETER">collation</replaceable> ] [ <replaceable class="PARAMETER">column_constraint</replaceable> [ ... ] ]
    DROP [ COLUMN ] [ IF EXISTS ] <replaceable class="PARAMETER">column_name</replaceable> [ RESTRICT | CASCADE ]
    ALTER [ COLUMN ] <replaceable class="PARAMETER">column_name</replaceable> [ SET DATA ] TYPE <replaceable class="PARAMETER">data_type</replaceable>
    ALTER [ COLUMN ] <replaceable class="PARAMETER">column_name</replaceable> SET DEFAULT <replaceable class="PARAMETER">expression</replaceable>
    ALTER [ COLUMN ] <replaceable class="PARAMETER">column_name</replaceable> DROP DEFAULT
    ALTER [ COLUMN ] <replaceable class="PARAMETER">column_name</replaceable> { SET | DROP } NOT NULL
    ALTER [ COLUMN ] <replaceable class="PARAMETER">column_name</replaceable> SET STATISTICS <replaceable class="PARAMETER">integer</replaceable>
    ALTER [ COLUMN ] <replaceable class="PARAMETER">column_name</replaceable> SET ( <replaceable class="PARAMETER">attribute_option</replaceable> = <replaceable class="PARAMETER">value</replaceable> [, ... ] )
    ALTER [ COLUMN ] <replaceable class="PARAMETER">column_name</replaceable> RESET ( <replaceable class="PARAMETER">attribute_option</replaceable> [, ... ] )
    ALTER [ COLUMN ] <replaceable class="PARAMETER">column_name</replaceable> OPTIONS ( [ ADD | SET | DROP ] <replaceable class="PARAMETER">option</replaceable> ['<replaceable class="PARAMETER">value</replaceable>'] [, ... ])
    DISABLE TRIGGER [ <replaceable class="PARAMETER">trigger_name</replaceable> | ALL | USER ]
    ENABLE TRIGGER [ <replaceable class="PARAMETER">trigger_name</replaceable> | ALL | USER ]
    ENABLE REPLICA TRIGGER <replaceable class="PARAMETER">trigger_name</replaceable>
    ENABLE ALWAYS TRIGGER <replaceable class="PARAMETER">trigger_name</replaceable>
    OWNER TO <replaceable class="PARAMETER">new_owner</replaceable>
    OPTIONS ( [ ADD | SET | DROP ] <replaceable class="PARAMETER">option</replaceable> ['<replaceable class="PARAMETER">value</replaceable>'] [, ... ])
</synopsis>
 </refsynopsisdiv>

 <refsect1>
  <title>描述</title>

  <para>
   <command>ALTER FOREIGN TABLE</command>更改一个现有外部表的定义。
   有几种子形式：

  <variablelist>
   <varlistentry>
    <term><literal>ADD COLUMN</literal></term>
    <listitem>
     <para>
      这种形式使用与<xref linkend="SQL-CREATEFOREIGNTABLE">相同的语法把
      一个新的列增加到该外部表。和为常规表增加一列不同，这种形式并不影响底层
      的存储：这个动作只是简单地声明通过该外部表可以访问某个新的列而已。
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>DROP COLUMN [ IF EXISTS ]</literal></term>
    <listitem>
     <para>
      这种形式从一个外部表删掉一列。如果在该表外部有任何东西依赖于该列，
      你将需要写上<literal>CASCADE</>，典型的例子就是视图。如果指定了
      <literal>IF EXISTS</literal>并且该列不存在，将不会抛出错误。在这种
      情况下会转而发出一个提示。
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>IF EXISTS</literal></term>
    <listitem>
     <para>
      如果该外部表不存在则不抛出一个错误。这种情况下会发出一个提示。
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>SET DATA TYPE</literal></term>
    <listitem>
     <para>
      这种形式更改一个外部表的一列的类型。
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>SET</literal>/<literal>DROP DEFAULT</literal></term>
    <listitem>
     <para>
      这些形式设置或者移除一列的默认值。默认值只会应用于后续的
      <command>INSERT</command>或<command>UPDATE</>命令，它们
      不会导致已经在表中的行被更改。
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>SET</literal>/<literal>DROP NOT NULL</literal></term>
    <listitem>
     <para>
      把一列标记为允许或者不允许空值。
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>SET STATISTICS</literal></term>
    <listitem>
     <para>
      这种形式为后续的<xref linkend="sql-analyze">操作设置针对每列
      的统计收集目标。详见<xref linkend="sql-altertable">的类似形式。
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>SET ( <replaceable class="PARAMETER">attribute_option</replaceable> = <replaceable class="PARAMETER">value</replaceable> [, ... ] )</literal></term>
    <term><literal>RESET ( <replaceable class="PARAMETER">attribute_option</replaceable> [, ... ] )</literal></term>
    <listitem>
     <para>
      这种形式设置或重置针对每个属性的选项。详见<xref linkend="sql-altertable">
      的类似形式。
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>DISABLE</literal>/<literal>ENABLE [ REPLICA | ALWAYS ] TRIGGER</literal></term>
    <listitem>
     <para>
      这些形式配置属于该外部表的触发器的触发情况。详见
      <xref linkend="sql-altertable">的类似形式。
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>OWNER</literal></term>
    <listitem>
     <para>
      这种形式把该外部表的拥有者改成指定的用户。
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>RENAME</literal></term>
    <listitem>
     <para>
      <literal>RENAME</literal>形式更改一个外部表的名称或者其中一个
      列的名称。
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>SET SCHEMA</literal></term>
    <listitem>
     <para>
      这种形式把该外部表移动到另一个模式。
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>OPTIONS ( [ ADD | SET | DROP ] <replaceable class="PARAMETER">option</replaceable> ['<replaceable class="PARAMETER">value</replaceable>'] [, ... ] )</literal></term>
    <listitem>
     <para>
      更改该外部表或者其中一个列的选项。<literal>ADD</>、<literal>SET</>
      以及<literal>DROP</>指定要执行的动作。如果没有显式地指定操作，将假定
      为<literal>ADD</>。不允许重复的名称（不过一个表选项和一个列选项可以重
      名）。选项名称和值也会用外部数据包装器库来验证。
     </para>
    </listitem>
   </varlistentry>

  </variablelist>
  </para>

  <para>
   所有除了<literal>RENAME</literal>和<literal>SET SCHEMA</>的
   动作都能被整合到一个多修改列表以便能被并行应用。例如，可以在一个
   命令中增加几个列并且/或者修改几个列的类型。
  </para>

  <para>
   你必须拥有该表以使用<command>ALTER FOREIGN TABLE</>。要更改一个
   外部表的模式，你必须还拥有新模式上的<literal>CREATE</literal>特权。要
   更改拥有者，你还必须是新拥有角色的一个直接或者间接成员，并且该角色必须
   具有在该表的模式上的<literal>CREATE</literal>特权（这些限制强制修改拥有
   者不能做一些通过删除和重建该表做不到的事情。不过，一个超级用户怎么都能
   更改任何表的所有权）。要增加一列或者修改一个列的类型，你还必须具有该数
   据类型上的<literal>USAGE</literal>特权。
  </para>
 </refsect1>

 <refsect1>
  <title>参数</title>

    <variablelist>

     <varlistentry>
      <term><replaceable class="PARAMETER">name</replaceable></term>
      <listitem>
       <para>
        一个要修改的现有外部表的名称（可以被模式限定）。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><replaceable class="PARAMETER">column_name</replaceable></term>
      <listitem>
       <para>
        一个新的或者现有列的名称。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><replaceable class="PARAMETER">new_column_name</replaceable></term>
      <listitem>
       <para>
        一个现有列的新名称。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><replaceable class="PARAMETER">new_name</replaceable></term>
      <listitem>
       <para>
        该表的新名称。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><replaceable class="PARAMETER">data_type</replaceable></term>
      <listitem>
       <para>
        新列的数据类型或者一个现有列的新数据类型。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><literal>CASCADE</literal></term>
      <listitem>
       <para>
        自动删除依赖于被删除列的对象（例如，引用该列的视图）。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><literal>RESTRICT</literal></term>
      <listitem>
       <para>
        如果有任何依赖对象就拒绝删除该列。这是默认行为。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><replaceable class="PARAMETER">trigger_name</replaceable></term>
      <listitem>
       <para>
        要禁用或启用的一个触发器的名称。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><literal>ALL</literal></term>
      <listitem>
       <para>
        禁用或者启用所有属于该外部表的触发器（如果任何触发器是内部生成
        的触发器，这都要求超级用户特权。核心系统不会向外部表增加这类触发
        器，但是附加代码会这样做。）。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><literal>USER</literal></term>
      <listitem>
       <para>
        禁用或者启用属于该外部表的除了内部生成的触发器之外的所有触发器。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><replaceable class="PARAMETER">new_owner</replaceable></term>
      <listitem>
       <para>
        该表的新拥有者的用户名。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><replaceable class="PARAMETER">new_schema</replaceable></term>
      <listitem>
       <para>
        该表要被移动到其中的模式的名称。
       </para>
      </listitem>
     </varlistentry>
    </variablelist>
 </refsect1>

 <refsect1>
  <title>注解</title>

   <para>
    关键词<literal>COLUMN</literal>是噪声词并且可以被忽略。
   </para>

   <para>
    当使用<literal>ADD COLUMN</literal>或
    <literal>DROP COLUMN</literal>增加或移除一列、增加一个<literal>NOT NULL</>
    约束或者用<literal>SET DATA TYPE</>更改一个列类型时，不会检查与外部服务器的一
    致性。确保该表定义匹配远端是用户的责任。
   </para>

   <para>
    关于有效参数的进一步描述可参考<xref linkend="sql-createforeigntable">。
   </para>
 </refsect1>

 <refsect1>
  <title>示例</title>

  <para>
   要把一列标记为非空：
<programlisting>
ALTER FOREIGN TABLE distributors ALTER COLUMN street SET NOT NULL;
</programlisting>
  </para>

  <para>
   要更改一个外部表的选项：
<programlisting>
ALTER FOREIGN TABLE myschema.distributors OPTIONS (ADD opt1 'value', SET opt2, 'value2', DROP opt3 'value3');
</programlisting></para>

 </refsect1>

 <refsect1>
  <title>兼容性</title>

  <para>
   形式<literal>ADD</literal>、<literal>DROP</>以及
   <literal>SET DATA TYPE</literal>符合 SQL 标准。其他形式是 SQL 标准的
   <productname>PostgreSQL</productname>扩展。在一个
   <command>ALTER FOREIGN TABLE</>命令中指定多于一个操作也是一种扩展。
  </para>

  <para>
   <command>ALTER FOREIGN TABLE DROP COLUMN</>可以被用来删除
   一个外部表的唯一一列，从而留下一个没有列的表。这是一种 SQL 的扩展，它
   允许没有列的外部表。
  </para>
 </refsect1>
</refentry>
