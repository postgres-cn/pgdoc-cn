<!--
doc/src/sgml/ref/begin.sgml
PostgreSQL documentation
-->

<refentry id="SQL-BEGIN">
 <indexterm zone="sql-begin">
  <primary>BEGIN</primary>
 </indexterm>

 <refmeta>
  <refentrytitle>BEGIN</refentrytitle>
  <manvolnum>7</manvolnum>
  <refmiscinfo>SQL - Language Statements</refmiscinfo>
 </refmeta>

 <refnamediv>
  <refname>BEGIN</refname>
  <refpurpose>开始一个事务块</refpurpose>
 </refnamediv>

 <refsynopsisdiv>
<synopsis>
BEGIN [ WORK | TRANSACTION ] [ <replaceable class="parameter">transaction_mode</replaceable> [, ...] ]

<phrase>其中 <replaceable class="parameter">transaction_mode</replaceable> 是以下之一：</phrase>

    ISOLATION LEVEL { SERIALIZABLE | REPEATABLE READ | READ COMMITTED | READ UNCOMMITTED }
    READ WRITE | READ ONLY
    [ NOT ] DEFERRABLE
</synopsis>
 </refsynopsisdiv>

 <refsect1>
  <title>描述</title>

  <para>
   <command>BEGIN</command>开始一个事务块，也就是说所有
   <command>BEGIN</command>命令之后的所有语句将被在一个
   事务中执行，直到给出一个显式的<xref linkend="sql-commit">或
   者<xref linkend="sql-rollback">。默认情况下（没有
   <command>BEGIN</command>），
   <productname>PostgreSQL</productname>在
   <quote>自动提交</quote>模式中执行事务，也就是说每个语句都
   在自己的事务中执行并且在语句结束时隐式地执行一次提交（如果执
   行成功，否则会完成一次回滚）。
  </para>

  <para>
   在一个事务块内的语句会执行得更快，因为事务的开始/提交也要求可观
   的 CPU 和磁盘活动。在进行多个相关更改时，在一个事务内执行多个语
   句也有助于保证一致性：在所有相关更新还没有完成之前，其他会话将不
   能看到中间状态。
  </para>

  <para>
   如果指定了隔离级别、读/写模式或者延迟模式，新事务也会有那些特性，
   就像执行了<xref linkend="sql-set-transaction">一样。
  </para>
 </refsect1>

 <refsect1>
  <title>参数</title>

  <variablelist>
   <varlistentry>
    <term><literal>WORK</literal></term>
    <term><literal>TRANSACTION</literal></term>
    <listitem>
     <para>
      可选的关键词。它们没有效果。
     </para>
    </listitem>
   </varlistentry>
  </variablelist>

  <para>
   这个语句其他参数的含义请参考
   <xref linkend="sql-set-transaction">。
  </para>
 </refsect1>

 <refsect1>
  <title>注解</title>

  <para>
   <xref linkend="sql-start-transaction">具有和<command>BEGIN</>
   相同的功能。
  </para>

  <para>
   使用<xref linkend="SQL-COMMIT">或者
   <xref linkend="SQL-ROLLBACK">来终止一个事务块。
  </para>

  <para>
   在已经在一个事务块中时发出<command>BEGIN</>将惹出一个警告
   消息。事务状态不会被影响。要在一个事务块中嵌套事务，可以使用保
   存点（见<xref linkend="sql-savepoint">）。
  </para>

  <para>
   由于向后兼容的原因，连续的
   <replaceable class="parameter">transaction_modes</replaceable>
   之间的逗号可以被省略。
  </para>
 </refsect1>

 <refsect1>
  <title>示例</title>

  <para>
   开始一个事务块：

<programlisting>
BEGIN;
</programlisting></para>
 </refsect1>

 <refsect1>
  <title>兼容性</title>

  <para>
   <command>BEGIN</command>是一种
   <productname>PostgreSQL</productname>语言扩展。它等效于
   SQL 标准的命令<xref linkend="sql-start-transaction">，它的参考页
   包含额外的兼容性信息。
  </para>

  <para>
   <literal>DEFERRABLE</literal>
   <replaceable class="parameter">transaction_mode</replaceable>
   是一种<productname>PostgreSQL</productname>语言扩展。
  </para>

  <para>
   附带地，<literal>BEGIN</literal>关键词被用于嵌入式 SQL 中的一种
   不同目的。在移植数据库应用时，我们建议小心对待事务语义。
  </para>
 </refsect1>

 <refsect1>
  <title>另见</title>

  <simplelist type="inline">
   <member><xref linkend="sql-commit"></member>
   <member><xref linkend="sql-rollback"></member>
   <member><xref linkend="sql-start-transaction"></member>
   <member><xref linkend="sql-savepoint"></member>
  </simplelist>
 </refsect1>
</refentry>
