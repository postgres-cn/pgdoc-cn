<!--
doc/src/sgml/ref/create_extension.sgml
PostgreSQL documentation
-->

<refentry id="SQL-CREATEEXTENSION">
 <indexterm zone="sql-createextension">
  <primary>CREATE EXTENSION</primary>
 </indexterm>

 <refmeta>
  <refentrytitle>CREATE EXTENSION</refentrytitle>
  <manvolnum>7</manvolnum>
  <refmiscinfo>SQL - Language Statements</refmiscinfo>
 </refmeta>

 <refnamediv>
  <refname>CREATE EXTENSION</refname>
  <refpurpose>安装一个扩展</refpurpose>
 </refnamediv>

 <refsynopsisdiv>
<synopsis>
CREATE EXTENSION [ IF NOT EXISTS ] <replaceable class="parameter">extension_name</replaceable>
    [ WITH ] [ SCHEMA <replaceable class="parameter">schema_name</replaceable> ]
             [ VERSION <replaceable class="parameter">version</replaceable> ]
             [ FROM <replaceable class="parameter">old_version</replaceable> ]
</synopsis>
 </refsynopsisdiv>

 <refsect1>
  <title>描述</title>

  <para>
   <command>CREATE EXTENSION</command>把一个新的扩展载入到
   当前数据库中。不能有同名扩展已经被载入。
  </para>

  <para>
   载入一个扩展本质上是运行该扩展的脚本文件。该脚本通常将创建新的
   <acronym>SQL</>对象，例如函数、数据类型、操作符以及索引支持
   方法。<command>CREATE EXTENSION</command>会额外地记录
   所有被创建对象的标识，这样发出
   <command>DROP EXTENSION</command>时可以删除它们。
  </para>

  <para>
   载入一个扩展要求创建其组件对象所要求的特权。对于大部分扩展这意味
   这需要超级用户或者数据库拥有者的特权。为了以后特权检察的目的，运行
   <command>CREATE EXTENSION</command>的用户会成为该扩展的
   拥有者以及由该扩展的脚本创建的任何对象的拥有者。
  </para>

 </refsect1>

 <refsect1>
  <title>参数</title>

    <variablelist>
     <varlistentry>
      <term><literal>IF NOT EXISTS</></term>
      <listitem>
       <para>
        已有同名扩展存在时不要抛出错误。这种情况下会发出一个提示。
        注意，不保证现有的扩展与将要从当前可用的脚本文件创建的脚本
        有任何相似。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><replaceable class="parameter">extension_name</replaceable></term>
      <listitem>
       <para>
        要安装的扩展的名称。<productname>PostgreSQL</productname>
        将使用文件
        <literal>SHAREDIR/extension/</literal><replaceable class="parameter">extension_name</replaceable><literal>.control</literal>
        中的指令来创建该扩展。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><replaceable class="parameter">schema_name</replaceable></term>
      <listitem>
       <para>
        假定该扩展允许其内容被重定位，这是要在其中安装该扩展的对象的
        模式名称。被提到的模式必须已经存在。如果没有指定并且该扩展的
        控制文件也没有指定一个模式，将使用当前的默认对象创建模式。
       </para>
       <para>
        记住扩展本身被认为不在任何模式中：扩展具有无限定的名称，并且
        要在整个数据库范围内唯一。但是属于扩展的对象可以在模式中。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><replaceable class="parameter">version</replaceable></term>
      <listitem>
       <para>
        要安装的扩展的版本。这可以写成一个标识符或者一个字符串。
        默认版本在该扩展的控制文件中指定。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><replaceable class="parameter">old_version</replaceable></term>
      <listitem>
       <para>
        当且仅当尝试要安装一个扩展来替代一个<quote>老式</>
        的模块（它只是一组没有被打包成扩展的对象的集合）时，
        才必须指定
        <literal>FROM</> <replaceable class="parameter">old_version</>。
        这个选项导致<command>CREATE EXTENSION</>运行
        另一个安装脚本把现有的对象吸收到该扩展中，而不是创建
        新对象。当心<literal>SCHEMA</>指定的是包含已经存在
        对象的模式。
       </para>

       <para>
        用于<replaceable
        class="parameter">old_version</replaceable>的值由扩展的作者决定，
        且如果有多于一种版本的老式模块可以被升级到扩展，该值还可能变化。
        对于 9.1 之前的<productname>PostgreSQL</productname>提供的
        标准附加模块，在升级模块到扩展风格时要为
        <replaceable class="parameter">old_version</replaceable>使用
        <literal>unpackaged</>。
       </para>
      </listitem>
     </varlistentry>
  </variablelist>
 </refsect1>

 <refsect1>
  <title>注解</title>

  <para>
   在使用<command>CREATE EXTENSION</>载入扩展到数据库中之前，
   必须先安装好该扩展的支持文件。关于安装
   <productname>PostgreSQL</productname>提供的扩展的信息可以在
   <link linkend="contrib">额外提供的模块</link>中找到。
  </para>

  <para>
   当前可以用于载入的扩展可以在系统视图
   <link linkend="view-pg-available-extensions"><structname>pg_available_extensions</structname></link>
   或者
   <link linkend="view-pg-available-extension-versions"><structname>pg_available_extension_versions</structname></link>
   中看到。
  </para>

  <para>
   更多有关编写新扩展的内容请见<xref linkend="extend-extensions">。
  </para>
 </refsect1>

 <refsect1>
  <title>示例</title>

  <para>
   安装<link linkend="hstore">hstore</link>扩展到当前数据库中：
<programlisting>
CREATE EXTENSION hstore;
</programlisting>
  </para>

  <para>
   升级一个 9.1 之前的<literal>hstore</>安装成为扩展：
<programlisting>
CREATE EXTENSION hstore SCHEMA public FROM unpackaged;
</programlisting>
   要小心地指定安装现有<literal>hstore</>对象的模式。
  </para>
 </refsect1>

 <refsect1>
  <title>兼容性</title>

  <para>
   <command>CREATE EXTENSION</command>是一种
   <productname>PostgreSQL</>扩展。
  </para>
 </refsect1>

 <refsect1>
  <title>另见</title>

  <simplelist type="inline">
   <member><xref linkend="sql-alterextension"></member>
   <member><xref linkend="sql-dropextension"></member>
  </simplelist>
 </refsect1>

</refentry>
