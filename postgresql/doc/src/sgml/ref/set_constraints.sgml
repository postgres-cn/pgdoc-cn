<!-- doc/src/sgml/ref/set_constraints.sgml -->
<refentry id="SQL-SET-CONSTRAINTS">
 <indexterm zone="sql-set-constraints">
  <primary>SET CONSTRAINTS</primary>
 </indexterm>
 <refmeta>
  <refentrytitle>SET CONSTRAINTS</refentrytitle>
  <manvolnum>7</manvolnum>
  <!--
<refmiscinfo>SQL - Language Statements</refmiscinfo>
-->
<refmiscinfo>SQL - 语句</refmiscinfo>
 </refmeta>

 <refnamediv>
  <refname>SET CONSTRAINTS</refname>
  <!-- 
  <refpurpose>set constraint check timing for the current transaction</refpurpose> 
  -->
  <refpurpose>设置当前事务的约束检查模式</refpurpose>
 </refnamediv>

 <refsynopsisdiv>
<synopsis>
SET CONSTRAINTS { ALL | <replaceable class="parameter">name</replaceable> [, ...] } { DEFERRED | IMMEDIATE }
</synopsis>
 </refsynopsisdiv>

 <refsect1>
  <!--
<title>Description</title>
-->
<title>描述</title>

  <!--
<para>
   <command>SET CONSTRAINTS</command> sets the behavior of constraint
   checking within the current transaction. <literal>IMMEDIATE</literal>
   constraints are checked at the end of each
   statement. <literal>DEFERRED</literal> constraints are not checked until
   transaction commit.  Each constraint has its own
   <literal>IMMEDIATE</literal> or <literal>DEFERRED</literal> mode.
  </para>
-->
<para>
<command>SET CONSTRAINTS</command>设置当前事务里的约束检查的特性。<literal>IMMEDIATE</literal>
约束是在每条语句后面进行检查。<literal>DEFERRED</literal>约束一直到事务提交时才检查。
每个约束都有自己的<literal>IMMEDIATE</literal>或<literal>DEFERRED</literal>模式。
</para>

  <!--
<para>
   Upon creation, a constraint is given one of three
   characteristics: <literal>DEFERRABLE INITIALLY DEFERRED</literal>,
   <literal>DEFERRABLE INITIALLY IMMEDIATE</literal>, or
   <literal>NOT DEFERRABLE</literal>. The third
   class is always <literal>IMMEDIATE</literal> and is not affected by the
   <command>SET CONSTRAINTS</command> command.  The first two classes start
   every transaction in the indicated mode, but their behavior can be changed
   within a transaction by <command>SET CONSTRAINTS</command>.
  </para>
-->
<para>
从创建的时候开始，一个约束总是给定为 <literal>DEFERRABLE INITIALLY DEFERRED</literal>,
 <literal>DEFERRABLE INITIALLY IMMEDIATE</literal>, <literal>NOT DEFERRABLE</literal> 三个特性之一。
第三种总是<literal>IMMEDIATE</literal>，并且不会受<command>SET CONSTRAINTS</command>影响。
头两种以指定的方式启动每个事务，但是他们的行为可以在事务里用<command>SET CONSTRAINTS</command>改变。
</para>

  <!--
<para>
   <command>SET CONSTRAINTS</command> with a list of constraint names changes
   the mode of just those constraints (which must all be deferrable).  Each
   constraint name can be schema-qualified.  The
   current schema search path is used to find the first matching name if
   no schema name is specified.  <command>SET CONSTRAINTS ALL</command>
   changes the mode of all deferrable constraints.
  </para>
-->
<para>
带着一个约束名列表的<command>SET CONSTRAINTS</command>改变这些约束的模式(都必须是可推迟的)。
每个约束名都可以是模式修饰的。如果没有指定任何模式名，那么使用当前模式搜索路径查找第一个匹配名。
<command>SET CONSTRAINTS ALL</command>改变所有可推迟约束的模式。
</para>

  <!--
<para>
   When <command>SET CONSTRAINTS</command> changes the mode of a constraint
   from <literal>DEFERRED</literal>
   to <literal>IMMEDIATE</literal>, the new mode takes effect
   retroactively: any outstanding data modifications that would have
   been checked at the end of the transaction are instead checked during the
   execution of the <command>SET CONSTRAINTS</command> command.
   If any such constraint is violated, the <command>SET CONSTRAINTS</command>
   fails (and does not change the constraint mode).  Thus, <command>SET
   CONSTRAINTS</command> can be used to force checking of constraints to
   occur at a specific point in a transaction.
  </para>
-->
<para>
当<command>SET CONSTRAINTS</command>把一个约束从<literal>DEFERRED</literal>改成
<literal>IMMEDIATE</literal>的时候，新模式反作用式地起作用：
任何将在事务结束准备检查的数据修改都将在执行<command>SET CONSTRAINTS</command>的时候检查。
如果违反了任何约束，<command>SET CONSTRAINTS</command>都会失败(并且不会修改约束模式)。
因此，<command>SET CONSTRAINTS</command>可以用于强制在事务中某一点进行约束检查。
</para>

  <!--
<para>
   Currently, only <literal>UNIQUE</>, <literal>PRIMARY KEY</>,
   <literal>REFERENCES</> (foreign key), and <literal>EXCLUDE</>
   constraints are affected by this setting.
   <literal>NOT NULL</> and <literal>CHECK</> constraints are
   always checked immediately when a row is inserted or modified
   (<emphasis>not</> at the end of the statement).
   Uniqueness and exclusion constraints that have not been declared
   <literal>DEFERRABLE</> are also checked immediately.
  </para>
-->
<para>
目前，仅<literal>UNIQUE</>, <literal>PRIMARY KEY</>, <literal>REFERENCES</> (外键), 
和 <literal>EXCLUDE</>约束受该设置影响。<literal>NOT NULL</> 和 <literal>CHECK</>
约束总在一行被插入或者修改时被检查（<emphasis>不在</>语句末）。
未声明<literal>DEFERRABLE</>的唯一性和排除性约束也立即检查。 
</para>

  <!--
<para>
   The firing of triggers that are declared as <quote>constraint triggers</>
   is also controlled by this setting &mdash; they fire at the same time
   that the associated constraint should be checked.
  </para>
-->
<para>
被声明为<quote>约束触发</>的触发器的触发也是受该设置控制的，
他们在相关约束应被检查的相同时间触发。 
</para>
 </refsect1>

 <refsect1>
  <!--
<title>Notes</title>
-->
<title>注意</title>

  <!--
<para>
   Because <productname>PostgreSQL</productname> does not require constraint
   names to be unique within a schema (but only per-table), it is possible
   that there is more than one match for a specified constraint name.
   In this case <command>SET CONSTRAINTS</command> will act on all matches.
   For a non-schema-qualified name, once a match or matches have been found in
   some schema in the search path, schemas appearing later in the path are not
   searched.
  </para>
-->
<para>
因为<productname>PostgreSQL</productname>不要求约束名称在一个模式内是独一无二的
（但每个表必须唯一），多于一个约束名匹配一个特定约束名是可能的。在这种情况下，
<command>SET CONSTRAINTS</command>将作用于所有的匹配。对于一个无模式限定的名称，
一旦一个或多个匹配在搜索路径下的相同模式中被找到，路径中晚出现的模式不会被搜索。 
</para>

  <!--
<para>
   This command only alters the behavior of constraints within the
   current transaction.  Issuing this outside of a transaction block
   emits a warning and otherwise has no effect.
  </para>
-->
<para>
这个命令只在当前事务里修改约束的行为。在事务块之外发出这个命令，
将发出一个警告否则没什么影响。
</para>
 </refsect1>

 <refsect1>
  <!--
<title>Compatibility</title>
-->
<title>兼容性</title>

  <!--
<para>
   This command complies with the behavior defined in the SQL
   standard, except for the limitation that, in
   <productname>PostgreSQL</productname>, it does not apply to
   <literal>NOT NULL</> and <literal>CHECK</> constraints.
   Also, <productname>PostgreSQL</productname> checks non-deferrable
   uniqueness constraints immediately, not at end of statement as the
   standard would suggest.
  </para>
-->
<para>
这条命令与 SQL 标准里定义的行为兼容，只不过，在<productname>PostgreSQL</productname>里，
它不适用于<literal>NOT NULL</> 和 <literal>CHECK</>约束。还有，<productname>PostgreSQL</productname>
立即检查不可推延的唯一性约束，不是像标准建议的那样在语句末检查。 
</para>

 </refsect1>
</refentry>
