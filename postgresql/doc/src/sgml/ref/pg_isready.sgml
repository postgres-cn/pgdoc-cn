<!--
doc/src/sgml/ref/pg_isready.sgml
PostgreSQL documentation
-->

<refentry id="app-pg-isready">
 <indexterm zone="app-pg-isready">
  <primary>pg_isready</primary>
 </indexterm>
 
 <refmeta>
  <refentrytitle><application>pg_isready</application></refentrytitle>
  <manvolnum>1</manvolnum>
  <refmiscinfo>Application</refmiscinfo>
 </refmeta>

 <refnamediv>
  <refname>pg_isready</refname>
  <refpurpose>检查一个<productname>PostgreSQL</productname>服务器的连接状态</refpurpose>
 </refnamediv>

 <refsynopsisdiv>
  <cmdsynopsis>
   <command>pg_isready</command>
   <arg rep="repeat"><replaceable>connection-option</replaceable></arg>
   <arg rep="repeat"><replaceable>option</replaceable></arg>
  </cmdsynopsis>
 </refsynopsisdiv>


 <refsect1 id="app-pg-isready-description">
  <title>描述</title>
  <para>
   <application>pg_isready</application>是一个用来检查一个<productname>PostgreSQL</productname>数据库服务器的连接状态的工具。其退出状态指定了连接检查的结果。
  </para>
 </refsect1>

 <refsect1 id="app-pg-isready-options">
  <title>选项</title>

    <variablelist>

    <varlistentry>
      <term><option>-d <replaceable class="parameter">dbname</replaceable></></term>
      <term><option>--dbname=<replaceable class="parameter">dbname</replaceable></></term>
      <listitem>
      <para>
       指定要连接的数据库名。
      </para>
      <para>
       如果这个参数包含一个<symbol>=</symbol>记号或者以一个合法的<acronym>URI</acronym>前缀（<literal>postgresql://</literal>或<literal>postgres://</literal>）开始，它会被当作一个<parameter>conninfo</parameter>字符串。详见<xref linkend="libpq-connstring">。
      </para>
      </listitem>
    </varlistentry>

     <varlistentry>
       <term><option>-h <replaceable class="parameter">hostname</replaceable></></term>
       <term><option>--host=<replaceable class="parameter">hostname</replaceable></></term>
       <listitem>
       <para>
       指定运行服务器的机器的主机名。如果该值以一个斜线开始，它被用作 Unix 域套接字的目录。
       </para>
       </listitem>
     </varlistentry>

     <varlistentry>
       <term><option>-p <replaceable class="parameter">port</replaceable></></term>
       <term><option>--port=<replaceable class="parameter">port</replaceable></></term>
       <listitem>
       <para>
       指定服务器正在监听连接的 TCP 端口或本地 Unix 域套接字文件扩展。默认值取自<envar>PGPORT</envar>环境变量。如果环境变量没有设置，则默认值使用编译时指定的端口（通常是 5432）。
       </para>
       </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-q</option></term>
      <term><option>--quiet</option></term>
      <listitem>
       <para>
        不显示状态消息。当脚本编程时有用。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
       <term><option>-t <replaceable class="parameter">seconds</replaceable></></term>
       <term><option>--timeout=<replaceable class="parameter">seconds</replaceable></></term>
       <listitem>
       <para>
        尝试连接时，在返回服务器不响应之前等待的最大秒数。设置为 0 则禁用。默认值是 3 秒。
       </para>
       </listitem>
     </varlistentry>

     <varlistentry>
       <term><option>-U <replaceable class="parameter">username</replaceable></></term>
       <term><option>--username=<replaceable class="parameter">username</replaceable></></term>
       <listitem>
       <para>
       作为用户<replaceable class="parameter">username</replaceable>连接数据库，而不是用默认用户。
       </para>
       </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-V</></term>
      <term><option>--version</></term>
       <listitem>
        <para>
         打印<application>pg_isready</application>版本并退出。
        </para>
       </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-?</></term>
      <term><option>--help</></term>
      <listitem>
       <para>
        显示有关<application>pg_isready</application>命令行参数的帮助并退出。
       </para>
      </listitem>
     </varlistentry>
   </variablelist>
 </refsect1>

 <refsect1>
  <title>退出状态</>

  <para>
   如果服务器正常接受连接，<application>pg_isready</application>返回<literal>0</literal>给 shell；如果服务器拒绝连接（例如处于启动阶段）则返回<literal>1</literal>；如果连接尝试没有被相应则返回<literal>2</literal>；如果没有尝试（例如由于非法参数）则返回<literal>3</literal>。
  </para>
 </refsect1>

 <refsect1>
  <title>环境</title>

  <para>
   和大部分其他<productname>PostgreSQL</>工具相似，<command>pg_isready</command>也使用<application>libpq</>（见<xref linkend="libpq-envars">）支持的环境变量。
  </para>
 </refsect1>

 <refsect1 id="app-pg-isready-notes">
  <title>注解</title>

  <para>
   要获得服务器状态，不一定需要提供正确的用户名、口令或数据库名。
   不过，如果提供了不正确的值，服务器将会记录一次失败的连接尝试。
  </para>
 </refsect1>

 <refsect1 id="app-pg-isready-examples">
  <title>例子</title>

  <para>
   标准用法：
<screen>
<prompt>$</prompt> <userinput>pg_isready</userinput>
<computeroutput>/tmp:5432 - accepting connections</computeroutput>
<prompt>$</prompt> <userinput>echo $?</userinput>
<computeroutput>0</computeroutput>
</screen>
  </para>

  <para>
   使用连接参数运行连接到处于启动中的<productname>PostgreSQL</productname>集簇：
<screen>
<prompt>$ </prompt><userinput>pg_isready -h localhost -p 5433</userinput>
<computeroutput>localhost:5433 - rejecting connections</computeroutput>
<prompt>$</prompt> <userinput>echo $?</userinput>
<computeroutput>1</computeroutput>
</screen>
  </para>

  <para>
   使用连接参数运行连接到无响应的<productname>PostgreSQL</productname>集簇：
<screen>
<prompt>$ </prompt><userinput>pg_isready -h someremotehost</userinput>
<computeroutput>someremotehost:5432 - no response</computeroutput>
<prompt>$</prompt> <userinput>echo $?</userinput>
<computeroutput>2</computeroutput>
</screen>
  </para>

 </refsect1>

</refentry>
