<!--
doc/src/sgml/ref/pg_isready.sgml
PostgreSQL documentation
-->

<refentry id="app-pg-isready">
 <indexterm zone="app-pg-isready">
  <primary>pg_isready</primary>
 </indexterm>
 <refmeta>
  <refentrytitle><application>pg_isready</application></refentrytitle>
  <manvolnum>1</manvolnum>
  <!--
  <refmiscinfo>Application</refmiscinfo>
  -->
  <refmiscinfo>应用</refmiscinfo>
 </refmeta>

 <refnamediv>
  <refname>pg_isready</refname>
  <!--
  <refpurpose>check the connection status of a <productname>PostgreSQL</productname> server</refpurpose>
  -->
  <refpurpose>检查<productname>PostgreSQL</productname>服务器的连接状态</refpurpose>
 </refnamediv>

 <refsynopsisdiv>
  <cmdsynopsis>
   <command>pg_isready</command>
   <arg rep="repeat"><replaceable>connection-option</replaceable></arg>
   <arg rep="repeat"><replaceable>option</replaceable></arg>
  </cmdsynopsis>
 </refsynopsisdiv>


 <refsect1 id="app-pg-isready-description">
  <!--
<title>Description</title>
-->
<title>描述</title>
  <!--
<para>
   <application>pg_isready</application> is a utility for checking the connection
   status of a <productname>PostgreSQL</productname> database server. The exit
   status specifies the result of the connection check.
  </para>
-->
<para>
<application>pg_isready</application>是检查<productname>PostgreSQL</productname>
数据库服务器连接状态的一个实用工具。退出状态说明连接检查的结果。
</para>
 </refsect1>

 <refsect1 id="app-pg-isready-options">
  <!--
  <title>Options</title>
  -->
  <title>选项</title>

    <variablelist>

    <varlistentry>
      <term><option>-d <replaceable class="parameter">dbname</replaceable></></term>
      <term><option>--dbname=<replaceable class="parameter">dbname</replaceable></></term>
      <listitem>
      <!--
<para>
       Specifies the name of the database to connect to.
      </para>
-->
<para>
声明要连接的数据库名。
</para>
      <!--
<para>
       If this parameter contains an <symbol>=</symbol> sign or starts
       with a valid <acronym>URI</acronym> prefix
       (<literal>postgresql://</literal>
       or <literal>postgres://</literal>), it is treated as a
       <parameter>conninfo</parameter> string. See <xref
       linkend="libpq-connstring"> for more information.
      </para>
-->
<para>
如果该参数包含一个<symbol>=</symbol>号或者以一个有效的<acronym>URI</acronym>
前缀(<literal>postgresql://</literal>或<literal>postgres://</literal>)开头，
那么将它看做一个<parameter>conninfo</parameter>字符串。
参阅<xref linkend="libpq-connstring">获取更多信息。
</para>
      </listitem>
    </varlistentry>

     <varlistentry>
       <term><option>-h <replaceable class="parameter">hostname</replaceable></></term>
       <term><option>--host=<replaceable class="parameter">hostname</replaceable></></term>
       <listitem>
       <!--
<para>
       Specifies the host name of the machine on which the
       server is running. If the value begins
       with a slash, it is used as the directory for the Unix-domain
       socket.
       </para>
-->
<para>
声明正在运行服务器的主机名。如果以一个斜线开头，那么用作Unix域套接字的目录。
</para>
       </listitem>
     </varlistentry>

     <varlistentry>
       <term><option>-p <replaceable class="parameter">port</replaceable></></term>
       <term><option>--port=<replaceable class="parameter">port</replaceable></></term>
       <listitem>
       <!--
<para>
       Specifies the TCP port or the local Unix-domain
       socket file extension on which the server is listening for
       connections. Defaults to the value of the <envar>PGPORT</envar>
       environment variable or, if not set, to the port specified at
       compile time, usually 5432.
       </para>
-->
<para>
声明服务器正在监听连接的TCP端口或本地Unix域套接字文件扩展。
缺省是<envar>PGPORT</envar>环境变量的值，或者，如果没有设置，
是在编译时指定的端口，通常是5432。
</para>
       </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-q</option></term>
      <term><option>--quiet</option></term>
      <listitem>
       <!--
<para>
        Do not display status message. This is useful when scripting.
       </para>
-->
<para>
不显示状态信息。这在脚本处理时是有用的。
</para>
      </listitem>
     </varlistentry>

     <varlistentry>
       <term><option>-t <replaceable class="parameter">seconds</replaceable></></term>
       <term><option>--timeout=<replaceable class="parameter">seconds</replaceable></></term>
       <listitem>
       <!--
<para>
        The maximum number of seconds to wait when attempting connection before
        returning that the server is not responding. Setting to 0 disables. The
        default is 3 seconds.
       </para>
-->
<para>
在返回服务器没有响应之前尝试连接等待的最大秒数。设置为0禁用等待。缺省是3秒。
</para>
       </listitem>
     </varlistentry>

     <varlistentry>
       <term><option>-U <replaceable class="parameter">username</replaceable></></term>
       <term><option>--username=<replaceable class="parameter">username</replaceable></></term>
       <listitem>
       <!--
<para>
       Connect to the database as the user <replaceable
       class="parameter">username</replaceable> instead of the default.
       </para>
-->
<para>
作为用户<replaceable class="parameter">username</replaceable>而不是缺省用户连接到数据库。
</para>
       </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-V</></term>
      <term><option>--version</></term>
       <listitem>
        <!--
<para>
         Print the <application>pg_isready</application> version and exit.
        </para>
-->
<para>
输出<application>pg_isready</application>的版本并退出。
</para>
       </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-?</></term>
      <term><option>--help</></term>
      <listitem>
       <!--
<para>
        Show help about <application>pg_isready</application> command line
        arguments, and exit.
       </para>
-->
<para>
显示关于<application>pg_isready</application>命令行参数的帮助，然后退出。
</para>
      </listitem>
     </varlistentry>
   </variablelist>
 </refsect1>

 <refsect1>
  <!--
  <title>Exit Status</title>
  -->
  <title>退出状态</title>

  <!--
<para>
   <application>pg_isready</application> returns <literal>0</literal> to the shell if the server
   is accepting connections normally, <literal>1</literal> if the server is rejecting
   connections (for example during startup), <literal>2</literal> if there was no response to the
   connection attempt, and <literal>3</literal> if no attempt was made (for example due to invalid
   parameters).
  </para>
-->
<para>
如果服务器正常接受连接，那么<application>pg_isready</application>返回<literal>0</literal>
到shell；如果服务器拒绝连接（例如在启动期间），那么返回<literal>1</literal>；
如果连接尝试没有响应，那么返回<literal>2</literal>；如果没有做任何尝试
（例如由于无效的参数）则返回<literal>3</literal>。
</para>
 </refsect1>

 <refsect1>
  <!--
  <title>Environment</title>
  -->
  <title>环境</title>

  <!--
<para>
   <command>pg_isready</command>, like most other <productname>PostgreSQL</>
   utilities,
   also uses the environment variables supported by <application>libpq</>
   (see <xref linkend="libpq-envars">).
  </para>
-->
<para>
<command>pg_isready</command>像大多数其他<productname>PostgreSQL</>工具一样，
也使用<application>libpq</>支持的环境变量(参阅<xref linkend="libpq-envars">)。
</para>
 </refsect1>

 <refsect1 id="app-pg-isready-notes">
  <!--
<title>Notes</title>
-->
<title>注意</title>

  <!--
<para>
   It is not necessary to supply correct user name, password, or database
   name values to obtain the server status; however, if incorrect values
   are provided, the server will log a failed connection attempt.
  </para>
-->
<para>
没有必要提供正确的用户名、密码或数据库名来获取服务器状态；不过，
如果提供了不正确的值，那么服务器将记录一个失败的连接尝试。
</para>
 </refsect1>

 <refsect1 id="app-pg-isready-examples">
  <!--
<title>Examples</title>
-->
<title>例子</title>

  <!--
<para>
   Standard Usage:
<screen>
<prompt>$</prompt> <userinput>pg_isready</userinput>
<computeroutput>/tmp:5432 - accepting connections</computeroutput>
<prompt>$</prompt> <userinput>echo $?</userinput>
<computeroutput>0</computeroutput>
</screen>
  </para>
-->
<para>
标准用法：
<screen>
<prompt>$</prompt> <userinput>pg_isready</userinput>
<computeroutput>/tmp:5432 - accepting connections</computeroutput>
<prompt>$</prompt> <userinput>echo $?</userinput>
<computeroutput>0</computeroutput>
</screen>
</para>

  <!--
<para>
   Running with connection parameters to a <productname>PostgreSQL</productname> cluster in startup:
<screen>
<prompt>$ </prompt><userinput>pg_isready -h localhost -p 5433</userinput>
<computeroutput>localhost:5433 - rejecting connections</computeroutput>
<prompt>$</prompt> <userinput>echo $?</userinput>
<computeroutput>1</computeroutput>
</screen>
  </para>
-->
<para>
使用连接参数到一个正在启动的<productname>PostgreSQL</productname>集群时：
<screen>
<prompt>$ </prompt><userinput>pg_isready -h localhost -p 5433</userinput>
<computeroutput>localhost:5433 - rejecting connections</computeroutput>
<prompt>$</prompt> <userinput>echo $?</userinput>
<computeroutput>1</computeroutput>
</screen>
</para>

  <!--
<para>
   Running with connection parameters to a non-responsive <productname>PostgreSQL</productname> cluster:
<screen>
<prompt>$ </prompt><userinput>pg_isready -h someremotehost</userinput>
<computeroutput>someremotehost:5432 - no response</computeroutput>
<prompt>$</prompt> <userinput>echo $?</userinput>
<computeroutput>2</computeroutput>
</screen>
  </para>
-->
<para>
使用连接参数到一个非响应的<productname>PostgreSQL</productname>集群时：
<screen>
<prompt>$ </prompt><userinput>pg_isready -h someremotehost</userinput>
<computeroutput>someremotehost:5432 - no response</computeroutput>
<prompt>$</prompt> <userinput>echo $?</userinput>
<computeroutput>2</computeroutput>
</screen>
</para>

 </refsect1>

</refentry>
