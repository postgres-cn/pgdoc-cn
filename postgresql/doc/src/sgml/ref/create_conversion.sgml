<!-- doc/src/sgml/ref/create_conversion.sgml -->

<refentry id="SQL-CREATECONVERSION">
 <indexterm zone="sql-createconversion">
  <primary>CREATE CONVERSION</primary>
 </indexterm>

 <refmeta>
  <refentrytitle>CREATE CONVERSION</refentrytitle>
  <manvolnum>7</manvolnum>
  <refmiscinfo>SQL - Language Statements</refmiscinfo>
 </refmeta>

 <refnamediv>
  <refname>CREATE CONVERSION</refname>
  <refpurpose>定义一种新的编码转换</refpurpose>
 </refnamediv>

 <refsynopsisdiv>
<synopsis>
CREATE [ DEFAULT ] CONVERSION <replaceable>name</replaceable>
    FOR <replaceable>source_encoding</replaceable> TO <replaceable>dest_encoding</replaceable> FROM <replaceable>function_name</replaceable>
</synopsis>
 </refsynopsisdiv>

 <refsect1 id="sql-createconversion-description">
  <title>描述</title>

  <para>
   <command>CREATE CONVERSION</command>定义一种字符集编码间
   新的转换。还有，被标记为<literal>DEFAULT</>的转换将被
   自动地用于客户端和服务器之间的编码转换。为了这个目的，必须定义两个
   转换（从编码 A 到 B <emphasis>以及</emphasis>从编码 B 到 A）。
 </para>

  <para>
   要创建一个转换，你必须拥有该函数上的<literal>EXECUTE</literal>特权
   以及目标模式上的<literal>CREATE</literal>特权。
  </para>
 </refsect1>


 <refsect1>
  <title>参数</title>

   <variablelist>
    <varlistentry>
     <term><literal>DEFAULT</literal></term>

     <listitem>
      <para>
       <literal>DEFAULT</>子句表示这个转换是从源编码到目标编码的默认
       转换。在一个模式中对于每一个编码对，只应该有一个默认转换。
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><replaceable>name</replaceable></term>

     <listitem>
      <para>
       转换的名称，可以被模式限定。如果没有被模式限定，该转换被定义在
       当前模式中。在一个模式中，转换名称必须唯一。
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><replaceable>source_encoding</replaceable></term>

     <listitem>
      <para>
       源编码名称。
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><replaceable>dest_encoding</replaceable></term>

     <listitem>
      <para>
       目标编码名称。
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><replaceable>function_name</replaceable></term>

     <listitem>
      <para>
       被用来执行转换的函数。函数名可以被模式限定。如果没有，将在路径
       中查找该函数。
      </para>

      <para>
       该函数必须具有一下的特征：

<programlisting>
conv_proc(
    integer,  -- 源编码 ID
    integer,  -- 目标编码 ID
    cstring,  -- 源字符串（空值终止的 C 字符串）
    internal, -- 目标（用一个空值终止的 C 字符串填充）
    integer   -- 源字符串长度
) RETURNS void;
</programlisting></para>
     </listitem>
    </varlistentry>
   </variablelist>
 </refsect1>

 <refsect1 id="sql-createconversion-notes">
  <title>注解</title>

  <para>
   使用<command>DROP CONVERSION</command>可以移除用户定义的转换。
  </para>

  <para>
   创建转换所要求的特权可能在未来的发行中被更改。
  </para>
 </refsect1>

 <refsect1 id="sql-createconversion-examples">
  <title>示例</title>

  <para>
   使用<function>myfunc</>创建一个从编码<literal>UTF8</literal>到
   <literal>LATIN1</literal>的转换：
<programlisting>
CREATE CONVERSION myconv FOR 'UTF8' TO 'LATIN1' FROM myfunc;
</programlisting></para>
 </refsect1>


 <refsect1 id="sql-createconversion-compat">
  <title>兼容性</title>

  <para>
    <command>CREATE CONVERSION</command>是一种
    <productname>PostgreSQL</productname>扩展。在 SQL 标准中
    没有<command>CREATE CONVERSION</command>语句，但是有
    一个目的和语法都类似的
    <command>CREATE TRANSLATION</command>语句。
  </para>
 </refsect1>


 <refsect1 id="sql-createconversion-seealso">
  <title>另见</title>

  <simplelist type="inline">
   <member><xref linkend="sql-alterconversion"></member>
   <member><xref linkend="sql-createfunction"></member>
   <member><xref linkend="sql-dropconversion"></member>
  </simplelist>
 </refsect1>

</refentry>
