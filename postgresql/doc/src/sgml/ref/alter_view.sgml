<!--
doc/src/sgml/ref/alter_view.sgml
PostgreSQL documentation
-->

<refentry id="SQL-ALTERVIEW">
 <indexterm zone="sql-alterview">
  <primary>ALTER VIEW</primary>
 </indexterm>

 <refmeta>
  <refentrytitle>ALTER VIEW</refentrytitle>
  <manvolnum>7</manvolnum>
  <refmiscinfo>SQL - Language Statements</refmiscinfo>
 </refmeta>

 <refnamediv>
  <refname>ALTER VIEW</refname>
  <refpurpose>更改一个视图的定义</refpurpose>
 </refnamediv>

 <refsynopsisdiv>
<synopsis>
ALTER VIEW [ IF EXISTS ] <replaceable class="parameter">name</replaceable> ALTER [ COLUMN ] <replaceable class="PARAMETER">column_name</replaceable> SET DEFAULT <replaceable class="PARAMETER">expression</replaceable>
ALTER VIEW [ IF EXISTS ] <replaceable class="parameter">name</replaceable> ALTER [ COLUMN ] <replaceable class="PARAMETER">column_name</replaceable> DROP DEFAULT
ALTER VIEW [ IF EXISTS ] <replaceable class="parameter">name</replaceable> OWNER TO <replaceable class="PARAMETER">new_owner</replaceable>
ALTER VIEW [ IF EXISTS ] <replaceable class="parameter">name</replaceable> RENAME TO <replaceable class="parameter">new_name</replaceable>
ALTER VIEW [ IF EXISTS ] <replaceable class="parameter">name</replaceable> SET SCHEMA <replaceable class="parameter">new_schema</replaceable>
ALTER VIEW [ IF EXISTS ] <replaceable class="parameter">name</replaceable> SET ( <replaceable class="parameter">view_option_name</replaceable> [= <replaceable class="parameter">view_option_value</replaceable>] [, ... ] )
ALTER VIEW [ IF EXISTS ] <replaceable class="parameter">name</replaceable> RESET ( <replaceable class="parameter">view_option_name</replaceable> [, ... ] )
</synopsis>
 </refsynopsisdiv>

 <refsect1>
  <title>描述</title>

  <para>
   <command>ALTER VIEW</command>更改一个视图的多种辅助属性（如果想要
   修改视图的查询定义，应使用<command>CREATE OR REPLACE VIEW</>）。
  </para>

  <para>
   要使用<command>ALTER VIEW</>，你必须拥有该视图。要更改一个视图的模式，
   你还必须具有新模式上的<literal>CREATE</>特权。要更改拥有者，你还必须
   是新拥有角色的一个直接或者间接成员，并且该角色必须具有该视图的模式上的
   <literal>CREATE</literal>特权（这些限制强制修改拥有者不能做一些通过删除和重
   建视图做不到的事情。不过，一个超级用户怎么都能更改任何视图的所有权。）。
  </para>
 </refsect1>

 <refsect1>
  <title>参数</title>

  <variablelist>
   <varlistentry>
    <term><replaceable class="parameter">name</replaceable></term>
    <listitem>
     <para>
      一个现有视图的名称（可以是模式限定的）。
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>IF EXISTS</literal></term>
    <listitem>
     <para>
      该视图不存在时不要抛出一个错误。这种情况下会发出一个提示。
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>SET</literal>/<literal>DROP DEFAULT</literal></term>
    <listitem>
     <para>
      这些形式为一个列设置或者移除默认值。对于任何在该视图上的
      <command>INSERT</>或者<command>UPDATE</>命令，一个视图列的默认值
      会在引用该视图的任何规则或触发器之前被替换进来。因此，该视图的默认值将会
      优先于来自底层关系的任何默认值。
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><replaceable class="PARAMETER">new_owner</replaceable></term>
    <listitem>
     <para>
      该视图的新拥有者的用户名。
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><replaceable class="parameter">new_name</replaceable></term>
    <listitem>
     <para>
      该视图的新名称。
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><replaceable class="parameter">new_schema</replaceable></term>
    <listitem>
     <para>
      该视图的新模式。
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>SET ( <replaceable class="parameter">view_option_name</replaceable> [= <replaceable class="parameter">view_option_value</replaceable>] [, ... ] )</literal></term>
    <term><literal>RESET ( <replaceable class="parameter">view_option_name</replaceable> [, ... ] )</literal></term>
    <listitem>
     <para>
      设置或者重置一个视图选项。当前支持的选项有：
      <variablelist>
       <varlistentry>
        <term><literal>check_option</literal> (<type>string</type>)</term>
        <listitem>
         <para>
          更改该视图的检查选项。值必须是<literal>local</literal>
          或者<literal>cascaded</literal>。
         </para>
        </listitem>
       </varlistentry>
       <varlistentry>
        <term><literal>security_barrier</literal> (<type>boolean</type>)</term>
        <listitem>
         <para>
          更改该视图的安全屏障属性。值必须是一个布尔值，如
          <literal>true</literal>或者<literal>false</literal>。
         </para>
        </listitem>
       </varlistentry>
      </variablelist>
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </refsect1>

 <refsect1>
  <title>注解</title>

  <para>
   由于历史原因，<command>ALTER TABLE</command>也可以用于视图，但是
   只允许等效于以上形式的<command>ALTER TABLE</command>变体用于视图。
  </para>
 </refsect1>

 <refsect1>
  <title>示例</title>

  <para>
   把视图<literal>foo</literal>重命名为
   <literal>bar</literal>：
<programlisting>
ALTER VIEW foo RENAME TO bar;
</programlisting>
  </para>

  <para>
   要为一个可更新视图附加一个默认列值：
<programlisting>
CREATE TABLE base_table (id int, ts timestamptz);
CREATE VIEW a_view AS SELECT * FROM base_table;
ALTER VIEW a_view ALTER COLUMN ts SET DEFAULT now();
INSERT INTO base_table(id) VALUES(1);  -- ts will receive a NULL
INSERT INTO a_view(id) VALUES(2);  -- ts will receive the current time
</programlisting></para>
 </refsect1>

 <refsect1>
  <title>兼容性</title>

  <para>
   <command>ALTER VIEW</command>是一种<productname>PostgreSQL</>
   的 SQL 标准扩展。
  </para>
 </refsect1>

 <refsect1>
  <title>另见</title>

  <simplelist type="inline">
   <member><xref linkend="sql-createview"></member>
   <member><xref linkend="sql-dropview"></member>
  </simplelist>
 </refsect1>
</refentry>
