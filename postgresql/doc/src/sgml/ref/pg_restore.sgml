<!-- doc/src/sgml/ref/pg_restore.sgml -->

<refentry id="APP-PGRESTORE">
 <indexterm zone="app-pgrestore">
  <primary>pg_restore</primary>
 </indexterm>
 <refmeta>
  <refentrytitle>pg_restore</refentrytitle>
  <manvolnum>1</manvolnum>
  <refmiscinfo>Application</refmiscinfo>
 </refmeta>

 <refnamediv>
  <refname>pg_restore</refname>

  <refpurpose>
   <!-- 
   restore a <productname>PostgreSQL</productname> database from an
   archive file created by <application>pg_dump</application> 
   -->
   从<application>pg_dump</application>创建的备份文件中恢复<productname>PostgreSQL</productname>数据库
  </refpurpose>
 </refnamediv>

 <refsynopsisdiv>
  <cmdsynopsis>
   <command>pg_restore</command>
   <arg rep="repeat"><replaceable>connection-option</replaceable></arg>
   <arg rep="repeat"><replaceable>option</replaceable></arg>
   <arg choice="opt"><replaceable>filename</replaceable></arg>
  </cmdsynopsis>
 </refsynopsisdiv>


 <refsect1 id="app-pgrestore-description">
  <!--
<title>Description</title>
-->
<title>描述</title>

  <!--
<para>
   <application>pg_restore</application> is a utility for restoring a
   <productname>PostgreSQL</productname> database from an archive
   created by <xref linkend="app-pgdump"> in one of the non-plain-text
   formats.  It will issue the commands necessary to reconstruct the
   database to the state it was in at the time it was saved.  The
   archive files also allow <application>pg_restore</application> to
   be selective about what is restored, or even to reorder the items
   prior to being restored. The archive files are designed to be
   portable across architectures.
  </para>
-->
<para>
<application>pg_restore</application>用于恢复由<xref linkend="app-pgdump">
转储的任何非纯文本格式中的<productname>PostgreSQL</productname>数据库。
它将发出必要的命令重建数据库，并把它恢复成转储时的样子。
归档(备份)文件还允许<application>pg_restore</application>有选择地进行恢复，
甚至在恢复前重新排列条目的顺序。归档的文件设计成可以在不同的硬件体系之间移植。
</para>

  <!--
<para>
   <application>pg_restore</application> can operate in two modes.
   If a database name is specified, <application>pg_restore</application>
   connects to that database and restores archive contents directly into
   the database.  Otherwise, a script containing the SQL
   commands necessary to rebuild the database is created and written
   to a file or standard output.  This script output is equivalent to
   the plain text output format of <application>pg_dump</application>.
   Some of the options controlling the output are therefore analogous to
   <application>pg_dump</application> options.
  </para>
-->
<para>
<application>pg_restore</application>可以按照两种模式操作。如果声明了数据库名字，
那么<application>pg_restore</application>连接到那个数据库并直接恢复归档内容到数据库里。
否则，先创建一个包含重建数据库所必须的 SQL 命令的脚本，并且写入到一个文件或者标准输出。
这个脚本输出等效于<application>pg_dump</application>的纯文本输出格式。因此，
一些控制输出的选项就是模拟<application>pg_dump</application>的选项设置的。
</para>

  <!--
<para>
   Obviously, <application>pg_restore</application> cannot restore information
   that is not present in the archive file.  For instance, if the
   archive was made using the <quote>dump data as
   <command>INSERT</command> commands</quote> option,
   <application>pg_restore</application> will not be able to load the data
   using <command>COPY</command> statements.
  </para>
-->
<para>
显然，<application>pg_restore</application>无法恢复那些不存在归档文件中的信息；比如，
如果归档是用<quote>把数据转储为<command>INSERT</command>命令</quote>选项制作的，
那么<application>pg_restore</application>将不能使用<command>COPY</command>语句加载数据。
</para>
 </refsect1>

 <refsect1 id="app-pgrestore-options">
  <!-- 
  <title>Options</title> 
  -->
  <title>选项</title>

   
<para>
<!-- 
    <application>pg_restore</application> accepts the following command
    line arguments.
 -->
<application>pg_restore</application>接受下列命令行参数：
    <variablelist>
     <varlistentry>
      <term><replaceable class="parameter">filename</replaceable></term>
      <listitem>
<!--
       <para>
       Specifies the location of the archive file (or directory, for a
       directory-format archive) to be restored.
       If not specified, the standard input is used.
       </para>
-->
<para>
要恢复的备份文件（或目录，对于目录格式归档）的位置。如果没有声明，则使用标准输入。
</para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-a</option></term>
      <term><option>--data-only</option></term>
      <listitem>
       <!--
<para>
        Restore only the data, not the schema (data definitions).
        Table data, large objects, and sequence values are restored,
        if present in the archive.
       </para>
-->
<para>
只恢复数据，而不恢复表模式(数据定义)。恢复表数据、大对象和序列值，如果在档案中存在。
</para>

       <!--
<para>
        This option is similar to, but for historical reasons not identical
        to, specifying <option>&#045;-section=data</>.
       </para>
-->
<para>
这个选项类似于，但是由于历史原因不等于声明<option>--section=data</>。
</para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-c</option></term>
      <term><option>--clean</option></term>
      <listitem>
       <!--
<para>
        Clean (drop) database objects before recreating them.
        (Unless <option>&#045;-if-exists</> is used,
        this might generate some harmless error messages, if any objects
        were not present in the destination database.)
       </para>
-->
<para>
创建数据库对象前先清理(删除)它们。（如果任一对象不在目标数据库中，
这可能会产生一些无害的错误消息，除非使用了<option>--if-exists</>。）
</para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-C</option></term>
      <term><option>--create</option></term>
      <listitem>
       <!--
<para>
        Create the database before restoring into it.
        If <option>&#045;-clean</option> is also specified, drop and
        recreate the target database before connecting to it.
       </para>
-->
<para>
在恢复数据库之前先创建它。如果也声明了<option>--clean</option>，
那么在连接到数据库之前删除并重建目标数据库。
</para>

       <!--
<para>
        When this option is used, the database named with <option>-d</option>
        is used only to issue the initial <command>DROP DATABASE</> and
        <command>CREATE DATABASE</> commands.  All data is restored into the
        database name that appears in the archive.
       </para>
-->
<para>
如果出现了这个选项，和<option>-d</option>在一起的数据库名只是用于发出最初的
<command>DROP DATABASE</>和<command>CREATE DATABASE</>命令。
所有数据都恢复到名字出现在归档中的数据库中去。
</para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-d <replaceable class="parameter">dbname</replaceable></option></term>
      <term><option>--dbname=<replaceable class="parameter">dbname</replaceable></option></term>
      <listitem>
       <!--
<para>
        Connect to database <replaceable
        class="parameter">dbname</replaceable> and restore directly
        into the database.
       </para>
-->
<para>
与数据库<replaceable class="parameter">dbname</replaceable>连接并且直接恢复到该数据库中。
</para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-e</option></term>
      <term><option>--exit-on-error</option></term>
      <listitem>
       <!--
<para>
        Exit if an error is encountered while sending SQL commands to
        the database. The default is to continue and to display a count of
        errors at the end of the restoration.
       </para>
-->
<para>
如果在向数据库发送 SQL 命令的时候碰到错误，则退出。
缺省是继续执行并且在恢复结束时显示一个错误计数。
</para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-f <replaceable>filename</replaceable></option></term>
      <term><option>--file=<replaceable>filename</replaceable></option></term>
      <listitem>
       <!--
<para>
        Specify output file for generated script, or for the listing
        when used with <option>-l</option>. Default is the standard
        output.
       </para>
-->
<para>
指定生成的脚本的输出文件，或者出现<option>-l</option>选项时用于列表的文件，
缺省是标准输出。
</para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-F <replaceable class="parameter">format</replaceable></option></term>
      <term><option>--format=<replaceable class="parameter">format</replaceable></option></term>
      <listitem>
       
<para>
<!-- 
        Specify format of the archive.  It is not necessary to specify
        the format, since <application>pg_restore</application> will
        determine the format automatically. If specified, it can be
        one of the following:
-->
指定备份文件的格式。因为<application>pg_restore</application>会自动判断格式，
所以如果一定要指定的话，它可以是下面之一：
       <variablelist>
        <varlistentry>
         <term><literal>c</></term>
         <term><literal>custom</></term>
         <listitem>
<!--
          <para>
           The archive is in the custom format of
           <application>pg_dump</application>.
          </para>
-->
<para>
备份的格式是来自<application>pg_dump</application>的自定义格式。
</para>
         </listitem>
        </varlistentry>

        <varlistentry>
         <term><literal>d</></term>
         <term><literal>directory</></term>
         <listitem>
          <!--
<para>
           The archive is a directory archive.
          </para>
-->
<para>
备份是一个目录归档。
</para>
         </listitem>
        </varlistentry>

        <varlistentry>
         <term><literal>t</></term>
         <term><literal>tar</></term>
         <listitem>
          <!--
<para>
           The archive is a <command>tar</command> archive.
          </para>
-->
<para>
备份是一个<command>tar</command>归档。
</para>
         </listitem>
        </varlistentry>
       </variablelist></para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-i</option></term>
      <term><option>--ignore-version</option></term>
      <listitem>
       <!--
<para>
        A deprecated option that is now ignored.
       </para>
-->
<para>
一个现在已经忽略了的已废弃的选项。
</para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-I <replaceable class="parameter">index</replaceable></option></term>
      <term><option>--index=<replaceable class="parameter">index</replaceable></option></term>
      <listitem>
       <!--
<para>
        Restore definition of named index only.
       </para>
-->
<para>
只恢复命名的索引。
</para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-j <replaceable class="parameter">number-of-jobs</replaceable></option></term>
      <term><option>--jobs=<replaceable class="parameter">number-of-jobs</replaceable></option></term>
      <listitem>
       <!--
<para>
        Run the most time-consuming parts
        of <application>pg_restore</> &mdash; those which load data,
        create indexes, or create constraints &mdash; using multiple
        concurrent jobs.  This option can dramatically reduce the time
        to restore a large database to a server running on a
        multiprocessor machine.
       </para>
-->
<para>
运行<application>pg_restore</>耗时最多的部分，该部分使用多重并发工作加载数据、
创建索引或创建约束。这个选项可以显著的减少恢复一个大数据库到一个运行多重处理器服务器的时间。
</para>

       <!--
<para>
        Each job is one process or one thread, depending on the
        operating system, and uses a separate connection to the
        server.
       </para>
-->
<para>
每个工作是一个过程或一个线程，取决于操作系统，并使用一个单独到服务器的连接。
</para>

       <!--
<para>
        The optimal value for this option depends on the hardware
        setup of the server, of the client, and of the network.
        Factors include the number of CPU cores and the disk setup.  A
        good place to start is the number of CPU cores on the server,
        but values larger than that can also lead to faster restore
        times in many cases.  Of course, values that are too high will
        lead to decreased performance because of thrashing.
       </para>
-->
<para>
该选项的最佳值依赖于服务器、客户端和网络的硬件设置。因素包含CPU内核的数量和磁盘设置。
良好的开端是服务器上CPU内核的数量，但是较大的值在许多情况下也可以更快的恢复。
当然，太高的值因为超负荷将会导致性能降低。
</para>

       <!--
<para>
        Only the custom and directory archive formats are supported
        with this option.
        The input must be a regular file or directory (not, for example, a
        pipe).  This option is ignored when emitting a script rather
        than connecting directly to a database server.  Also, multiple
        jobs cannot be used together with the
        option <option>&#045;-single-transaction</option>.
       </para>
-->
<para>
该选项只支持自定义和目录归档格式。输入必须是有规律的文件或目录（例如不是通道）。
发出一个脚本而不是连接目录到一个数据库服务器时忽略该选项。还有，
多重工作不能与<option>--single-transaction</option>选项一起使用。
</para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-l</option></term>
      <term><option>--list</option></term>
      <listitem>
       <!--
<para>
        List the contents of the archive. The output of this operation
        can be used as input to the <option>-L</option> option.  Note that
        if filtering switches such as <option>-n</> or <option>-t</> are
        used with <option>-l</>, they will restrict the items listed.
       </para>
-->
<para>
列出备份的内容。这个操作的输出可以用作<option>-L</option>选项的输入。
请注意，如果过滤开关如<option>-n</>或<option>-t</>和<option>-l</>一起使用，
它们将限制列出的条目。
</para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-L <replaceable class="parameter">list-file</replaceable></option></term>
      <term><option>--use-list=<replaceable class="parameter">list-file</replaceable></option></term>
      <listitem>
       <!--
<para>
        Restore only those archive elements that are listed in <replaceable
        class="PARAMETER">list-file</replaceable>, and restore them in the
        order they appear in the file.  Note that
        if filtering switches such as <option>-n</> or <option>-t</> are
        used with <option>-L</>, they will further restrict the items restored.
       </para>
-->
<para>
以它们在文件中出现的顺序只恢复在<replaceable class="PARAMETER">list-file</replaceable>里面的元素。
请注意，如果过滤开关如<option>-n</>或<option>-t</>和<option>-l</>一起使用，
它们将进一步的限制恢复的条目。
</para>
       <!--
<para><replaceable class="PARAMETER">list-file</> is normally created by
        editing the output of a previous <option>-l</> operation.
        Lines can be moved or removed, and can also
        be commented out by placing a semicolon (<literal>;</literal>) at the
        start of the line.  See below for examples.
       </para>
-->
<para>
<replaceable class="PARAMETER">list-file</>通常通过编辑先前<option>-l</>
操作的输出来创建。你可以移动或删除各个行并且也可以通过在行开头放置分号
(<literal>;</literal>)的方式注释。例子见下文。
</para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-n <replaceable class="parameter">namespace</replaceable></option></term>
      <term><option>--schema=<replaceable class="parameter">schema</replaceable></option></term>
      <listitem>
       <!--
<para>
        Restore only objects that are in the named schema.  Multiple schemas
        may be specified with multiple <option>-n</> switches.  This can be
        combined with the <option>-t</option> option to restore just a
        specific table.
       </para>
-->
<para>
只恢复指定名字的模式里面的对象。可以使用多个<option>-n</>选项指定多个模式。
这个选项可以和<option>-t</option>选项一起使用，
实现只转储一个表的数据。
</para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-O</option></term>
      <term><option>--no-owner</option></term>
      <listitem>
       <!--
<para>
        Do not output commands to set
        ownership of objects to match the original database.
        By default, <application>pg_restore</application> issues
        <command>ALTER OWNER</> or
        <command>SET SESSION AUTHORIZATION</command>
        statements to set ownership of created schema elements.
        These statements will fail unless the initial connection to the
        database is made by a superuser
        (or the same user that owns all of the objects in the script).
        With <option>-O</option>, any user name can be used for the
        initial connection, and this user will own all the created objects.
       </para>
-->
<para>
不要输出设置对象权限与最初数据库匹配的命令。缺省时，<application>pg_restore</application>
发出<command>ALTER OWNER</>或<command>SET SESSION AUTHORIZATION</command>
语句设置创建出来的模式元素的所有者权限。如果最初的数据库连接不是由超级用户
(或者是拥有所有创建出来的对象的同一个用户)发起的，那么这些语句将失败。
如果使用<option>-O</option>，那么任何用户都可以用于初始的连接，
并且这个用户将拥有所有创建出来的对象。
</para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-P <replaceable class="parameter">function-name(argtype [, ...])</replaceable></option></term>
      <term><option>--function=<replaceable class="parameter">function-name(argtype [, ...])</replaceable></option></term>
      <listitem>
       <!--
<para>
        Restore the named function only.  Be careful to spell the function
        name and arguments exactly as they appear in the dump file's table
        of contents.  Multiple functions may be specified with multiple
        <option>-P</> switches
       </para>
-->
<para>
只恢复指定的命名函数。请注意仔细拼写函数名及其参数，应该和转储的内容列表中的完全一样。
可以使用多个<option>-P</>选项指定多个函数。
</para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-R</option></term>
      <term><option>--no-reconnect</option></term>
      <listitem>
       <!--
<para>
        This option is obsolete but still accepted for backwards
        compatibility.
       </para>
-->
<para>
这个选项已经废弃了，但是为了保持向下兼容仍然接受。
</para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-s</option></term>
      <term><option>--schema-only</option></term>
      <listitem>
       <!--
<para>
        Restore only the schema (data definitions), not data,
        to the extent that schema entries are present in the archive.
       </para>
-->
<para>
只恢复表结构(数据定义)，不恢复数据，在这个意义上来说在归档里有模式的记录。
</para>
       <!--
<para>
        This option is the inverse of <option>&#045;-data-only</>.
        It is similar to, but for historical reasons not identical to,
        specifying
        <option>&#045;-section=pre-data &#045;-section=post-data</>.
       </para>
-->
<para>
这个选项是<option>--data-only</>的相反。它类似于，但是因为历史原因不等于声明
<option>--section=pre-data --section=post-data</>。
</para>
       <!--
<para>
        (Do not confuse this with the <option>&#045;-schema</> option, which
        uses the word <quote>schema</> in a different meaning.)
       </para>
-->
<para>
请不要和<option>--schema</>选项混淆，那里使用了<quote>模式</>(schema)的其它含义。
</para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-S <replaceable class="parameter">username</replaceable></option></term>
      <term><option>--superuser=<replaceable class="parameter">username</replaceable></option></term>
      <listitem>
       <!--
<para>
        Specify the superuser user name to use when disabling triggers.
        This is relevant only if <option>&#045;-disable-triggers</> is used.
       </para>
-->
<para>
设置关闭触发器时使用的超级用户的用户名。只有在设置了<option>--disable-triggers</>
的时候才有用。
</para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-t <replaceable class="parameter">table</replaceable></option></term>
      <term><option>--table=<replaceable class="parameter">table</replaceable></option></term>
      <listitem>
       <!--
<para>
        Restore definition and/or data of named table only. Multiple tables
        may be specified with multiple <option>-t</> switches. This can be
        combined with the <option>-n</option> option to specify a schema.
       </para>
-->
<para>
只恢复指定的表的定义和/或数据。可以声明多个<option>-t</>指定多个表。
可以和<option>-n</option>选项组合以声明一个模式。
</para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-T <replaceable class="parameter">trigger</replaceable></option></term>
      <term><option>--trigger=<replaceable class="parameter">trigger</replaceable></option></term>
      <listitem>
       <!--
<para>
        Restore named trigger only.  Multiple triggers may be specified with
        multiple <option>-T</> switches.
       </para>
-->
<para>
只恢复指定的触发器。可以使用多个<option>-T</>选项指定多个触发器。
</para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-v</option></term>
      <term><option>--verbose</option></term>
      <listitem>
       <!--
<para>
        Specifies verbose mode.
       </para>
-->
<para>
声明冗余模式。
</para>
      </listitem>
     </varlistentry>

     <varlistentry>
       <term><option>-V</></term>
       <term><option>--version</></term>
       <listitem>
       <!--
<para>
       Print the <application>pg_restore</application> version and exit.
       </para>
-->
<para>
打印<application>pg_restore</application>的版本然后退出。
</para>
       </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-x</option></term>
      <term><option>--no-privileges</option></term>
      <term><option>--no-acl</option></term>
      <listitem>
       <!--
<para>
        Prevent restoration of access privileges (grant/revoke commands).
       </para>
-->
<para>
禁止恢复访问权限(grant/revoke 命令)。
</para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-1</option></term>
      <term><option>--single-transaction</option></term>
      <listitem>
       <!--
<para>
        Execute the restore as a single transaction (that is, wrap the
        emitted commands in <command>BEGIN</>/<command>COMMIT</>).  This
        ensures that either all the commands complete successfully, or no
        changes are applied. This option implies
        <option>&#045;-exit-on-error</>.
       </para>
-->
<para>
将整个恢复过程作为一个完整的事务来执行，也就是将所有恢复命令放在
<command>BEGIN</>/<command>COMMIT</>之间。这将保证恢复要么全部成功要么没有任何影响。
该选项隐含<option>--exit-on-error</>。
</para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>--disable-triggers</></term>
      <listitem>
       <!--
<para>
        This option is relevant only when performing a data-only restore.
        It instructs <application>pg_restore</application> to execute commands
        to temporarily disable triggers on the target tables while
        the data is reloaded.  Use this if you have referential
        integrity checks or other triggers on the tables that you
        do not want to invoke during data reload.
       </para>
-->
<para>
这个选项只有在执行仅恢复数据的时候才相关。它告诉<application>pg_restore</application>
在加载数据的时候执行一些命令临时关闭在目标表上的触发器。
如果你在表上有完整性检查或者其它触发器，而你又不希望在加载数据的时候激活它们，
那么可以使用这个选项。
</para>

       <!--
<para>
        Presently, the commands emitted for
        <option>&#045;-disable-triggers</> must be done as superuser.  So you
        should also specify a superuser name with <option>-S</> or,
        preferably, run <application>pg_restore</application> as a
        <productname>PostgreSQL</> superuser.
       </para>
-->
<para>
目前，为<option>--disable-triggers</>发出的命令必须以超级用户发出。因此，
你应该也要用<option>-S</>声明一个超级用户名，或者更好是以超级用户身份运行
<application>pg_restore</application>。
</para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>--if-exists</option></term>
      <listitem>
<!--
       <para>
        Use conditional commands (i.e. add an <literal>IF EXISTS</literal>
        clause) when cleaning database objects.  This option is not valid
        unless <option>&#045;-clean</> is also specified.
       </para>
-->
<para>
当清理数据库对象时使用条件命令（也就是，添加一个<literal>IF EXISTS</literal>子句）。
这个选项是无效的，除非也声明了<option>--clean</>。
</para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>--no-data-for-failed-tables</option></term>
      <listitem>
       <!--
<para>
        By default, table data is restored even if the creation command
        for the table failed (e.g., because it already exists).
        With this option, data for such a table is skipped.
        This behavior is useful if the target database already
        contains the desired table contents.  For example,
        auxiliary tables for <productname>PostgreSQL</> extensions
        such as <productname>PostGIS</> might already be loaded in
        the target database; specifying this option prevents duplicate
        or obsolete data from being loaded into them.
       </para>
-->
<para>
缺省时，即使创建表的命令因为该表已经存在而失败了，表中的数据仍将被恢复。
使用这个选项之后，这些表的数据就将跳过恢复操作。
如果目标数据库已经包含所需恢复的某些表的内容时，该选项就很有用处了。
比如，用于<productname>PostgreSQL</>扩展的辅助表(例如<productname>PostGIS</>)
就可能已经在目标数据库中恢复过了，
使用该选项就可以防止多次恢复以致重复或者覆盖了已经恢复的数据。
</para>

       <!--
<para>
        This option is effective only when restoring directly into a
        database, not when producing SQL script output.
       </para>
-->
<para>
该选项仅在直接向一个数据库中恢复的时候有效，在生成 SQL 脚本输出时无效。
</para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>--no-security-labels</option></term>
      <listitem>
       <!--
<para>
        Do not output commands to restore security labels,
        even if the archive contains them.
       </para>
-->
<para>
不要输出恢复安全标签的命令，即使归档包含它们。
</para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>--no-tablespaces</option></term>
      <listitem>
       <!--
<para>
        Do not output commands to select tablespaces.
        With this option, all objects will be created in whichever
        tablespace is the default during restore.
       </para>
-->
<para>
不要输出选择表空间的命令。有这个选项，在恢复期间所有的对象都将在缺省表空间中创建。
</para>
      </listitem>
     </varlistentry>

     <varlistentry>
       <term><option>--section=<replaceable class="parameter">sectionname</replaceable></option></term>
       <listitem>
         <!--
<para>
          Only restore the named section. The section name can be
          <option>pre-data</>, <option>data</>, or <option>post-data</>.
          This option can be specified more than once to select multiple
          sections. The default is to restore all sections.
         </para>
-->
<para>
值恢复指定的章节。章节名可以是<option>pre-data</>, <option>data</>, 或 
<option>post-data</>。可以多次声明这个选项以选择多个章节。缺省是恢复所有章节。
</para>
         <!--
<para>
          The data section contains actual table data as well as large-object
          definitions.
          Post-data items consist of definitions of indexes, triggers, rules
          and constraints other than validated check constraints.
          Pre-data items consist of all other data definition items.
         </para>
-->
<para>
数据章节包含实际的表数据和大对象定义。原始数据项包含索引、触发器、规则和约束
（除了验证检查约束）的定义。先前的数据项包含所有其他数据定义项。
</para>
       </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>--use-set-session-authorization</option></term>
      <listitem>
       <!--
<para>
        Output SQL-standard <command>SET SESSION AUTHORIZATION</> commands
        instead of <command>ALTER OWNER</> commands to determine object
        ownership.  This makes the dump more standards-compatible, but
        depending on the history of the objects in the dump, might not restore
        properly.
       </para>
-->
<para>
输出 SQL 标准的<command>SET SESSION AUTHORIZATION</>命令，而不是
<command>ALTER OWNER</>命令来确定对象的所有权。这样令转储与标准兼容的更好，
但是根据转储中对象的历史，这个转储可能不能恰当地恢复。
</para>
      </listitem>
     </varlistentry>

     <varlistentry>
       <term><option>-?</></term>
       <term><option>--help</></term>
       <listitem>
       <!--
<para>
       Show help about <application>pg_restore</application> command line
       arguments, and exit.
       </para>
-->
<para>
显示关于<application>pg_restore</application>命令行参数的帮助然后退出。
</para>
       </listitem>
     </varlistentry>

    </variablelist>
   </para>

   
<para>
<!-- 
    <application>pg_restore</application> also accepts
    the following command line arguments for connection parameters:
-->
<application>pg_restore</application>还接受下面的命令行参数做为连接参数：
    <variablelist>
     <varlistentry>
      <term><option>-h <replaceable class="parameter">host</replaceable></option></term>
      <term><option>--host=<replaceable class="parameter">host</replaceable></option></term>
      <listitem>
<!--
       <para>
        Specifies the host name of the machine on which the server is
        running.  If the value begins with a slash, it is used as the
        directory for the Unix domain socket. The default is taken
        from the <envar>PGHOST</envar> environment variable, if set,
        else a Unix domain socket connection is attempted.
       </para>
-->
<para>
指定运行服务器的主机名。如果数值以斜杠开头，则被用作到 Unix 域套接字的路径。
缺省从<envar>PGHOST</envar>环境变量中获取(如果设置了的话)，否则，
尝试一个 Unix 域套接字连接。
</para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-p <replaceable class="parameter">port</replaceable></option></term>
      <term><option>--port=<replaceable class="parameter">port</replaceable></option></term>
      <listitem>
       <!--
<para>
        Specifies the TCP port or local Unix domain socket file
        extension on which the server is listening for connections.
        Defaults to the <envar>PGPORT</envar> environment variable, if
        set, or a compiled-in default.
        </para>
-->
<para>
指定服务器正在侦听的 TCP 端口或本地 Unix 域套接字文件的扩展(描述符)。
缺省使用<envar>PGPORT</envar>环境变量(如果设置了的话)，否则，编译时的缺省值。
</para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-U <replaceable>username</replaceable></option></term>
      <term><option>--username=<replaceable class="parameter">username</replaceable></option></term>
      <listitem>
       <!--
<para>
        User name to connect as.
       </para>
-->
<para>
要连接的用户名。
</para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-w</></term>
      <term><option>--no-password</></term>
      <listitem>
       <!--
<para>
        Never issue a password prompt.  If the server requires
        password authentication and a password is not available by
        other means such as a <filename>.pgpass</filename> file, the
        connection attempt will fail.  This option can be useful in
        batch jobs and scripts where no user is present to enter a
        password.
       </para>
-->
<para>
从不发出密码提示问题。如果服务器要求密码认证并且密码不可用于其他意思如
<filename>.pgpass</filename>文件，则连接尝试将会失败。
该选项在批量工作和不存在用户输入密码的脚本中很有帮助。
</para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-W</option></term>
      <term><option>--password</option></term>
      <listitem>
       <!--
<para>
        Force <application>pg_restore</application> to prompt for a
        password before connecting to a database.
       </para>
-->
<para>
强制<application>pg_restore</application>在连接到数据库之前提示一个密码。
</para>

       <!--
<para>
        This option is never essential, since
        <application>pg_restore</application> will automatically prompt
        for a password if the server demands password authentication.
        However, <application>pg_restore</application> will waste a
        connection attempt finding out that the server wants a password.
        In some cases it is worth typing <option>-W</> to avoid the extra
        connection attempt.
       </para>
-->
<para>
这个选项从来不是至关重要的，因为如果服务器需求密码认证，则<application>pg_restore</application>
自动提示一个密码。不过，<application>pg_restore</application>
将在找出服务器想要一个密码上浪费一个连接尝试。在某些情况下，值得输入<option>-W</>
以避免额外的连接尝试。
</para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>--role=<replaceable class="parameter">rolename</replaceable></option></term>
      <listitem>
       <!--
<para>
        Specifies a role name to be used to perform the restore.
        This option causes <application>pg_restore</> to issue a
        <command>SET ROLE</> <replaceable class="parameter">rolename</>
        command after connecting to the database. It is useful when the
        authenticated user (specified by <option>-U</>) lacks privileges
        needed by <application>pg_restore</>, but can switch to a role with
        the required rights.  Some installations have a policy against
        logging in directly as a superuser, and use of this option allows
        restores to be performed without violating the policy.
       </para>
-->
<para>
指定执行转储的角色名。这个选项导致连接到数据库之后<application>pg_restore</>
发出一个<command>SET ROLE</> <replaceable class="parameter">rolename</>命令。
当认证的用户（通过<option>-U</>指定）缺乏<application>pg_restore</>所需的权限时是很有用的，
可以转变成有所需权限的角色。一些安装有反对作为超级用户直接登录的政策，
使用这个选项允许转储不违反该政策。
</para>
      </listitem>
     </varlistentry>

    </variablelist>
   </para>
 </refsect1>


 <refsect1>
  <!-- 
  <title>Environment</title> 
  -->
  <title>环境变量</title>

  <variablelist>
   <varlistentry>
    <term><envar>PGHOST</envar></term>
    <term><envar>PGOPTIONS</envar></term>
    <term><envar>PGPORT</envar></term>
    <term><envar>PGUSER</envar></term>

    <listitem>
     <!--
<para>
      Default connection parameters
     </para>
-->
<para>
缺省连接参数。
</para>
    </listitem>
   </varlistentry>
  </variablelist>

  <!--
<para>
   This utility, like most other <productname>PostgreSQL</> utilities,
   also uses the environment variables supported by <application>libpq</>
   (see <xref linkend="libpq-envars">).  However, it does not read
   <envar>PGDATABASE</envar> when a database name is not supplied.
  </para>
-->
<para>
这个功用，类似大多数其他<productname>PostgreSQL</>实用工具，
也使用由<application>libpq</>支持的环境变量（参阅<xref linkend="libpq-envars">）。
不过，当没有提供数据库名字时，并不读取<envar>PGDATABASE</envar>。
</para>

 </refsect1>


 <refsect1 id="app-pgrestore-diagnostics">
  <!-- 
  <title>Diagnostics</title> 
  -->
  <title>诊断</title>

  <!--
<para>
   When a direct database connection is specified using the
   <option>-d</option> option, <application>pg_restore</application>
   internally executes <acronym>SQL</acronym> statements. If you have
   problems running <application>pg_restore</application>, make sure
   you are able to select information from the database using, for
   example, <xref linkend="app-psql">.  Also, any default connection
   settings and environment variables used by the
   <application>libpq</application> front-end library will apply.
  </para>
-->
<para>
当使用<option>-d</option>选项声明了直接数据库连接时，
<application>pg_restore</application>在内部执行<acronym>SQL</acronym>语句。
如果你运行<application>pg_restore</application>出了毛病，
请确保你能用类似<xref linkend="app-psql">这样的东西从数据库中选取信息。
还有，将会应用<application>libpq</application>前端库使用的任何缺省连接设置和环境变量。
</para>
 </refsect1>


 <refsect1 id="app-pgrestore-notes">
  <!--
<title>Notes</title>
-->
<title>注意</title>

  <!--
<para>
   If your installation has any local additions to the
   <literal>template1</> database, be careful to load the output of
   <application>pg_restore</application> into a truly empty database;
   otherwise you are likely to get errors due to duplicate definitions
   of the added objects.  To make an empty database without any local
   additions, copy from <literal>template0</> not <literal>template1</>, for example:
<programlisting>
CREATE DATABASE foo WITH TEMPLATE template0;
</programlisting>
  </para>
-->
<para>
如果你的安装给<literal>template1</>数据库增加了任何你自己的东西，
那么请注意把<application>pg_restore</application>的输出恢复到一个真正空的数据库中；
否则你可能会收到因为重复定义所追加的对象而造成的错误消息。
要制作一个没有任何本地附属物的数据库，可以从<literal>template0</>而不是
<literal>template1</>拷贝，比如：
<programlisting>
CREATE DATABASE foo WITH TEMPLATE template0;
</programlisting>
</para>

  
<para>
<!-- 
   The limitations of <application>pg_restore</application> are detailed below.
-->
<application>pg_restore</application>的局限如下：
   <itemizedlist>
    <listitem>
<!--
     <para>
      When restoring data to a pre-existing table and the option
      <option>&#045;-disable-triggers</> is used,
      <application>pg_restore</application> emits commands
      to disable triggers on user tables before inserting the data, then emits commands to
      re-enable them after the data has been inserted.  If the restore is stopped in the
      middle, the system catalogs might be left in the wrong state.
     </para>
-->
<para>
当向一个已经存在的表恢复数据，并且还使用了<option>--disable-triggers</>选项时，
<application>pg_restore</application>在插入数据前放出一些查询关闭用户表上的触发器，
在数据插入完成后重新打开它们。如果恢复的中途停止，那么系统表可能处于错误状态。
</para>
    </listitem>

    <listitem>
     <!--
<para><application>pg_restore</application> cannot restore large objects
      selectively;  for instance, only those for a specific table.  If
      an archive contains large objects, then all large objects will be
      restored, or none of them if they are excluded via <option>-L</option>,
      <option>-t</option>, or other options.
     </para>
-->
<para>
<application>pg_restore</application>不能选择性的的恢复大对象。
例如，只恢复指定的表。如果一个归档包含大对象，那么所有大对象都将被恢复，
或如果他们通过<option>-L</option>、<option>-t</option>或其他选项排除则一个也不恢复。
</para>
    </listitem>

   </itemizedlist>
  </para>

  <!--
<para>
   See also the <xref linkend="app-pgdump"> documentation for details on
   limitations of <application>pg_dump</application>.
  </para>
-->
<para>
参阅<xref linkend="app-pgdump">的文挡获取有关<application>pg_dump</application>的局限的细节。
</para>

  <!--
<para>
   Once restored, it is wise to run <command>ANALYZE</> on each
   restored table so the optimizer has useful statistics; see
   <xref linkend="vacuum-for-statistics"> and
   <xref linkend="autovacuum"> for more information.
  </para>
-->
<para>
一旦完成恢复，最好在每个恢复的对象上运行<command>ANALYZE</>，
以便给优化器有用的统计。参阅<xref linkend="vacuum-for-statistics">
和<xref linkend="autovacuum">获取更多信息。
</para>

 </refsect1>


 <refsect1 id="app-pgrestore-examples">
  <!--
<title>Examples</title>
-->
<title>例子</title>

  <!--
<para>
   Assume we have dumped a database called <literal>mydb</> into a
   custom-format dump file:

<screen>
<prompt>$</prompt> <userinput>pg_dump -Fc mydb &gt; db.dump</userinput>
</screen>
  </para>
-->
<para>
假定我们已经转储了<literal>mydb</>数据库到一个自定义格式的文件中：
<screen>
<prompt>$</prompt> <userinput>pg_dump -Fc mydb &gt; db.dump</userinput>
</screen>
</para>

  <!--
<para>
   To drop the database and recreate it from the dump:

<screen>
<prompt>$</prompt> <userinput>dropdb mydb</userinput>
<prompt>$</prompt> <userinput>pg_restore -C -d postgres db.dump</userinput>
</screen>

   The database named in the <option>-d</> switch can be any database existing
   in the cluster; <application>pg_restore</> only uses it to issue the
   <command>CREATE DATABASE</> command for <literal>mydb</>.  With
   <option>-C</>, data is always restored into the database name that appears
   in the dump file.
  </para>
-->
<para>
删除该数据库并从转储中重建：
<screen>
<prompt>$</prompt> <userinput>dropdb mydb</userinput>
<prompt>$</prompt> <userinput>pg_restore -C -d postgres db.dump</userinput>
</screen>
在<option>-d</>中指定的数据库可以是当前集群中的任意数据库；<application>pg_restore</>
仅用该名字来为<literal>mydb</>发出<command>CREATE DATABASE</>命令。
使用<option>-C</>可以确保数据总是会被恢复到转储文件中指定名字的数据库里面。
</para>

  <!--
<para>
   To reload the dump into a new database called <literal>newdb</>:

<screen>
<prompt>$</prompt> <userinput>createdb -T template0 newdb</userinput>
<prompt>$</prompt> <userinput>pg_restore -d newdb db.dump</userinput>
</screen>

   Notice we don't use <option>-C</>, and instead connect directly to the
   database to be restored into.  Also note that we clone the new database
   from <literal>template0</> not <literal>template1</>, to ensure it is
   initially empty.
  </para>
-->
<para>
将转储出来的数据重新加载到一个新建的数据库<literal>newdb</>中：
<screen>
<prompt>$</prompt> <userinput>createdb -T template0 newdb</userinput>
<prompt>$</prompt> <userinput>pg_restore -d newdb db.dump</userinput>
</screen>
注意，这里没有使用<option>-C</>选项，而是直接链接到将要恢复的数据库上。
还要注意的是，我们从<literal>template0</>而不是<literal>template1</>
创建了新数据库以确保干净。
</para>

<para>
<!-- 
   To reorder database items, it is first necessary to dump the table of
   contents of the archive:
-->
要对项目重新排序，首先必须转储归档的目录：
<screen>
<prompt>$</prompt> <userinput>pg_restore -l db.dump &gt; db.list</userinput>
</screen>
<!-- 
   The listing file consists of a header and one line for each item, e.g.: 
-->
这个文件由一行头和每个条目一行组成，比如：
<programlisting>
;
; Archive created at Mon Sep 14 13:55:39 2009
;     dbname: DBDEMOS
;     TOC Entries: 81
;     Compression: 9
;     Dump Version: 1.10-0
;     Format: CUSTOM
;     Integer: 4 bytes
;     Offset: 8 bytes
;     Dumped from database version: 8.3.5
;     Dumped by pg_dump version: 8.3.8
;
;
; Selected TOC Entries:
;
3; 2615 2200 SCHEMA - public pasha
1861; 0 0 COMMENT - SCHEMA public pasha
1862; 0 0 ACL - public pasha
317; 1247 17715 TYPE public composite pasha
319; 1247 25899 DOMAIN public domain0 pasha
</programlisting>
<!-- 
   Semicolons start a comment, and the numbers at the start of lines refer to the
   internal archive ID assigned to each item. 
-->
这里分号是注释分隔符，而行开头的数字代表赋给每个项目的内部归档 ID 。
  </para>

<para>
<!-- 
   Lines in the file can be commented out, deleted, and reordered. For example:
-->
文件内的行可以注释、删除和/或重新排列。比如：
<programlisting>
10; 145433 TABLE map_resolutions postgres
;2; 145344 TABLE species postgres
;4; 145359 TABLE nt_header postgres
6; 145402 TABLE species_records postgres
;8; 145416 TABLE ss_old postgres
</programlisting>
<!-- 
   could be used as input to <application>pg_restore</application> and would only restore
   items 10 and 6, in that order: 
-->
可以用做<application>pg_restore</application>的输入并且只会恢复项目 10 和 6 (以这个顺序)：
<screen>
<prompt>$</prompt> <userinput>pg_restore -L db.list db.dump</userinput>
</screen></para>

 </refsect1>

 <refsect1>
  <!--
<title>See Also</title>
-->
<title>又见</title>

  <simplelist type="inline">
   <member><xref linkend="app-pgdump"></member>
   <member><xref linkend="app-pg-dumpall"></member>
   <member><xref linkend="app-psql"></member>
  </simplelist>
 </refsect1>
</refentry>
