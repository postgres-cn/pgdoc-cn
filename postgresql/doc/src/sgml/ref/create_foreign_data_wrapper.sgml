<!--
doc/src/sgml/ref/create_foreign_data_wrapper.sgml
PostgreSQL documentation
-->

<refentry id="SQL-CREATEFOREIGNDATAWRAPPER">
 <indexterm zone="sql-createforeigndatawrapper">
  <primary>CREATE FOREIGN DATA WRAPPER</primary>
 </indexterm>

 <refmeta>
  <refentrytitle>CREATE FOREIGN DATA WRAPPER</refentrytitle>
  <manvolnum>7</manvolnum>
  <refmiscinfo>SQL - Language Statements</refmiscinfo>
 </refmeta>

 <refnamediv>
  <refname>CREATE FOREIGN DATA WRAPPER</refname>
  <refpurpose>定义一个新的外部数据包装器</refpurpose>
 </refnamediv>

 <refsynopsisdiv>
<synopsis>
CREATE FOREIGN DATA WRAPPER <replaceable class="parameter">name</replaceable>
    [ HANDLER <replaceable class="parameter">handler_function</replaceable> | NO HANDLER ]
    [ VALIDATOR <replaceable class="parameter">validator_function</replaceable> | NO VALIDATOR ]
    [ OPTIONS ( <replaceable class="PARAMETER">option</replaceable> '<replaceable class="PARAMETER">value</replaceable>' [, ... ] ) ]
</synopsis>
 </refsynopsisdiv>

 <refsect1>
  <title>描述</title>

  <para>
   <command>CREATE FOREIGN DATA WRAPPER</command>创建一个
   新的外部数据包装器。定义外部数据包装器的用户将成为它的拥有者。
  </para>

  <para>
   在数据库内外部数据包装器名称必须唯一。
  </para>

  <para>
   Only superusers can create foreign-data wrappers.
  </para>
 </refsect1>

 <refsect1>
  <title>参数</title>

  <variablelist>
   <varlistentry>
    <term><replaceable class="parameter">name</replaceable></term>
    <listitem>
     <para>
      要创建的外部数据包装器的名称。
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>HANDLER <replaceable class="parameter">handler_function</replaceable></literal></term>
    <listitem>
     <para><replaceable class="parameter">handler_function</replaceable>是一个以前注册
     好的函数的名称，它将被调用来为外部表检索执行函数。处理器函数必
     须不能有参数，并且它的返回类型必须是<type>fdw_handler</type>。
     </para>

     <para>
      可以创建一个没有处理器函数的外部数据包装器，但是使用这个包装
      器的外部表只能被声明，但不能被访问。
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>VALIDATOR <replaceable class="parameter">validator_function</replaceable></literal></term>
    <listitem>
     <para><replaceable class="parameter">validator_function</replaceable>
     是一个之前已注册的函数的名称，它将被调用来检查给予该外部数据包装器
     的选项，还有用于外部服务器、用户映射以及使用
     该外部数据包装器的外部表的选项。如果没有验证器函数或者指定了
     <literal>NO VALIDATOR</literal>，那么在创建时不会检查选项（
     外部数据包装器可能会在运行时忽略或者拒绝无效的选项说明，这取决于
     实现）。验证器函数必须接受两个参数：一个类型是<type>text[]</type>，
     它将包含存储在系统目录中的选项数组，另一个是类型
     <type>oid</type>，它将是包含该选项的系统目录的 OID。返回类型
     会被忽略，该函数应该使用<function>ereport(ERROR)</function>
     函数报告无效选项。
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>OPTIONS ( <replaceable class="PARAMETER">option</replaceable> '<replaceable class="PARAMETER">value</replaceable>' [, ... ] )</literal></term>
    <listitem>
     <para>
      这个子句为新的外部数据包装器指定选项。允许的选项名称和值与每一个
      外部数据包装器有关，并且它们会被该外部数据包装器的验证器函数验证。
      选项名称必须唯一。
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </refsect1>

 <refsect1>
  <title>注解</title>

  <para>
   <productname>PostgreSQL</>的外部数据功能仍在积极的开发中。
   查询的优化还很原始（也是剩下工作最多的部分）。因此，未来还有很
   可观的性能提升空间。
  </para>
 </refsect1>

 <refsect1>
  <title>示例</title>

  <para>
   创建一个无用的外部数据包装器<literal>dummy</>：
<programlisting>
CREATE FOREIGN DATA WRAPPER dummy;
</programlisting>
  </para>

  <para>
   用处理器函数<literal>file_fdw_handler</>创建一个外部数据包装器
   <literal>file</>：
<programlisting>
CREATE FOREIGN DATA WRAPPER file HANDLER file_fdw_handler;
</programlisting>
  </para>

  <para>
   用一些选项创建一个外部数据包装器<literal>mywrapper</>：
<programlisting>
CREATE FOREIGN DATA WRAPPER mywrapper
    OPTIONS (debug 'true');
</programlisting></para>
 </refsect1>

 <refsect1>
  <title>兼容性</title>

  <para>
   <command>CREATE FOREIGN DATA WRAPPER</command>
   符合 ISO/IEC 9075-9 (SQL/MED)，不过<literal>HANDLER</literal>
   和<literal>VALIDATOR</literal>子句是扩展，并且标准子句
   <literal>LIBRARY</literal>和<literal>LANGUAGE</literal>还没有
   在<productname>PostgreSQL</>中被实现。
  </para>

  <para>
   不过要注意，整体上来说 SQL/MED 功能还没有符合。
  </para>
 </refsect1>

 <refsect1>
  <title>另见</title>

  <simplelist type="inline">
   <member><xref linkend="sql-alterforeigndatawrapper"></member>
   <member><xref linkend="sql-dropforeigndatawrapper"></member>
   <member><xref linkend="sql-createserver"></member>
   <member><xref linkend="sql-createusermapping"></member>
   <member><xref linkend="sql-createforeigntable"></member>
  </simplelist>
 </refsect1>

</refentry>
