<!--
doc/src/sgml/ref/pg_resetxlog.sgml
PostgreSQL documentation
-->

<refentry id="APP-PGRESETXLOG">
 <indexterm zone="app-pgresetxlog">
  <primary>pg_resetxlog</primary>
 </indexterm>
 <refmeta>
  <indexterm zone="app-pgresetxlog">
  <primary>pg_resetxlog</primary>
 </indexterm>
 
  <refentrytitle><application>pg_resetxlog</application></refentrytitle>
  <manvolnum>1</manvolnum>
  <refmiscinfo>Application</refmiscinfo>
 </refmeta>

 <refnamediv>
  <refname>pg_resetxlog</refname>
  <refpurpose>重置一个<productname>PostgreSQL</productname>数据库集簇的预写式日志以及其他控制信息</refpurpose>
 </refnamediv>

<<<<<<< HEAD

=======
>>>>>>> upstream/master
 <refsynopsisdiv>
  <cmdsynopsis>
   <command>pg_resetxlog</command>
   <arg choice="opt"><option>-f</option></arg>
   <arg choice="opt"><option>-n</option></arg>
   <arg choice="opt"><option>-o</option> <replaceable class="parameter">oid</replaceable></arg>
   <arg choice="opt"><option>-x</option> <replaceable class="parameter">xid</replaceable></arg>
   <arg choice="opt"><option>-e</option> <replaceable class="parameter">xid_epoch</replaceable></arg>
   <arg choice="opt"><option>-m</option> <replaceable class="parameter">mxid</replaceable>,<replaceable class="parameter">mxid</replaceable></arg>
   <arg choice="opt"><option>-O</option> <replaceable class="parameter">mxoff</replaceable></arg>
   <arg choice="opt"><option>-l</option> <replaceable class="parameter">xlogfile</replaceable></arg>
   <arg choice="plain"><replaceable>datadir</replaceable></arg>
  </cmdsynopsis>
 </refsynopsisdiv>

 <refsect1 id="R1-APP-PGRESETXLOG-1">
  <title>描述</title>
  <para>
   <command>pg_resetxlog</command>会清除预写式日志（WAL）并且有选择地重置存储在<filename>pg_control</>文件中的一些其他控制信息。如果这些文件已经被损坏，某些时候就需要这个功能。当服务器由于这样的损坏而无法启动时，这只应该被用作最后的手段。
  </para>

  <para>
   在运行这个命令之后，就可能可以启动服务器，但是记住数据库可能包含由于部分提交事务产生的不一致数据。你应当立刻转储你的数据、运行<command>initdb</>并且重新载入。重新载入后，检查不一致并且根据需要修复之。
  </para>

  <para>
   这个工具只能被安装服务器的用户运行，因为它要求对数据目录的读写访问。出于安全原因，你必须在命令行中指定数据目录。<command>pg_resetxlog</command>不使用环境变量<envar>PGDATA</>。
  </para>

  <para>
   <command>pg_resetxlog</command>抱怨它无法为<filename>pg_control</>决定合法数据，你可以通过指定<option>-f</>（强制）选项强制它继续。在这种情况下，丢失的数据将被替换为看似合理的值。可以期望大部分域是匹配的，但是下一个 OID、下一个事务 ID 和纪元、下一个多事务 ID 和偏移以及 WAL 开始地址域可能还是需要人工协助。这些域可以使用下面讨论的选项设置。如果你不能为所有这些域决定正确的值，<option>-f</>还是可以被使用，但是恢复的数据库还是值得怀疑：一次立即的转储和重新载入是势在必行的。在你转储之前<emphasis>不要</>在该数据库中执行任何数据修改操作，因为任何这样的动作都可能使破坏更严重。
  </para>

  <para>
   <option>-o</>、<option>-x</>、<option>-e</>、
   <option>-m</>、<option>-O</>和<option>-l</>选项允许下一个 OID、下一个事务 ID、下一个事务 ID 的纪元、下一个和最老的多事务 ID、下一个多事务偏移量以及 WAL 开始地址值被手动设置。只有当<command>pg_resetxlog</command>没有办法通过读取<filename>pg_control</>决定合适的值时才需要它们。安全值可以按下列方式决定：

   <itemizedlist>
    <listitem>
     <para>
      下一个事务 ID （<option>-x</>）的安全值可以通过查看数据目录下<filename>pg_clog</>目录中数字上最大的文件名来决定，把它加一后乘以 1048576。注意文件名是十六进制的。通常最简单的是在选项值中也指定十六进制。例如，如果<filename>0011</>是<filename>pg_clog</>中最大的项，<literal>-x 0x1200000</>就可以（五个结尾零提供了正确的乘数）。
     </para>
    </listitem>

    <listitem>
     <para>
      下一个多事务 ID（<option>-m</>的第一部分）的安全值可以通过查看数据目录下<filename>pg_multixact/offsets</>目录中数字上最大的文件名来决定，把它加一后乘以 65536。相反地，最老的多事务 ID（<option>-m</>的第二部分）的安全值可以通过查看同一目录下数字上最小的文件名并乘以 65536 来决定。同上，这些文件名是十六进制的，因此最容易的方法是用十六进制指定选项值并且追加四个零。
     </para>
    </listitem>

    <listitem>
     <para>
      下一个多事务偏移量（<option>-O</>）的安全值可以通过查看数据目录下<filename>pg_multixact/members</>目录中数字上最大的文件名来决定，把它加一后乘以 52352。同上，文件名是十六进制的。没有上面那种追加零的简单秘诀。
     </para>
    </listitem>

    <listitem>
     <para>
      WAL 开始地址（<option>-l</>）应该比当前存在于数据目录下<filename>pg_xlog</>目录中的任意 WAL 段文件名更大。这些名称也是十六进制的并且有三个部分。第一部分是<quote>时间线 ID</>并且通常应该被保持相同。例如，如果<filename>00000001000000320000004A</>是<filename>pg_xlog</>中最大的项，则使用<literal>-l 00000001000000320000004B</>或更高的值。
     </para>

     <note>
      <para>
       <command>pg_resetxlog</command>本身查看<filename>pg_xlog</>中的文件并选择一个超出最新现存文件名的默认<option>-l</>设置。因此，只有当你知道 WAL 段文件当前不在<filename>pg_xlog</>中时，或者当<filename>pg_xlog</>的内容完全丢失时，才需要对<option>-l</>的手工调整，例如一个离线归档中的项。
      </para>
     </note>
    </listitem>

    <listitem>
     <para>
      没有相对容易的方法来决定超过数据库中最大 OID 的下一个 OID。但幸运的是正确地得到下一个 OID 设置并不是决定性的。
     </para>
    </listitem>

    <listitem>
     <para>
      事务 ID 纪元实际上并没有被存储在数据库中的任何地方，除了被<command>pg_resetxlog</command>设置的域，因此就数据库本身而言任意值都能工作。你可能需要调整这个值来确保复制系统（如<application>Slony-I</>）正确工作 &mdash; 如果这样，应该能从下游复制的数据库的状态得到一个合适的值。
     </para>
    </listitem>
   </itemizedlist>
  </para>

<<<<<<< HEAD
  <!--
<para>
   The <option>-n</> (no operation) option instructs
   <command>pg_resetxlog</command> to print the values reconstructed from
   <filename>pg_control</> and values about to be changed, and then exit without modifying anything.
   This is mainly a debugging tool, but can be useful as a sanity check
   before allowing <command>pg_resetxlog</command> to proceed for real.
  </para>
-->
<para>
<option>-n</>(无操作)选项指示<command>pg_resetxlog</command>打印从
<filename>pg_control</>重新构造的数值和要修改的数值，然后不修改任何值就退出。这主要是一个调试工具，
但是在<command>pg_resetxlog</command>真正处理前进行的合理性检查的时候可能会有用。
</para>
=======
  <para>
   <option>-n</>（无操作）选项指示<command>pg_resetxlog</command>打印从<filename>pg_control</>重构的值以及即将要被改变的值，然后退出并且不修改任何东西。这主要是一种调试工具，但是有助于在让<command>pg_resetxlog</command>真正继续下去之前作为一种完整性检查。
  </para>
>>>>>>> upstream/master

  <para>
   <option>-V</>和<option>--version</>选项打印<application>pg_resetxlog</application>版本并退出。选项<option>-?</>和<option>--help</>显示支持的参数并退出。
  </para>

 </refsect1>

 <refsect1>
  <title>注解</title>

  <para>
   这个命令不能在服务器正在运行时被使用。如果在数据目录中发现一个服务器锁文件，<command>pg_resetxlog</command>将拒绝启动。如果服务器崩溃那么一个锁文件可能会被留下，在那种情况下你能移除该锁文件来让<command>pg_resetxlog</command>运行。但是在你那样做之前，再次确认没有服务器进程仍然存活。
  </para>
 </refsect1>

</refentry>
