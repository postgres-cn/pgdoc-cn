<!--
doc/src/sgml/ref/pg_resetxlog.sgml
PostgreSQL documentation
-->

<refentry id="APP-PGRESETXLOG">
 <indexterm zone="app-pgresetxlog">
  <primary>pg_resetxlog</primary>
 </indexterm>
 <refmeta>
  <refentrytitle><application>pg_resetxlog</application></refentrytitle>
  <manvolnum>1</manvolnum>
  <refmiscinfo>Application</refmiscinfo>
 </refmeta>

 <refnamediv>
  <refname>pg_resetxlog</refname>
  <!--
  <refpurpose>reset the write-ahead log and other control information of a <productname>PostgreSQL</productname> database cluster</refpurpose>
  -->
  <refpurpose>重置一个数据库集群的预写日志以及其它控制内容</refpurpose>
 </refnamediv>


 <refsynopsisdiv>
  <cmdsynopsis>
   <command>pg_resetxlog</command>
   <arg choice="opt"><option>-f</option></arg>
   <arg choice="opt"><option>-n</option></arg>
   <arg choice="opt"><option>-o</option> <replaceable class="parameter">oid</replaceable></arg>
   <arg choice="opt"><option>-x</option> <replaceable class="parameter">xid</replaceable></arg>
   <arg choice="opt"><option>-e</option> <replaceable class="parameter">xid_epoch</replaceable></arg>
   <arg choice="opt"><option>-m</option> <replaceable class="parameter">mxid</replaceable>,<replaceable class="parameter">mxid</replaceable></arg>
   <arg choice="opt"><option>-O</option> <replaceable class="parameter">mxoff</replaceable></arg>
   <arg choice="opt"><option>-l</option> <replaceable class="parameter">xlogfile</replaceable></arg>
   <arg choice="plain"><replaceable>datadir</replaceable></arg>
  </cmdsynopsis>
 </refsynopsisdiv>

 <refsect1 id="R1-APP-PGRESETXLOG-1">
  <!--
<title>Description</title>
-->
<title>描述</title>
  <!--
<para>
   <command>pg_resetxlog</command> clears the write-ahead log (WAL) and
   optionally resets some other control information stored in the
   <filename>pg_control</> file.  This function is sometimes needed
   if these files have become corrupted.  It should be used only as a
   last resort, when the server will not start due to such corruption.
  </para>
-->
<para>
<command>pg_resetxlog</command>清理预写日志(WAL)并且可以有选择地重置其它一些存储在
<filename>pg_control</>文件中的控制信息。有时候，如果这些文件崩溃了，就需要这个功能。
一定只把它用作最后的方法，就是说只有因为这样的崩溃导致服务器无法启动的时候才使用。
</para>

  <!--
<para>
   After running this command, it should be possible to start the server,
   but bear in mind that the database might contain inconsistent data due to
   partially-committed transactions.  You should immediately dump your data,
   run <command>initdb</>, and reload.  After reload, check for
   inconsistencies and repair as needed.
  </para>
-->
<para>
运行这个命令之后，可能就可以启动服务器了，但是，
一定要记住数据库可能因为部分提交的事务而含有不完整的数据。你应该马上转储数据，
运行<command>initdb</>，然后重新加载。在重新加载之后，
检查不完整的部分然后根据需要进行修复。
</para>

  <!--
<para>
   This utility can only be run by the user who installed the server, because
   it requires read/write access to the data directory.
   For safety reasons, you must specify the data directory on the command line.
   <command>pg_resetxlog</command> does not use the environment variable
   <envar>PGDATA</>.
  </para>
-->
<para>
这个命令只能由安装服务器的用户运行，因为它需要对数据目录的读写权限。
出于安全考虑，<command>pg_resetxlog</command>不使用环境变量<envar>PGDATA</>，
你必须在命令行上声明数据目录。
</para>

  <!--
<para>
   If <command>pg_resetxlog</command> complains that it cannot determine
   valid data for <filename>pg_control</>, you can force it to proceed anyway
   by specifying the <option>-f</> (force) option.  In this case plausible
   values will be substituted for the missing data.  Most of the fields can be
   expected to match, but manual assistance might be needed for the next OID,
   next transaction ID and epoch, next multitransaction ID and offset, and
   WAL starting address fields. These fields can be set using the options
   discussed below. If you are not able to determine correct values for all
   these fields, <option>-f</> can still be used, but
   the recovered database must be treated with even more suspicion than
   usual: an immediate dump and reload is imperative.  <emphasis>Do not</>
   execute any data-modifying operations in the database before you dump,
   as any such action is likely to make the corruption worse.
  </para>
-->
<para>
如果<command>pg_resetxlog</command>抱怨说它无法判断用于<filename>pg_control</>
的有效数据，那么你可以强制它继续处理，方法是声明<option>-f</>(强制)开关。
在这种情况下，那些丢失了的数据将用模糊的近似数值代替。大多数字段都可以匹配上，
但是下一个 OID 、下一个事务 ID 、下一个事务 ID 的 epoch(时间点)、
下一个多事务 ID(两阶段提交的东西)、下一个多事务偏移量、WAL 开始地址可能需要手工帮助，
这些字段可以使用下面讨论的选项设置。如果你不能判断所有这些字段的正确数值，
那么<option>-f</>仍然可以使用，但是这样恢复过来的数据库正确性更值得怀疑：
立即转储和重新加载是必须的。在转储之前<emphasis>不要</>执行任何修改数据的操作，
因为任何这样的动作都可能把事情搞得更糟糕。
</para>

  
<para>
<!-- 
   The <option>-o</>, <option>-x</>, <option>-e</>,
   <option>-m</>, <option>-O</>,
   and <option>-l</>
   options allow the next OID, next transaction ID, next transaction ID's
   epoch, next and oldest multitransaction ID, next multitransaction offset, and WAL
   starting address values to be set manually.  These are only needed when
   <command>pg_resetxlog</command> is unable to determine appropriate values
   by reading <filename>pg_control</>.  Safe values can be determined as
   follows:
 -->
<option>-o</>, <option>-x</>, <option>-e</>, <option>-m</>, <option>-O</>, <option>-l</>
开关允许手工设置下一个 OID 、下一个事务 ID 、下一个事务 ID epoch 、
下一个和最旧的多事务 ID 、下一个多事务偏移量、WAL 起始位置的数值。
只有在<command>pg_resetxlog</command>无法通过读取<filename>pg_control</>
判断合适的数值的时候才需要它。安全的数值可以用下面的方法判断：
   <itemizedlist>
    <listitem>
<!--
     <para>
      A safe value for the next transaction ID (<option>-x</>)
      can be determined by looking for the numerically largest
      file name in the directory <filename>pg_clog</> under the data directory,
      adding one,
      and then multiplying by 1048576.  Note that the file names are in
      hexadecimal.  It is usually easiest to specify the option value in
      hexadecimal too. For example, if <filename>0011</> is the largest entry
      in <filename>pg_clog</>, <literal>-x 0x1200000</> will work (five
      trailing zeroes provide the proper multiplier).
     </para>
-->
<para>
对于下一个事务 ID(<option>-x</>)而言，一个安全的数值是看看数据目录里的
<filename>pg_clog</>里数值最大的文件名，然后加一，然后再乘上 1048576 。
请注意那些文件名是十六进制的。通常也以十六进制的形式声明选项值是最简单的。
比如，如果<filename>0011</>是<filename>pg_clog</>里最大的记录，
<literal>-x 0x1200000</>就可以了(后面的五个零提供了合适的乘积)。
</para>
    </listitem>

    <listitem>
     <!--
<para>
      A safe value for the next multitransaction ID (first part of <option>-m</>)
      can be determined by looking for the numerically largest
      file name in the directory <filename>pg_multixact/offsets</> under the
      data directory, adding one, and then multiplying by 65536.
      Conversely, a safe value for the oldest multitransaction ID (second part of
      <option>-m</>)
      can be determined by looking for the numerically smallest
      file name in the same directory and multiplying by 65536.
      As above, the file names are in hexadecimal, so the easiest way to do
      this is to specify the option value in hexadecimal and append four zeroes.
     </para>
-->
<para>
下一个多事务 ID(<option>-m</>的第一部分)的安全值可以通过查看数据目录里
<filename>pg_multixact/offsets</>子目录里面的数字最大的文件名，加一，
然后乘以 65536 得到。相反的，最老多事务ID（<option>-m</>的第二部分）
的安全值可以通过查看相同目录里的数字最小的文件名，然后乘以65536得到。
和上面一样，文件名是十六进制的，因此最简单的方法是给选项声明一个十六进制的开关值，
然后在结尾加四个零。
</para>
    </listitem>

    <listitem>
     <!--
<para>
      A safe value for the next multitransaction offset (<option>-O</>)
      can be determined by looking for the numerically largest
      file name in the directory <filename>pg_multixact/members</> under the
      data directory, adding one, and then multiplying by 52352.  As above,
      the file names are in hexadecimal.  There is no simple recipe such as
      the ones above of appending zeroes.
     </para>
-->
<para>
下一个多事务偏移量(<option>-O</>)的安全值可以通过检查数据目录里
<filename>pg_multixact/members</>子目录下的数字最大的文件名，加一，
然后乘以 65536 得到。和上面一样，文件名是十六进制的。
这里没有像上面一样添加零的简单方法。
</para>
    </listitem>

    <listitem>
     <!--
<para>
      The WAL starting address (<option>-l</>) should be
      larger than any WAL segment file name currently existing in
      the directory <filename>pg_xlog</> under the data directory.
      These names are also in hexadecimal and have three parts.  The first
      part is the <quote>timeline ID</> and should usually be kept the same.
      For example, if <filename>00000001000000320000004A</> is the
      largest entry in <filename>pg_xlog</>, use <literal>-l 00000001000000320000004B</> or higher.
     </para>
-->
<para>
WAL 的起始位置(<option>-l</>)应该比目前存在于数据目录<filename>pg_xlog</>
里面的任何WAL段文件号都大。它的文件名也是十六进制的，并且有三部分。
第一部分是<quote>时间线 ID</>，通常应该保持相同。比如，
如果<filename>00000001000000320000004A</>是<filename>pg_xlog</>里最大的条目，
那么选择<literal>-l 00000001000000320000004B</>或更多。
</para>

     <note>
      <!--
<para>
       <command>pg_resetxlog</command> itself looks at the files in
       <filename>pg_xlog</> and chooses a default <option>-l</> setting
       beyond the last existing file name.  Therefore, manual adjustment of
       <option>-l</> should only be needed if you are aware of WAL segment
       files that are not currently present in <filename>pg_xlog</>, such as
       entries in an offline archive; or if the contents of
       <filename>pg_xlog</> have been lost entirely.
      </para>
-->
<para>
<command>pg_resetxlog</command>本身查看<filename>pg_xlog</>里面的文件，
并选择一个缺省的超过最后一个现存文件号的<option>-l</>设置。因此，
只有知道WAL段文件当前不在<filename>pg_xlog</>中时，才需要手动调整<option>-l</>，
例如离线归档中的条目；或如果<filename>pg_xlog</>的内容完全丢失。
</para>
     </note>
    </listitem>

    <listitem>
     <!--
<para>
      There is no comparably easy way to determine a next OID that's beyond
      the largest one in the database, but fortunately it is not critical to
      get the next-OID setting right.
     </para>
-->
<para>
没有很容易的办法来判断比数据库中最大的 OID 大一号的下一个 OID ，
不过很走运的是获取正确的下一个 OID 并非非常关键的事情。
</para>
    </listitem>

    <listitem>
     <!--
<para>
      The transaction ID epoch is not actually stored anywhere in the database
      except in the field that is set by <command>pg_resetxlog</command>,
      so any value will work so far as the database itself is concerned.
      You might need to adjust this value to ensure that replication
      systems such as <application>Slony-I</> work correctly &mdash;
      if so, an appropriate value should be obtainable from the state of
      the downstream replicated database.
     </para>
-->
<para>
除了由<command>pg_resetxlog</command>设定的字段外，
事务 ID epoch 实际上并未存储在数据库里的任何地方。
所以只要是涉及到数据库自身的任何数值都有效。你可能需要调整这个值以确保诸如
<application>Slony-I</>之类的备份系统能够正常工作。如果是这样的话，
应当从下游已复制的数据库中获取恰当的值。
</para>
    </listitem>
   </itemizedlist>
  </para>

  <!--
<para>
   The <option>-n</> (no operation) option instructs
   <command>pg_resetxlog</command> to print the values reconstructed from
   <filename>pg_control</> and values about to be changed, and then exit without modifying anything.
   This is mainly a debugging tool, but can be useful as a sanity check
   before allowing <command>pg_resetxlog</command> to proceed for real.
  </para>
-->
<para>
<option>-n</>(无操作)选项指示<command>pg_resetxlog</command>打印从
<filename>pg_control</>重新构造的数值和要修改的数值，然后不修改任何值就退出。这主要是一个调试工具，
但是在<command>pg_resetxlog</command>真正处理前进行的合理性检查的时候可能会有用。
</para>

  <!--
<para>
   The <option>-V</> and <option>&#045;-version</> options print
   the <application>pg_resetxlog</application> version and exit.  The
   options <option>-?</> and <option>&#045;-help</> show supported arguments,
   and exit.
  </para>
-->
<para>
<option>-V</> 和 <option>--version</>选项打印<application>pg_resetxlog</application>
的版本然后退出。选项<option>-?</> 和 <option>--help</>显示参数的支持信息然后退出。
</para>

 </refsect1>

 <refsect1>
  <!--
<title>Notes</title>
-->
<title>注意</title>

  <!--
<para>
   This command must not be used when the server is
   running.  <command>pg_resetxlog</command> will refuse to start up if
   it finds a server lock file in the data directory.  If the
   server crashed then a lock file might have been left
   behind; in that case you can remove the lock file to allow
   <command>pg_resetxlog</command> to run.  But before you do
   so, make doubly certain that there is no server process still alive.
  </para>
-->
<para>
在服务器运行的时候一定不要运行这个命令。如果发现在数据文件目录里有锁文件，
那么<command>pg_resetxlog</command>将拒绝启动。如果服务器崩溃，
那么可能会留下一个锁文件；如果这样，你可以删除该锁文件以便允许
<command>pg_resetxlog</command>运行。但是在你这么做之前，
一定要确保没有任何后端服务器进程仍在运行。
</para>
 </refsect1>

</refentry>
