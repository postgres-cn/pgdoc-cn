<!--
doc/src/sgml/ref/fetch.sgml
PostgreSQL documentation
-->

<refentry id="SQL-FETCH">

<!--==========================orignal english content==========================
 <indexterm zone="sql-fetch">
  <primary>FETCH</primary>
 </indexterm>
____________________________________________________________________________-->
 <indexterm zone="sql-fetch">
  <primary>FETCH</primary>
 </indexterm>

<!--==========================orignal english content==========================
 <indexterm zone="sql-fetch">
  <primary>cursor</primary>
  <secondary>FETCH</secondary>
 </indexterm>
____________________________________________________________________________-->
 <indexterm zone="sql-fetch">
  <primary>cursor</primary>
  <secondary>FETCH</secondary>
 </indexterm>
<!--==========================orignal english content==========================
 <refmeta>
  <refentrytitle>FETCH</refentrytitle>
  <manvolnum>7</manvolnum>
  <refmiscinfo>SQL - Language Statements</refmiscinfo>
 </refmeta>
____________________________________________________________________________-->
 <refmeta>
  <refentrytitle>FETCH</refentrytitle>
  <manvolnum>7</manvolnum>
  <refmiscinfo>SQL - Language Statements</refmiscinfo>
 </refmeta>

<!--==========================orignal english content==========================
 <refnamediv>
  <refname>FETCH</refname>
  <refpurpose>retrieve rows from a query using a cursor</refpurpose>
 </refnamediv>
____________________________________________________________________________-->
 <refnamediv>
  <refname>FETCH</refname>
  <refpurpose>使用游标从查询中检索行</refpurpose>
 </refnamediv>

 <refsynopsisdiv>
<!-- Note the "direction" bit is also in ref/move.sgml -->
<!--==========================orignal english content==========================
<synopsis>
FETCH [ <replaceable class="parameter">direction</replaceable> [ FROM | IN ] ] <replaceable class="parameter">cursor_name</replaceable>

<phrase>where <replaceable class="parameter">direction</replaceable> can be empty or one of:</phrase>

    NEXT
    PRIOR
    FIRST
    LAST
    ABSOLUTE <replaceable class="parameter">count</replaceable>
    RELATIVE <replaceable class="parameter">count</replaceable>
    <replaceable class="parameter">count</replaceable>
    ALL
    FORWARD
    FORWARD <replaceable class="parameter">count</replaceable>
    FORWARD ALL
    BACKWARD
    BACKWARD <replaceable class="parameter">count</replaceable>
    BACKWARD ALL
</synopsis>
____________________________________________________________________________-->
<synopsis>
FETCH [ <replaceable class="parameter">direction</replaceable> [ FROM | IN ] ] <replaceable class="parameter">cursor_name</replaceable>

<phrase>其中 <replaceable class="parameter">direction</replaceable> 可以为空或者以下之一：</phrase>

    NEXT
    PRIOR
    FIRST
    LAST
    ABSOLUTE <replaceable class="parameter">count</replaceable>
    RELATIVE <replaceable class="parameter">count</replaceable>
    <replaceable class="parameter">count</replaceable>
    ALL
    FORWARD
    FORWARD <replaceable class="parameter">count</replaceable>
    FORWARD ALL
    BACKWARD
    BACKWARD <replaceable class="parameter">count</replaceable>
    BACKWARD ALL
</synopsis>
 </refsynopsisdiv>

 <refsect1>
<!--==========================orignal english content==========================
  <title>Description</title>
____________________________________________________________________________-->
  <title>描述</title>

<!--==========================orignal english content==========================
  <para>
   <command>FETCH</command> retrieves rows using a previously-created cursor.
  </para>
____________________________________________________________________________-->
  <para>
   <command>FETCH</command>从之前创建的一个游标中检索行。
  </para>

<!--==========================orignal english content==========================
  <para>
   A cursor has an associated position, which is used by
   <command>FETCH</>.  The cursor position can be before the first row of the
   query result, on any particular row of the result, or after the last row
   of the result.  When created, a cursor is positioned before the first row.
   After fetching some rows, the cursor is positioned on the row most recently
   retrieved.  If <command>FETCH</> runs off the end of the available rows
   then the cursor is left positioned after the last row, or before the first
   row if fetching backward.  <command>FETCH ALL</> or <command>FETCH BACKWARD
   ALL</> will always leave the cursor positioned after the last row or before
   the first row.
  </para>
____________________________________________________________________________-->
  <para>
   游标具有一个相关联的位置，会用到该位置<command>FETCH</command>。
   游标位置可能会位于查询结果的第一行之前、结果中任意行之上或者
   结果的最后一行之后。在被创建时，游标被定位在第一行之前。在取出
   一些行后，该游标被定位在最近被取出的行上。如果
   <command>FETCH</command>运行超过了可用行的末尾，则该游标会被定位
   在最后一行之后（如果从后往前取，则是第一行之前）。
   <command>FETCH ALL</command>或者<command>FETCH BACKWARD
   ALL</command>将总是让游标被定位于最后一行之后或者第一行之前。
  </para>

<!--==========================orignal english content==========================
  <para>
   The forms <literal>NEXT</>, <literal>PRIOR</>, <literal>FIRST</>,
   <literal>LAST</>, <literal>ABSOLUTE</>, <literal>RELATIVE</> fetch
   a single row after moving the cursor appropriately.  If there is no
   such row, an empty result is returned, and the cursor is left
   positioned before the first row or after the last row as
   appropriate.
  </para>
____________________________________________________________________________-->
  <para>
   <literal>NEXT</literal>、<literal>PRIOR</literal>、<literal>FIRST</literal>、
   <literal>LAST</literal>、<literal>ABSOLUTE</literal>、<literal>RELATIVE</literal>
   形式会在适当移动游标后取出一行。如果没有这样一行，将返回一个空
   结果，并且视情况将游标定位在第一行之前或者最后一行之后。
  </para>

<!--==========================orignal english content==========================
  <para>
   The forms using <literal>FORWARD</> and <literal>BACKWARD</>
   retrieve the indicated number of rows moving in the forward or
   backward direction, leaving the cursor positioned on the
   last-returned row (or after/before all rows, if the <replaceable
   class="parameter">count</replaceable> exceeds the number of rows
   available).
  </para>
____________________________________________________________________________-->
  <para>
   使用<literal>FORWARD</literal>和<literal>BACKWARD</literal>的形式会在
   向前移动或者向后移动的方向上检索指定数量的行，然后将游标定位在
   最后返回的行上（如果<replaceable
   class="parameter">count</replaceable>超过可用的行数，则定位
   在所有行之后或者之前）。
  </para>

<!--==========================orignal english content==========================
  <para>
   <literal>RELATIVE 0</>, <literal>FORWARD 0</>, and
   <literal>BACKWARD 0</> all request fetching the current row without
   moving the cursor, that is, re-fetching the most recently fetched
   row.  This will succeed unless the cursor is positioned before the
   first row or after the last row; in which case, no row is returned.
  </para>
____________________________________________________________________________-->
  <para>
   <literal>RELATIVE 0</literal>、<literal>FORWARD 0</literal>以及
   <literal>BACKWARD 0</literal>都会请求检索当前行但不移动游标，也就是
   重新取最近被取出的行。 只要游标没有被定位在第一行之前或者最后一行
   之后，这种操作都会成功，否则不会返回任何行。
  </para>

  <note>
<!--==========================orignal english content==========================
   <para>
    This page describes usage of cursors at the SQL command level.
    If you are trying to use cursors inside a <application>PL/pgSQL</>
    function, the rules are different &mdash;
    see <xref linkend="plpgsql-cursors">.
   </para>
____________________________________________________________________________-->
   <para>
    这个页面描述在 SQL 命令层面上对游标的使用。如果想要在
    <application>PL/pgSQL</application>函数中使用游标，规则会有所不同
     &mdash; 请见<xref linkend="plpgsql-cursors"/>。
   </para>
  </note>
 </refsect1>

 <refsect1>
<!--==========================orignal english content==========================
  <title>Parameters</title>
____________________________________________________________________________-->
  <title>参数</title>

  <variablelist>
   <varlistentry>
<!--==========================orignal english content==========================
    <term><replaceable class="parameter">direction</replaceable></term>
____________________________________________________________________________-->
    <term><replaceable class="parameter">direction</replaceable></term>
    <listitem>
<!--==========================orignal english content==========================
     <para><replaceable class="parameter">direction</replaceable> defines
      the fetch direction and number of rows to fetch.  It can be one
      of the following:

      <variablelist>
       <varlistentry>
        <term><literal>NEXT</literal></term>
        <listitem>
         <para>
          Fetch the next row. This is the default if <replaceable
          class="parameter">direction</replaceable> is omitted.
         </para>
        </listitem>
       </varlistentry>

       <varlistentry>
        <term><literal>PRIOR</literal></term>
        <listitem>
         <para>
          Fetch the prior row.
         </para>
        </listitem>
       </varlistentry>

       <varlistentry>
        <term><literal>FIRST</literal></term>
        <listitem>
         <para>
          Fetch the first row of the query (same as <literal>ABSOLUTE 1</literal>).
         </para>
        </listitem>
       </varlistentry>

       <varlistentry>
        <term><literal>LAST</literal></term>
        <listitem>
         <para>
          Fetch the last row of the query (same as <literal>ABSOLUTE -1</literal>).
         </para>
        </listitem>
       </varlistentry>

       <varlistentry>
        <term><literal>ABSOLUTE <replaceable class="parameter">count</replaceable></literal></term>
        <listitem>
         <para>
          Fetch the <replaceable
          class="parameter">count</replaceable>'th row of the query,
          or the <literal>abs(<replaceable
          class="parameter">count</replaceable>)</literal>'th row from
          the end if <replaceable
          class="parameter">count</replaceable> is negative.  Position
          before first row or after last row if <replaceable
          class="parameter">count</replaceable> is out of range; in
          particular, <literal>ABSOLUTE 0</literal> positions before
          the first row.
         </para>
        </listitem>
       </varlistentry>

       <varlistentry>
        <term><literal>RELATIVE <replaceable class="parameter">count</replaceable></literal></term>
        <listitem>
         <para>
          Fetch the <replaceable
          class="parameter">count</replaceable>'th succeeding row, or
          the <literal>abs(<replaceable
          class="parameter">count</replaceable>)</literal>'th prior
          row if <replaceable class="parameter">count</replaceable> is
          negative.  <literal>RELATIVE 0</literal> re-fetches the
          current row, if any.
         </para>
        </listitem>
       </varlistentry>

       <varlistentry>
        <term><replaceable class="parameter">count</replaceable></term>
        <listitem>
         <para>
          Fetch the next <replaceable
          class="parameter">count</replaceable> rows (same as
          <literal>FORWARD <replaceable
          class="parameter">count</replaceable></literal>).
         </para>
        </listitem>
       </varlistentry>

       <varlistentry>
        <term><literal>ALL</literal></term>
        <listitem>
         <para>
          Fetch all remaining rows (same as <literal>FORWARD ALL</literal>).
         </para>
        </listitem>
       </varlistentry>

       <varlistentry>
        <term><literal>FORWARD</literal></term>
        <listitem>
         <para>
          Fetch the next row (same as <literal>NEXT</literal>).
         </para>
        </listitem>
       </varlistentry>

       <varlistentry>
        <term><literal>FORWARD <replaceable class="parameter">count</replaceable></literal></term>
        <listitem>
         <para>
          Fetch the next <replaceable
          class="parameter">count</replaceable> rows.
          <literal>FORWARD 0</literal> re-fetches the current row.
         </para>
        </listitem>
       </varlistentry>

       <varlistentry>
        <term><literal>FORWARD ALL</literal></term>
        <listitem>
         <para>
          Fetch all remaining rows.
         </para>
        </listitem>
       </varlistentry>

       <varlistentry>
        <term><literal>BACKWARD</literal></term>
        <listitem>
         <para>
          Fetch the prior row (same as <literal>PRIOR</literal>).
         </para>
        </listitem>
       </varlistentry>

       <varlistentry>
        <term><literal>BACKWARD <replaceable class="parameter">count</replaceable></literal></term>
        <listitem>
         <para>
          Fetch the prior <replaceable
          class="parameter">count</replaceable> rows (scanning
          backwards).  <literal>BACKWARD 0</literal> re-fetches the
          current row.
         </para>
        </listitem>
       </varlistentry>

       <varlistentry>
        <term><literal>BACKWARD ALL</literal></term>
        <listitem>
         <para>
          Fetch all prior rows (scanning backwards).
         </para>
        </listitem>
       </varlistentry>
      </variablelist></para>
____________________________________________________________________________-->
     <para><replaceable class="parameter">direction</replaceable>
     定义获取方向以及要取得的行数。它可以是下列之一：

      <variablelist>
       <varlistentry>
        <term><literal>NEXT</literal></term>
        <listitem>
         <para>
          取出下一行。如果省略<replaceable
          class="parameter">direction</replaceable>，这将是默认值。
         </para>
        </listitem>
       </varlistentry>

       <varlistentry>
        <term><literal>PRIOR</literal></term>
        <listitem>
         <para>
          取出当前位置之前的一行。
         </para>
        </listitem>
       </varlistentry>

       <varlistentry>
        <term><literal>FIRST</literal></term>
        <listitem>
         <para>
          取出该查询的第一行（和<literal>ABSOLUTE 1</literal>相同）。
         </para>
        </listitem>
       </varlistentry>

       <varlistentry>
        <term><literal>LAST</literal></term>
        <listitem>
         <para>
          取出该查询的最后一行（和<literal>ABSOLUTE -1</literal>相同）。
         </para>
        </listitem>
       </varlistentry>

       <varlistentry>
        <term><literal>ABSOLUTE <replaceable class="parameter">count</replaceable></literal></term>
        <listitem>
         <para>
          取出该查询的第<replaceable
          class="parameter">count</replaceable>个行，如果<replaceable
          class="parameter">count</replaceable>为负则是从尾部开始取出
          第<literal>abs(<replaceable
          class="parameter">count</replaceable>)</literal>个行。如果
          <replaceable
          class="parameter">count</replaceable>超出范围，将定位在第一行
          之前或者最后一行之后。特别地，<literal>ABSOLUTE 0</literal>
          会定位在第一行之前。
         </para>
        </listitem>
       </varlistentry>

       <varlistentry>
        <term><literal>RELATIVE <replaceable class="parameter">count</replaceable></literal></term>
        <listitem>
         <para>
          取出第<replaceable
          class="parameter">count</replaceable>个后继行，如果
          <replaceable class="parameter">count</replaceable>为负
          则是取出前面的第<literal>abs(<replaceable
          class="parameter">count</replaceable>)</literal>个行。
          <literal>RELATIVE 0</literal>重新取出当前行（如果有）。
         </para>
        </listitem>
       </varlistentry>

       <varlistentry>
        <term><replaceable class="parameter">count</replaceable></term>
        <listitem>
         <para>
          取出接下来的<replaceable
          class="parameter">count</replaceable>行（和
          <literal>FORWARD <replaceable
          class="parameter">count</replaceable></literal>相同）。
         </para>
        </listitem>
       </varlistentry>

       <varlistentry>
        <term><literal>ALL</literal></term>
        <listitem>
         <para>
          取出所有剩余的行（和<literal>FORWARD ALL</literal>相同）。
         </para>
        </listitem>
       </varlistentry>

       <varlistentry>
        <term><literal>FORWARD</literal></term>
        <listitem>
         <para>
          取出下一行（和<literal>NEXT</literal>相同）。
         </para>
        </listitem>
       </varlistentry>

       <varlistentry>
        <term><literal>FORWARD <replaceable class="parameter">count</replaceable></literal></term>
        <listitem>
         <para>
          取出接下来的<replaceable
          class="parameter">count</replaceable>行。
          <literal>FORWARD 0</literal>重新取出当前行。
         </para>
        </listitem>
       </varlistentry>

       <varlistentry>
        <term><literal>FORWARD ALL</literal></term>
        <listitem>
         <para>
          取出所有剩下的行。
         </para>
        </listitem>
       </varlistentry>

       <varlistentry>
        <term><literal>BACKWARD</literal></term>
        <listitem>
         <para>
          取出当前行前面的一行（和<literal>PRIOR</literal>相同）。
         </para>
        </listitem>
       </varlistentry>

       <varlistentry>
        <term><literal>BACKWARD <replaceable class="parameter">count</replaceable></literal></term>
        <listitem>
         <para>
          取出前面的<replaceable
          class="parameter">count</replaceable>行（反向扫描）。
          <literal>BACKWARD 0</literal>会重新取出当前行。
         </para>
        </listitem>
       </varlistentry>

       <varlistentry>
        <term><literal>BACKWARD ALL</literal></term>
        <listitem>
         <para>
          取出所有当前位置之前的行（反向扫描）。
         </para>
        </listitem>
       </varlistentry>
      </variablelist></para>
    </listitem>
   </varlistentry>

   <varlistentry>
<!--==========================orignal english content==========================
    <term><replaceable class="parameter">count</replaceable></term>
____________________________________________________________________________-->
    <term><replaceable class="parameter">count</replaceable></term>
    <listitem>
<!--==========================orignal english content==========================
     <para><replaceable class="parameter">count</replaceable> is a
      possibly-signed integer constant, determining the location or
      number of rows to fetch.  For <literal>FORWARD</> and
      <literal>BACKWARD</> cases, specifying a negative <replaceable
      class="parameter">count</replaceable> is equivalent to changing
      the sense of <literal>FORWARD</> and <literal>BACKWARD</>.
     </para>
____________________________________________________________________________-->
     <para><replaceable class="parameter">count</replaceable>
      是一个可能带有符号的整数常量，它决定要取得的位置或者行数。对于
      <literal>FORWARD</literal>和<literal>BACKWARD</literal>情况，指定一个负的
      <replaceable
      class="parameter">count</replaceable>等效于改变
      <literal>FORWARD</literal>he <literal>BACKWARD</literal>的意义。
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
<!--==========================orignal english content==========================
    <term><replaceable class="parameter">cursor_name</replaceable></term>
____________________________________________________________________________-->
    <term><replaceable class="parameter">cursor_name</replaceable></term>
    <listitem>
<!--==========================orignal english content==========================
     <para>
      An open cursor's name.
     </para>
____________________________________________________________________________-->
     <para>
      一个已打开游标的名称。
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </refsect1>

 <refsect1>
<!--==========================orignal english content==========================
  <title>Outputs</title>
____________________________________________________________________________-->
  <title>输出</title>

<!--==========================orignal english content==========================
  <para>
   On successful completion, a <command>FETCH</> command returns a command
   tag of the form
<screen>
FETCH <replaceable class="parameter">count</replaceable>
</screen>
   The <replaceable class="parameter">count</replaceable> is the number
   of rows fetched (possibly zero).  Note that in
   <application>psql</application>, the command tag will not actually be
   displayed, since <application>psql</application> displays the fetched
   rows instead.
  </para>
____________________________________________________________________________-->
  <para>
   如果成功完成，<command>FETCH</command>命令返回一个下面形式的命令标签：
<screen>
FETCH <replaceable class="parameter">count</replaceable>
</screen>
   <replaceable class="parameter">count</replaceable>是取得的行数（可能
   为零）。注意在<application>psql</application>中，命令标签将不会实际显示，
   因为<application>psql</application>会显示被取得的行。
  </para>
 </refsect1>

 <refsect1>
<!--==========================orignal english content==========================
  <title>Notes</title>
____________________________________________________________________________-->
  <title>注解</title>

<!--==========================orignal english content==========================
  <para>
   The cursor should be declared with the <literal>SCROLL</literal>
   option if one intends to use any variants of <command>FETCH</>
   other than <command>FETCH NEXT</> or <command>FETCH FORWARD</> with
   a positive count.  For simple queries
   <productname>PostgreSQL</productname> will allow backwards fetch
   from cursors not declared with <literal>SCROLL</literal>, but this
   behavior is best not relied on. If the cursor is declared with
   <literal>NO SCROLL</literal>, no backward fetches are allowed.
  </para>
____________________________________________________________________________-->
  <para>
   如果想要使用<command>FETCH</command>的任意变体而不使用带有正计数的
   <command>FETCH NEXT</command>或者<command>FETCH FORWARD</command>，
   应该用<literal>SCROLL</literal>声明游标。对于简单查询，
   <productname>PostgreSQL</productname>将允许从不带
   <literal>SCROLL</literal>的游标中反向取得行，但最好不要依赖这种行为。
   如果游标被声明为带有<literal>SCROLL</literal>，则不允许反向取得。
  </para>

<!--==========================orignal english content==========================
  <para>
   <literal>ABSOLUTE</literal> fetches are not any faster than
   navigating to the desired row with a relative move: the underlying
   implementation must traverse all the intermediate rows anyway.
   Negative absolute fetches are even worse: the query must be read to
   the end to find the last row, and then traversed backward from
   there.  However, rewinding to the start of the query (as with
   <literal>FETCH ABSOLUTE 0</literal>) is fast.
  </para>
____________________________________________________________________________-->
  <para>
   用<literal>ABSOLUTE</literal>取行并不比用相对移动快多少：不管则样，
   底层实现都必须遍历所有的中间行。用负绝对值获取的情况更糟：必须读到
   查询尾部来找到最后一行，并且接着从那里反向开始遍历。不过，回卷到查询
   的开始（正如<literal>FETCH ABSOLUTE 0</literal>）是很快的。
  </para>

<!--==========================orignal english content==========================
  <para>
   <xref linkend="sql-declare">
   is used to define a cursor.  Use
   <xref linkend="sql-move">
   to change cursor position without retrieving data.
  </para>
____________________________________________________________________________-->
  <para>
   <xref linkend="sql-declare"/>被用来定义游标。使用
   <xref linkend="sql-move"/>可改变游标位置而不检索数据。
  </para>
 </refsect1>

 <refsect1>
<!--==========================orignal english content==========================
  <title>Examples</title>
____________________________________________________________________________-->
  <title>示例</title>

<!--==========================orignal english content==========================
  <para>
   The following example traverses a table using a cursor:

<programlisting>
BEGIN WORK;

-&minus; Set up a cursor:
DECLARE liahona SCROLL CURSOR FOR SELECT * FROM films;

-&minus; Fetch the first 5 rows in the cursor liahona:
FETCH FORWARD 5 FROM liahona;

 code  |          title          | did | date_prod  |   kind   |  len
-&minus;-&minus;-&minus;-+-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-+-&minus;-&minus;-+-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;+-&minus;-&minus;-&minus;-&minus;-&minus;+-&minus;-&minus;-&minus;-
 BL101 | The Third Man           | 101 | 1949-12-23 | Drama    | 01:44
 BL102 | The African Queen       | 101 | 1951-08-11 | Romantic | 01:43
 JL201 | Une Femme est une Femme | 102 | 1961-03-12 | Romantic | 01:25
 P_301 | Vertigo                 | 103 | 1958-11-14 | Action   | 02:08
 P_302 | Becket                  | 103 | 1964-02-03 | Drama    | 02:28

-&minus; Fetch the previous row:
FETCH PRIOR FROM liahona;

 code  |  title  | did | date_prod  |  kind  |  len
-&minus;-&minus;-&minus;-+-&minus;-&minus;-&minus;-&minus;-+-&minus;-&minus;-+-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;+-&minus;-&minus;-&minus;-&minus;+-&minus;-&minus;-&minus;-
 P_301 | Vertigo | 103 | 1958-11-14 | Action | 02:08

-&minus; Close the cursor and end the transaction:
CLOSE liahona;
COMMIT WORK;
</programlisting></para>
____________________________________________________________________________-->
  <para>
   下面的例子用一个游标遍历一个表：

<programlisting>
BEGIN WORK;

-- 建立一个游标：
DECLARE liahona SCROLL CURSOR FOR SELECT * FROM films;

-- 在游标 liahona 中取出前 5 行：
FETCH FORWARD 5 FROM liahona;

 code  |          title          | did | date_prod  |   kind   |  len
-------+-------------------------+-----+------------+----------+-------
 BL101 | The Third Man           | 101 | 1949-12-23 | Drama    | 01:44
 BL102 | The African Queen       | 101 | 1951-08-11 | Romantic | 01:43
 JL201 | Une Femme est une Femme | 102 | 1961-03-12 | Romantic | 01:25
 P_301 | Vertigo                 | 103 | 1958-11-14 | Action   | 02:08
 P_302 | Becket                  | 103 | 1964-02-03 | Drama    | 02:28

-- 取出前面一行：
FETCH PRIOR FROM liahona;

 code  |  title  | did | date_prod  |  kind  |  len
-------+---------+-----+------------+--------+-------
 P_301 | Vertigo | 103 | 1958-11-14 | Action | 02:08

-- 关闭游标并且结束事务：
CLOSE liahona;
COMMIT WORK;
</programlisting></para>
 </refsect1>

 <refsect1>
<!--==========================orignal english content==========================
  <title>Compatibility</title>
____________________________________________________________________________-->
  <title>兼容性</title>

<!--==========================orignal english content==========================
  <para>
   The SQL standard defines <command>FETCH</command> for use in
   embedded SQL only.  The variant of <command>FETCH</command>
   described here returns the data as if it were a
   <command>SELECT</command> result rather than placing it in host
   variables.  Other than this point, <command>FETCH</command> is
   fully upward-compatible with the SQL standard.
  </para>
____________________________________________________________________________-->
  <para>
   SQL 标准只定义<command>FETCH</command>在嵌入式 SQL 中使用。
   这里描述的<command>FETCH</command>变体返回数据时就好像数据是
   一个<command>SELECT</command>结果，而不是被放在主变量中。
   除这一点之外，<command>FETCH</command>完全向上兼容于 SQL 标准。
  </para>

<!--==========================orignal english content==========================
  <para>
   The <command>FETCH</command> forms involving
   <literal>FORWARD</literal> and <literal>BACKWARD</literal>, as well
   as the forms <literal>FETCH <replaceable
   class="parameter">count</replaceable></literal> and <literal>FETCH
   ALL</literal>, in which <literal>FORWARD</literal> is implicit, are
   <productname>PostgreSQL</productname> extensions.
  </para>
____________________________________________________________________________-->
  <para>
   涉及<literal>FORWARD</literal>和<literal>BACKWARD</literal>的
   <command>FETCH</command>形式，以及形式<literal>FETCH <replaceable
   class="parameter">count</replaceable></literal>和<literal>FETCH
   ALL</literal>（其中<literal>FORWARD</literal>是隐式的）都是
   <productname>PostgreSQL</productname>扩展。
  </para>

<!--==========================orignal english content==========================
  <para>
   The SQL standard allows only <literal>FROM</> preceding the cursor
   name; the option to use <literal>IN</>, or to leave them out altogether, is
   an extension.
  </para>
____________________________________________________________________________-->
  <para>
   SQL 标准只允许<literal>FROM</literal>在游标名之前。使用
   <literal>IN</literal>的选项或者完全省去它们是一种扩展。
  </para>
 </refsect1>

 <refsect1>
<!--==========================orignal english content==========================
  <title>See Also</title>
____________________________________________________________________________-->
  <title>另见</title>

  <simplelist type="inline">
   <member><xref linkend="sql-close"/></member>
   <member><xref linkend="sql-declare"/></member>
   <member><xref linkend="sql-move"/></member>
  </simplelist>
 </refsect1>
</refentry>
