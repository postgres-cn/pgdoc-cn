<!--
doc/src/sgml/ref/set_role.sgml
PostgreSQL documentation
-->

<refentry id="SQL-SET-ROLE">
 <indexterm zone="sql-set-role">
  <primary>SET ROLE</primary>
 </indexterm>

 <refmeta>
  <refentrytitle>SET ROLE</refentrytitle>
  <manvolnum>7</manvolnum>
  <refmiscinfo>SQL - Language Statements</refmiscinfo>
 </refmeta>

 <refnamediv>
  <refname>SET ROLE</refname>
  <refpurpose>设置当前会话的当前用户标识符</refpurpose>
 </refnamediv>

 <refsynopsisdiv>
<synopsis>
SET [ SESSION | LOCAL ] ROLE <replaceable class="parameter">role_name</replaceable>
SET [ SESSION | LOCAL ] ROLE NONE
RESET ROLE
</synopsis>
 </refsynopsisdiv>

 <refsect1>
  <title>描述</title>

  <para>
   这个命令把当前 SQL 会话的当前用户标识符设置为
   <replaceable class="parameter">role_name</replaceable>。
   角色名可以写成一个标识符或者一个字符串。在
   <command>SET ROLE</>之后，对 SQL 命令的权限检查时就
   好像该角色就是原先登录的角色一样。
  </para>

  <para>
   当前会话用户必须是指定的
   角色<replaceable class="parameter">role_name</replaceable>
   的一个成员（如果会话用户是一个超级用户，则可以选择任何角色）。
  </para>

  <para>
   <literal>SESSION</>和<literal>LOCAL</>修饰符发挥的作用和
   常规的<xref linkend="SQL-SET">命令一样。
  </para>

  <para>
   <literal>NONE</>和<literal>RESET</>形式把当前用户标识符
   重置为当前会话用户标识符。这些形式可以由任何用户执行。
  </para>
 </refsect1>

 <refsect1>
  <title>注解</title>

  <para>
   使用这个命令可以增加特权或者限制特权。如果会话用户角色具有
   <literal>INHERITS</>属性，则它会自动具有它能
   <command>SET ROLE</>到的所有角色的全部特权。在这种情况下
   <command>SET ROLE</>实际会删除所有直接分配给会话用户的特
   权以及分配给会话用户作为其成员的其他角色的特权，只留下所提及
   角色可用的特权。换句话说，如果会话用户没有
   <literal>NOINHERITS</>属性，<command>SET ROLE</>会删除
   直接分配给会话用户的特权而得到所提及角色可用的特权。
  </para>

  <para>
   特别地，当一个超级用户选择<command>SET ROLE</>到一个非
   超级用户角色时，它会丢失它的超级用户特权。
  </para>

  <para>
   <command>SET ROLE</>的效果堪比
   <xref linkend="sql-set-session-authorization">，但是涉及的特权检查
   完全不同。还有，<command>SET SESSION AUTHORIZATION</>决定
   后来的<command>SET ROLE</>命令可以使用哪些角色， 不过用
   <command>SET ROLE</>更改角色并不会改变后续
   <command>SET ROLE</>能够使用的角色集。
  </para>

  <para>
   <command>SET ROLE</>不会处理角色的<xref linkend="sql-alterrole">
   设置指定的会话变量。这只在登录期间发生。
  </para>

  <para>
   <command>SET ROLE</>不能在一个
   <literal>SECURITY DEFINER</>函数中使用。
  </para>
 </refsect1>

 <refsect1>
  <title>示例</title>

<programlisting>
SELECT SESSION_USER, CURRENT_USER;

 session_user | current_user 
--------------+--------------
 peter        | peter

SET ROLE 'paul';

SELECT SESSION_USER, CURRENT_USER;

 session_user | current_user 
--------------+--------------
 peter        | paul
</programlisting>
 </refsect1>

 <refsect1>
  <title>兼容性</title>

  <para>
   <productname>PostgreSQL</productname>允许标识符
   语法（<literal>"rolename"</literal>），而 SQL 标准要求
   角色名被写成字符串。SQL 不允许在事务中使用这个命令，而
   <productname>PostgreSQL</productname>并不做此限
   制，因为并没有原因需要这样做。和<literal>RESET</>语法
   一样，<literal>SESSION</>和
   <literal>LOCAL</>修饰符是一种
   <productname>PostgreSQL</productname>扩展。
  </para>
 </refsect1>

 <refsect1>
  <title>另见</title>

  <simplelist type="inline">
   <member><xref linkend="sql-set-session-authorization"></member>
  </simplelist>
 </refsect1>
</refentry>
