<!--
doc/src/sgml/ref/rollback_prepared.sgml
PostgreSQL documentation
-->

<refentry id="SQL-ROLLBACK-PREPARED">
 <indexterm zone="sql-rollback-prepared">
  <primary>ROLLBACK PREPARED</primary>
 </indexterm>

 <refmeta>
  <refentrytitle>ROLLBACK PREPARED</refentrytitle>
  <manvolnum>7</manvolnum>
  <refmiscinfo>SQL - Language Statements</refmiscinfo>
 </refmeta>

 <refnamediv>
  <refname>ROLLBACK PREPARED</refname>
  <refpurpose>取消一个之前为两阶段提交准备好的事务</refpurpose>
 </refnamediv>

 <refsynopsisdiv>
<synopsis>
ROLLBACK PREPARED <replaceable class="PARAMETER">transaction_id</replaceable>
</synopsis>
 </refsynopsisdiv>

 <refsect1>
  <title>描述</title>

  <para>
   <command>ROLLBACK PREPARED</command>回滚
   一个处于准备好状态的事务。
  </para>
 </refsect1>

 <refsect1>
  <title>参数</title>

  <variablelist>
   <varlistentry>
    <term><replaceable class="PARAMETER">transaction_id</replaceable></term>
    <listitem>
     <para>
      要被回滚的事务的事务标识符。
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </refsect1>

 <refsect1>
  <title>注解</title>

  <para>
   要回滚一个准备好的事务，你必须是原先执行该事务的同一个用户或者
   是一个超级用户。但是你必须处在执行该事务的同一个会话中。
  </para>

  <para>
   这个命令不能在一个事务块内被执行。准备好的事务会被立刻回滚。
  </para>

  <para>
   <link linkend="view-pg-prepared-xacts"><structname>pg_prepared_xacts</structname></link>
   系统视图中列出了当前可用的所有准备好的事务。
  </para>
 </refsect1>

 <refsect1 id="sql-rollback-prepared-examples">
  <title id="sql-rollback-prepared-examples-title">例子</title>
  <para>
   用事务标识符<literal>foobar</>回滚对应的事务：

<programlisting>
ROLLBACK PREPARED 'foobar';
</programlisting></para>

 </refsect1>

 <refsect1>
  <title>兼容性</title>

  <para>
   <command>ROLLBACK PREPARED</command>是一种
   <productname>PostgreSQL</productname>扩展。其意图是用于
   外部事务管理系统，其中有些已经被标准涵盖（例如 X/Open XA），
   但是那些系统的 SQL 方面未被标准化。
  </para>
 </refsect1>

 <refsect1>
  <title>另见</title>

  <simplelist type="inline">
   <member><xref linkend="sql-prepare-transaction"></member>
   <member><xref linkend="sql-commit-prepared"></member>
  </simplelist>
 </refsect1>

</refentry>
