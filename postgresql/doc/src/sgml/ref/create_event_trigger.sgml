<!--
doc/src/sgml/ref/create_event_trigger.sgml
PostgreSQL documentation
-->

<refentry id="SQL-CREATEEVENTTRIGGER">
 <indexterm zone="sql-createeventtrigger">
  <primary>CREATE EVENT TRIGGER</primary>
 </indexterm>

 <refmeta>
  <refentrytitle>CREATE EVENT TRIGGER</refentrytitle>
  <manvolnum>7</manvolnum>
  <refmiscinfo>SQL - Language Statements</refmiscinfo>
 </refmeta>

 <refnamediv>
  <refname>CREATE EVENT TRIGGER</refname>
  <refpurpose>定义一个新的事件触发器</refpurpose>
 </refnamediv>

 <refsynopsisdiv>
<synopsis>
CREATE EVENT TRIGGER <replaceable class="PARAMETER">name</replaceable>
  ON <replaceable class="PARAMETER">event</replaceable>
  [ WHEN <replaceable class="PARAMETER">filter_variable</replaceable> IN (filter_value [, ... ]) [ AND ... ] ]
  EXECUTE PROCEDURE <replaceable class="PARAMETER">function_name</replaceable>()
</synopsis>
 </refsynopsisdiv>

 <refsect1>
  <title>描述</title>

  <para>
   <command>CREATE EVENT TRIGGER</command>创建一个新的事件触发器。
   只要指定的事件发生并且与该触发器相关的<literal>WHEN</>条件（如果有）被
   满足，该触发器的函数将被执行。关于事件触发器的一般性介绍可见
   <xref linkend="event-triggers">。创建事件触发器的用户会成为它的拥有者。
  </para>
 </refsect1>

 <refsect1>
  <title>参数</title>

  <variablelist>
   <varlistentry>
    <term><replaceable class="parameter">name</replaceable></term>
    <listitem>
     <para>
      给新触发器的名称。在该数据库中这个名称必须唯一。
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><replaceable class="parameter">event</replaceable></term>
    <listitem>
     <para>
      会触发对给定函数调用的事件名称。更多事件名称的信息请见
      <xref linkend="event-trigger-definition">。
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><replaceable class="parameter">filter_variable</replaceable></term>
    <listitem>
     <para>
      用来过滤事件的变量名称。这可以用来限制触发器只为它支持的那一部分
      情况引发。当前唯一支持的
      <replaceable class="parameter">filter_variable</replaceable>
      是<literal>TAG</literal>。
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><replaceable class="parameter">filter_value</replaceable></term>
    <listitem>
     <para>
      与该触发器要为其引发的
      <replaceable class="parameter">filter_variable</replaceable>相关联
      的一个值列表。对于<literal>TAG</>，这表示一个命令标签列表（例如
      <literal>'DROP FUNCTION'</>）。
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><replaceable class="parameter">function_name</replaceable></term>
    <listitem>
     <para>
      一个用户提供的函数，它被声明为没有参数并且返回类型
      <literal>event_trigger</literal>。
     </para>
    </listitem>
   </varlistentry>

  </variablelist>
 </refsect1>

 <refsect1 id="sql-createeventtrigger-notes">
  <title>注解</title>

  <para>
   只有超级用户能创建事件触发器。
  </para>

  <para>
   在单用户模式（见<xref linkend="app-postgres">）中事件触发器被禁用。
   如果一个错误的事件触发器禁用了数据库让你甚至无法删除它，可以重启到
   单用户模式，这样你就能删除它。
  </para>
 </refsect1>

 <refsect1 id="sql-createeventtrigger-examples">
  <title>示例</title>

  <para>
   禁止执行任何<link linkend="ddl">DDL</link>命令：

<programlisting>
CREATE OR REPLACE FUNCTION abort_any_command()
  RETURNS event_trigger
 LANGUAGE plpgsql
  AS $$
BEGIN
  RAISE EXCEPTION 'command % is disabled', tg_tag;
END;
$$;

CREATE EVENT TRIGGER abort_ddl ON ddl_command_start
   EXECUTE PROCEDURE abort_any_command();
</programlisting></para>
 </refsect1>

 <refsect1 id="sql-createeventtrigger-compatibility">
  <title>兼容性</title>

  <para>
   在 SQL 标准中没有
   <command>CREATE EVENT TRIGGER</command>语句。
  </para>

 </refsect1>

 <refsect1>
  <title>另见</title>

  <simplelist type="inline">
   <member><xref linkend="sql-altereventtrigger"></member>
   <member><xref linkend="sql-dropeventtrigger"></member>
   <member><xref linkend="sql-createfunction"></member>
  </simplelist>
 </refsect1>
</refentry>
