<!--
doc/src/sgml/ref/alter_aggregate.sgml
PostgreSQL documentation
-->

<refentry id="SQL-ALTERAGGREGATE">
 <indexterm zone="sql-alteraggregate">
  <primary>ALTER AGGREGATE</primary>
 </indexterm>

 <refmeta>
  <refentrytitle>ALTER AGGREGATE</refentrytitle>
  <manvolnum>7</manvolnum>
<!--
  <refmiscinfo>SQL - Language Statements</refmiscinfo>
-->
<refmiscinfo>SQL - 语句</refmiscinfo>
 </refmeta>

 <refnamediv>
  <refname>ALTER AGGREGATE</refname>
<!--
  <refpurpose>change the definition of an aggregate function</refpurpose>
-->
<refpurpose>修改一个聚合函数的定义</refpurpose>
 </refnamediv>
 <refsynopsisdiv>
<synopsis>
ALTER AGGREGATE <replaceable>name</replaceable> ( <replaceable>aggregate_signature</replaceable> ) RENAME TO <replaceable>new_name</replaceable>
ALTER AGGREGATE <replaceable>name</replaceable> ( <replaceable>aggregate_signature</replaceable> ) OWNER TO <replaceable>new_owner</replaceable>
ALTER AGGREGATE <replaceable>name</replaceable> ( <replaceable>aggregate_signature</replaceable> ) SET SCHEMA <replaceable>new_schema</replaceable>

<phrase>where <replaceable>aggregate_signature</replaceable> is:</phrase>

* |
[ <replaceable>argmode</replaceable> ] [ <replaceable>argname</replaceable> ] <replaceable>argtype</replaceable> [ , ... ] |

[ [ <replaceable>argmode</replaceable> ] [ <replaceable>argname</replaceable> ] <replaceable>argtype</replaceable> [ , ... ] ] ORDER BY [ <replaceable>argmode</replaceable> ] [ <replaceable>argname</replaceable> ] <replaceable>argtype</replaceable> [ , ... ]
</synopsis>
 </refsynopsisdiv>
 <refsect1>
<!--
  <title>Description</title>
-->
<title>描述</title>
<!--
  <para>
   <command>ALTER AGGREGATE</command> changes the definition of an
   aggregate function.
  </para>
-->
<para>
<command>ALTER AGGREGATE</command> 改变一个聚合函数的定义。
</para>

<!--
  <para>
   You must own the aggregate function to use <command>ALTER AGGREGATE</>.
   To change the schema of an aggregate function, you must also have
   <literal>CREATE</literal> privilege on the new schema.
   To alter the owner, you must also be a direct or indirect member of the new
   owning role, and that role must have <literal>CREATE</literal> privilege on
   the aggregate function's schema. (These restrictions enforce that altering
   the owner doesn't do anything you couldn't do by dropping and recreating
   the aggregate function. However, a superuser can alter ownership of any
   aggregate function anyway.)
  </para>
-->
<para>
要使用 <command>ALTER AGGREGATE</> ，你必须是该聚合函数的所有者。
要改变一个聚合函数的模式，你必须在新模式上有 <literal>CREATE</literal> 权限。
要改变所有者，你必须是新所有角色的一个直接或间接成员，并且该角色必须在聚合函数的模式上有 <literal>CREATE</literal> 权限。
（这些限制强制了修改该所有者不会做任何通过删除和重建聚合函数不能做的事情。不过，超级用户可以用任何方法任意更改聚合函数的所属关系。）
</para>
 </refsect1>

 <refsect1>
<!--
  <title>Parameters</title>
-->
<title>参数</title>

  <variablelist>
   <varlistentry>
    <term><replaceable class="parameter">name</replaceable></term>
    <listitem>
<!--
     <para>
      The name (optionally schema-qualified) of an existing aggregate function.
     </para>
-->
<para>
现有的聚合函数的名称(可以有模式修饰)。 
</para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><replaceable class="parameter">argmode</replaceable></term>

    <listitem>
<!-- 
     <para>
      The mode of an argument: <literal>IN</> or <literal>VARIADIC</>.
      If omitted, the default is <literal>IN</>.
     </para> 
-->
     <para>
      一个参数的模式： <literal>IN</>或<literal>VARIADIC</>。
      如果省略了，缺省是<literal>IN</>。
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><replaceable class="parameter">argname</replaceable></term>

    <listitem>
<!-- 
     <para>
      The name of an argument.
      Note that <command>ALTER AGGREGATE</command> does not actually pay
      any attention to argument names, since only the argument data
      types are needed to determine the aggregate function's identity.
     </para> 
-->
     <para>
      一个参数的名字。请注意，<command>ALTER AGGREGATE</command>
      实际上并不注意参数名，因为只需要参数的数据类型就能确定聚合函数的身份了。
     </para>
    </listitem>
   </varlistentry>
   
   
   <varlistentry>
    <term><replaceable class="parameter">argtype</replaceable></term>
    <listitem>
<!--
     <para>
      An input data type on which the aggregate function operates.
      To reference a zero-argument aggregate function, write <literal>*</>
      in place of the list of argument specifications.
      To reference an ordered-set aggregate function, write
      <literal>ORDER BY</> between the direct and aggregated argument
      specifications.
     </para>
-->
<para>
聚合函数操作的输入数据类型。要引用一个零参数聚合函数，
可以写入<literal>*</>代替参数声明列表。
要引用一个有序集合的聚合函数，在直接和聚合参数声明之间写<literal>ORDER BY</>。
</para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><replaceable class="parameter">new_name</replaceable></term>
    <listitem>
<!--
     <para>
      The new name of the aggregate function.
     </para>
-->
<para>
聚合函数的新名字。
</para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><replaceable class="parameter">new_owner</replaceable></term>
    <listitem>
<!--
     <para>
      The new owner of the aggregate function.
     </para>
-->
<para>
聚合函数的新所有者。 
</para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><replaceable class="parameter">new_schema</replaceable></term>
    <listitem>
<!--
     <para>
      The new schema for the aggregate function.
     </para>
-->
<para>
聚合函数的新模式。 
</para>
    </listitem>
   </varlistentry>
  </variablelist>
 </refsect1>

 <refsect1>
<!-- 
  <title>Notes</title> 
-->
  <title>注意</title>

<!-- 
   <para>
    The recommended syntax for referencing an ordered-set aggregate
    is to write <literal>ORDER BY</> between the direct and aggregated
    argument specifications, in the same style as in
    <xref linkend="sql-createaggregate">.  However, it will also work to
    omit <literal>ORDER BY</> and just run the direct and aggregated
    argument specifications into a single list.  In this abbreviated form,
    if <literal>VARIADIC "any"</> was used in both the direct and
    aggregated argument lists, write <literal>VARIADIC "any"</> only once.
   </para> 
-->
   <para>
    引用一个有序集合的聚合的推荐语法是在直接和聚合参数声明之间写
    <literal>ORDER BY</>，和在<xref linkend="sql-createaggregate">
    中的风格相同。不过，省略<literal>ORDER BY</>，
    只是运行直接和聚合的参数声明到一个单个列表也是可以的。
    在这种缩写形式中，如果在直接和聚合参数列表中都使用了
    <literal>VARIADIC "any"</>，那么只写一次<literal>VARIADIC "any"</>就可以了。
   </para>
 </refsect1>

 <refsect1>
<!--
  <title>Examples</title>
-->
<title>例子</title>

<!--
  <para>
   To rename the aggregate function <literal>myavg</literal> for type
   <type>integer</type> to <literal>my_average</literal>:
<programlisting>
ALTER AGGREGATE myavg(integer) RENAME TO my_average;
</programlisting>
  </para>
-->
 <para>
把一个接受<type>integer</type> 类型参数的聚合函数<literal>myavg</literal>重命名为 <literal>my_average</literal> ： 
<programlisting>
ALTER AGGREGATE myavg(integer) RENAME TO my_average;
</programlisting>
</para>

<!--
  <para>
   To change the owner of the aggregate function <literal>myavg</literal> for type
   <type>integer</type> to <literal>joe</literal>:
<programlisting>
ALTER AGGREGATE myavg(integer) OWNER TO joe;
</programlisting>
  </para>
-->
<para>
把一个接受<type>integer</type> 类型参数的聚合函数<literal>myavg</literal>的所有者改为<literal>joe</literal>  ： 
<programlisting>
ALTER AGGREGATE myavg(integer) OWNER TO joe;
</programlisting>
</para>

  <para>
<!-- 
   To move the ordered-set aggregate <literal>mypercentile</literal> with
   direct argument of type <type>float8</type> and aggregated argument
   of type <type>integer</type> into schema <literal>myschema</literal>: 
-->
要移动带有<type>float8</type>类型直接参数和<type>integer</type>
类型聚合参数的有序集聚合<literal>mypercentile</literal>到模式
<literal>myschema</literal>中：
<programlisting>
ALTER AGGREGATE mypercentile(float8 ORDER BY integer) SET SCHEMA myschema;
</programlisting>
<!-- 
   This will work too: 
-->
这样也可以：
<programlisting>
ALTER AGGREGATE mypercentile(float8, integer) SET SCHEMA myschema;
</programlisting>
  </para>
 </refsect1>

 <refsect1>
<!--
  <title>Compatibility</title>
-->
<title>兼容性</title>

<!--
  <para>
   There is no <command>ALTER AGGREGATE</command> statement in the SQL
   standard.
  </para>
-->
<para>
SQL标准里没有<command>ALTER AGGREGATE</command>语句。
</para>
</refsect1>

 <refsect1>
<!--
  <title>See Also</title>
-->
<title>参见</title>

  <simplelist type="inline">
   <member><xref linkend="sql-createaggregate"></member>
   <member><xref linkend="sql-dropaggregate"></member>
  </simplelist>
 </refsect1>
</refentry>

