<!--
doc/src/sgml/ref/create_tsparser.sgml
PostgreSQL documentation
-->

<refentry id="SQL-CREATETSPARSER">
 <indexterm zone="sql-createtsparser">
  <primary>CREATE TEXT SEARCH PARSER</primary>
 </indexterm>

 <refmeta>
  <refentrytitle>CREATE TEXT SEARCH PARSER</refentrytitle>
  <manvolnum>7</manvolnum>
  <refmiscinfo>SQL - Language Statements</refmiscinfo>
 </refmeta>

 <refnamediv>
  <refname>CREATE TEXT SEARCH PARSER</refname>
  <refpurpose>定义一个新的文本搜索解析器</refpurpose>
 </refnamediv>

 <refsynopsisdiv>
<synopsis>
CREATE TEXT SEARCH PARSER <replaceable class="parameter">name</replaceable> (
    START = <replaceable class="parameter">start_function</replaceable> ,
    GETTOKEN = <replaceable class="parameter">gettoken_function</replaceable> ,
    END = <replaceable class="parameter">end_function</replaceable> ,
    LEXTYPES = <replaceable class="parameter">lextypes_function</replaceable>
    [, HEADLINE = <replaceable class="parameter">headline_function</replaceable> ]
)
</synopsis>
 </refsynopsisdiv>

 <refsect1>
  <title>描述</title>

  <para>
   <command>CREATE TEXT SEARCH PARSER</command>创建一个
   新的文本搜索解析器。一个文本搜索解析器定义把文本字符串分解成记号
   并且为记号分配类型（分类）的方法。一个解析器本身并不特别有用，但
   是必须与一些要用于搜索的文本搜索字典一起被绑定到一个文本搜索配置
   中。
  </para>

  <para>
   如果给出了一个模式名称，那么文本搜索解析器将被创建在指定的模式中。
   否则它会被创建在当前模式中。
  </para>

  <para>
   只有超级用户才能使用
   <command>CREATE TEXT SEARCH PARSER</command>（这是因为
   错误的文本搜索定义可能会让服务器混淆甚至崩溃）。
  </para>

  <para>
   更多信息可以参考<xref linkend="textsearch">。
  </para>
 </refsect1>

 <refsect1>
  <title>参数</title>

  <variablelist>
   <varlistentry>
    <term><replaceable class="parameter">name</replaceable></term>
    <listitem>
     <para>
      要创建的文本搜索解析器的名称。该名称可以是模式限定的。
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><replaceable class="parameter">start_function</replaceable></term>
    <listitem>
     <para>
      用于该解析器的开始函数的名称。
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><replaceable class="parameter">gettoken_function</replaceable></term>
    <listitem>
     <para>
      用于该解析器的取下一个记号的函数名称。
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><replaceable class="parameter">end_function</replaceable></term>
    <listitem>
     <para>
      用于该解析器的结束函数的名称。
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><replaceable class="parameter">lextypes_function</replaceable></term>
    <listitem>
     <para>
      用于该解析器的词法分析器函数（一个返回其产生的记号类型集合信息的函数）的名称。
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><replaceable class="parameter">headline_function</replaceable></term>
    <listitem>
     <para>
      用于该解析器的标题函数（一个对记号集合进行综述的函数）的名称。
     </para>
    </listitem>
   </varlistentry>
  </variablelist>

  <para>
   如有必要，函数的名称可以被模式限定。参数类型没有给出，
   因为函数的每个类型的参数列表无法被预先决定。除了标题函数之外，
   所有函数都是必要的。
  </para>

  <para>
   参数可以以任何顺序出现，而不是必须按照上面所展示的顺序。
  </para>
 </refsect1>

 <refsect1>
  <title>兼容性</title>

  <para>
   在 SQL 标准中没有
   <command>CREATE TEXT SEARCH PARSER</command>语句。
  </para>
 </refsect1>

 <refsect1>
  <title>另见</title>

  <simplelist type="inline">
   <member><xref linkend="sql-altertsparser"></member>
   <member><xref linkend="sql-droptsparser"></member>
  </simplelist>
 </refsect1>
</refentry>
