<!-- doc/src/sgml/pgstattuple.sgml -->

<sect1 id="pgstattuple" xreflabel="pgstattuple">
 <title>pgstattuple</title>

 <indexterm zone="pgstattuple">
  <primary>pgstattuple</primary>
 </indexterm>

 <!--
<para>
  The <filename>pgstattuple</filename> module provides various functions to
  obtain tuple-level statistics.
 </para>
-->
<para>
<filename>pgstattuple</filename>模块提供各种函数以获得元组级别的状态。
</para>

 <sect2>
  <!--
  <title>Functions</title>
  -->
  <title>函数</title>

  <variablelist>
   <varlistentry>
    <term>
   <indexterm>
    <primary>pgstattuple</primary>
   </indexterm>
     <function>pgstattuple(regclass) returns record</>
    </term>

    <listitem>
<para>
      <!-- 
  <function>pgstattuple</function> returns a relation's physical length,
      percentage of <quote>dead</> tuples, and other info. This may help users
      to determine whether vacuum is necessary or not.  The argument is the
      target relation's name (optionally schema-qualified) or OID.
      For example: 
  -->
  <function>pgstattuple</function>返回一个关系的实际长度，<quote>死的</>
  元组的百分比，和其他信息。这帮助用户确定是否需要vacuum。
  该参数是目标关系的名字（可以有模式限定）或OID。例如：
<programlisting>
test=> SELECT * FROM pgstattuple('pg_catalog.pg_proc');
-[ RECORD 1 ]------+-------
table_len          | 458752
tuple_count        | 1470
tuple_len          | 438896
tuple_percent      | 95.67
dead_tuple_count   | 11
dead_tuple_len     | 3157
dead_tuple_percent | 0.69
free_space         | 8932
free_percent       | 1.95
</programlisting>
     <!--
 The output columns are described in <xref linkend="pgstattuple-columns">.
 -->
 输出字段在<xref linkend="pgstattuple-columns">中描述。
    </para>

    <table id="pgstattuple-columns">
     <!--
 <title><function>pgstattuple</function> Output Columns</title>
 -->
 <title><function>pgstattuple</function> 输出字段</title>
     <tgroup cols="3">
      <thead>
       <row>
        <!--
<entry>Column</entry>
        <entry>Type</entry>
        <entry>Description</entry>
-->
<entry>字段</entry>
        <entry>类型</entry>
        <entry>描述</entry>
       </row>
      </thead>

      <tbody>
       <row>
        <entry><structfield>table_len</structfield></entry>
        <entry><type>bigint</type></entry>
        <!--
<entry>Physical relation length in bytes</entry>
-->
<entry>实际关系长度以字节计</entry>
       </row>
       <row>
        <entry><structfield>tuple_count</structfield></entry>
        <entry><type>bigint</type></entry>
        <!--
<entry>Number of live tuples</entry>
-->
<entry>活的元组的数量</entry>
       </row>
       <row>
        <entry><structfield>tuple_len</structfield></entry>
        <entry><type>bigint</type></entry>
        <!--
<entry>Total length of live tuples in bytes</entry>
-->
<entry>活的元组的总长度，以字节计</entry>
       </row>
       <row>
        <entry><structfield>tuple_percent</structfield></entry>
        <entry><type>float8</type></entry>
        <!-- 
<entry>Percentage of live tuples</entry>
-->
<entry>活的元组的百分比</entry>
       </row>
       <row>
        <entry><structfield>dead_tuple_count</structfield></entry>
        <entry><type>bigint</type></entry>
        <!--
<entry>Number of dead tuples</entry>
-->
<entry>死的元组的数量</entry>
       </row>
       <row>
        <entry><structfield>dead_tuple_len</structfield></entry>
        <entry><type>bigint</type></entry>
        <!--
<entry>Total length of dead tuples in bytes</entry>
-->
<entry>死的元组的总长度，以字节计</entry>
       </row>
       <row>
        <entry><structfield>dead_tuple_percent</structfield></entry>
        <entry><type>float8</type></entry>
        <!--
<entry>Percentage of dead tuples</entry>
-->
<entry>死的元组的百分比</entry>
       </row>
       <row>
        <entry><structfield>free_space</structfield></entry>
        <entry><type>bigint</type></entry>
        <!--
<entry>Total free space in bytes</entry>
-->
<entry>总的空闲空间，以字节计</entry>
       </row>
       <row>
        <entry><structfield>free_percent</structfield></entry>
        <entry><type>float8</type></entry>
        <!--
<entry>Percentage of free space</entry>
-->
<entry>空闲空间的百分比</entry>
       </row>

      </tbody>
     </tgroup>
    </table>

    <!--
<para>
     <function>pgstattuple</function> acquires only a read lock on the
     relation. So the results do not reflect an instantaneous snapshot;
     concurrent updates will affect them.
    </para>
-->
<para>
<function>pgstattuple</function>只获取关系中的读锁。所以结果并不反映一个瞬间的快照；
并发的更新将影响它们。
</para>

    <!--
<para>
     <function>pgstattuple</function> judges a tuple is <quote>dead</> if
     <function>HeapTupleSatisfiesDirty</> returns false.
    </para>
-->
<para>
如果<function>HeapTupleSatisfiesDirty</>返回假，那么<function>pgstattuple</function>
判断一个元组是否是<quote>死的</>。
</para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term>
     <function>pgstattuple(text) returns record</>
    </term>

    <listitem>
     <!--
<para>
      This is the same as <function>pgstattuple(regclass)</function>, except
      that the target relation is specified by TEXT. This function is kept
      because of backward-compatibility so far, and will be deprecated in
      the future release.
     </para>
-->
<para>
这和<function>pgstattuple(regclass)</function>一样，除了目标关系是通过TEXT指定之外。
保留这个函数是为了向后兼容，在未来的版本中会被废除。
</para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term>
    <indexterm>
     <primary>pgstatindex</primary>
    </indexterm>
     <function>pgstatindex(regclass) returns record</>
    </term>

    <listitem>
<para>
      <!--
  <function>pgstatindex</function> returns a record showing information
      about a B-tree index.  For example:
  -->
  <function>pgstatindex</function>返回一个显示关于B-tree索引信息的记录。例如：
<programlisting>
test=> SELECT * FROM pgstatindex('pg_cast_oid_index');
-[ RECORD 1 ]------+------
version            | 2
tree_level         | 0
index_size         | 8192
root_block_no      | 1
internal_pages     | 0
leaf_pages         | 1
empty_pages        | 0
deleted_pages      | 0
avg_leaf_density   | 50.27
leaf_fragmentation | 0
</programlisting>
     </para>

<para>
     <!--
 The output columns are:
 -->
 输出字段是：

    <informaltable>
     <tgroup cols="3">
      <thead>
       <row>
        <!--
<entry>Column</entry>
        <entry>Type</entry>
        <entry>Description</entry>
-->
<entry>字段</entry>
        <entry>类型</entry>
        <entry>描述</entry>
       </row>
      </thead>

      <tbody>
       <row>
        <entry><structfield>version</structfield></entry>
        <entry><type>integer</type></entry>
        <!--
<entry>B-tree version number</entry>
-->
<entry>B-tree 版本号</entry>
       </row>

       <row>
        <entry><structfield>tree_level</structfield></entry>
        <entry><type>integer</type></entry>
        <!--
<entry>Tree level of the root page</entry>
-->
<entry>根页面的树级别</entry>
       </row>

       <row>
        <entry><structfield>index_size</structfield></entry>
        <entry><type>bigint</type></entry>
        <!--
<entry>Total number of pages in index</entry>
-->
<entry>索引中页面的总数量</entry>
       </row>

       <row>
        <entry><structfield>root_block_no</structfield></entry>
        <entry><type>bigint</type></entry>
        <!--
<entry>Location of root block</entry>
-->
<entry>根块的位置</entry>
       </row>

       <row>
        <entry><structfield>internal_pages</structfield></entry>
        <entry><type>bigint</type></entry>
        <!--
<entry>Number of <quote>internal</> (upper-level) pages</entry>
-->
<entry><quote>internal</> (上一级) 页面的数量</entry>
       </row>

       <row>
        <entry><structfield>leaf_pages</structfield></entry>
        <entry><type>bigint</type></entry>
        <!--
<entry>Number of leaf pages</entry>
-->
<entry>叶子页面的数量</entry>
       </row>

       <row>
        <entry><structfield>empty_pages</structfield></entry>
        <entry><type>bigint</type></entry>
        <!-- 
<entry>Number of empty pages</entry>
-->
<entry>空白页面的数量</entry>
       </row>

       <row>
        <entry><structfield>deleted_pages</structfield></entry>
        <entry><type>bigint</type></entry>
        <!--
<entry>Number of deleted pages</entry>
-->
<entry>已删除页面的数量</entry>
       </row>

       <row>
        <entry><structfield>avg_leaf_density</structfield></entry>
        <entry><type>float8</type></entry>
        <!--
<entry>Average density of leaf pages</entry>
-->
<entry>叶子页面的平均密度</entry>
       </row>

       <row>
        <entry><structfield>leaf_fragmentation</structfield></entry>
        <entry><type>float8</type></entry>
        <!--
<entry>Leaf page fragmentation</entry>
-->
<entry>叶子页面碎片</entry>
       </row>

      </tbody>
     </tgroup>
    </informaltable>
    </para>

    <!--
<para>
     As with <function>pgstattuple</>, the results are accumulated
     page-by-page, and should not be expected to represent an
     instantaneous snapshot of the whole index.
    </para>
-->
<para>
与<function>pgstattuple</>一样，结果是一页一页的累积的，
不应该期望代表整个索引的一个瞬间快照。
</para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term>
     <function>pgstatindex(text) returns record</>
    </term>

    <listitem>
<!--
     <para>
      This is the same as <function>pgstatindex(regclass)</function>, except
      that the target index is specified by TEXT. This function is kept
      because of backward-compatibility so far, and will be deprecated in
      the future release.
     </para>
-->
<para>
这和<function>pgstatindex(regclass)</function>相同，除了目标索引是通过TEXT指定的。
保留这个函数是为了向后兼容，在未来的版本中将会废弃。
</para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term>
     <indexterm>
      <primary>pgstatginindex</primary>
     </indexterm>
     <function>pgstatginindex(regclass) returns record</>
    </term>

    <listitem>
<para>
      <!-- 
  <function>pgstatginindex</function> returns a record showing information
      about a GIN index.  For example: 
  -->
  <function>pgstatginindex</function>返回一个显示关于GIN索引信息的记录。例如：
<programlisting>
test=> SELECT * FROM pgstatginindex('test_gin_index');
-[ RECORD 1 ]--+--
version        | 1
pending_pages  | 0
pending_tuples | 0
</programlisting>
     </para>

<para>
     <!--
 The output columns are:
 -->
 输出字段是：

    <informaltable>
     <tgroup cols="3">
      <thead>
       <row>
        <!--
<entry>Column</entry>
        <entry>Type</entry>
        <entry>Description</entry>
-->
<entry>字段</entry>
        <entry>类型</entry>
        <entry>描述</entry>
       </row>
      </thead>

      <tbody>
       <row>
        <entry><structfield>version</structfield></entry>
        <entry><type>integer</type></entry>
        <!--
<entry>GIN version number</entry>
-->
<entry>GIN 版本号</entry>
       </row>

       <row>
        <entry><structfield>pending_pages</structfield></entry>
        <entry><type>integer</type></entry>
        <!--
<entry>Number of pages in the pending list</entry>
-->
<entry>等待列表中页面的数量</entry>
       </row>

       <row>
        <entry><structfield>pending_tuples</structfield></entry>
        <entry><type>bigint</type></entry>
        <!-- 
<entry>Number of tuples in the pending list</entry>
-->
<entry>等待列表中元组的数量</entry>
       </row>

      </tbody>
     </tgroup>
    </informaltable>
    </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term>
     <indexterm>
      <primary>pg_relpages</primary>
     </indexterm>
     <function>pg_relpages(regclass) returns bigint</>
    </term>

    <listitem>
     <!--
<para>
      <function>pg_relpages</function> returns the number of pages in the
      relation.
     </para>
-->
<para>
<function>pg_relpages</function>返回关系中页面的数量。
</para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term>
     <function>pg_relpages(text) returns bigint</>
    </term>

    <listitem>
<!--
     <para>
      This is the same as <function>pg_relpages(regclass)</function>, except
      that the target relation is specified by TEXT. This function is kept
      because of backward-compatibility so far, and will be deprecated in
      the future release.
     </para>
-->
<para>
这和<function>pgstatindex(regclass)</function>相同，除了目标关系是通过TEXT指定的。
保留这个函数是为了向后兼容，在未来的版本中将会废弃。
</para>
    </listitem>
   </varlistentry>

  </variablelist>
 </sect2>

 <sect2>
  <!--
  <title>Authors</title>
  -->
  <title>作者</title>

  <!--
<para>
   Tatsuo Ishii and Satoshi Nagayasu
  </para>
-->
<para>
Tatsuo Ishii 和 Satoshi Nagayasu
</para>
 </sect2>

</sect1>
