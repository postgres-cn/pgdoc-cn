<!-- doc/src/sgml/pgstattuple.sgml -->

<sect1 id="pgstattuple" xreflabel="pgstattuple">
 <title>pgstattuple</title>

 <indexterm zone="pgstattuple">
  <primary>pgstattuple</primary>
 </indexterm>

 <para>
  <filename>pgstattuple</filename>模块提供多种函数来获得元组层的统计信息。
 </para>

 <sect2>
  <title>函数</title>

  <variablelist>
   <varlistentry>
   <term>
     <function>pgstattuple(regclass) 返回 record</>
   <indexterm>
    <primary>pgstattuple</primary>
   </indexterm>    
    </term>

    <listitem>
     <para>
      <function>pgstattuple</function>返回一个关系的物理长度、<quote>死亡</>元组的百分比以及其他信息。这可以帮助用户决定是否需要清理。参数是目标关系的名称（可以有选择地用模式限定）或者 OID。例如：
<programlisting>
test=> SELECT * FROM pgstattuple('pg_catalog.pg_proc');
-[ RECORD 1 ]------+-------
table_len          | 458752
tuple_count        | 1470
tuple_len          | 438896
tuple_percent      | 95.67
dead_tuple_count   | 11
dead_tuple_len     | 3157
dead_tuple_percent | 0.69
free_space         | 8932
free_percent       | 1.95
</programlisting>
     <xref linkend="pgstattuple-columns">中描述了输出列。
    </para>

    <table id="pgstattuple-columns">
     <title><function>pgstattuple</function> 输出列</title>
     <tgroup cols="3">
      <thead>
       <row>
        <entry>列</entry>
        <entry>类型</entry>
        <entry>描述</entry>
       </row>
      </thead>

      <tbody>
       <row>
        <entry><structfield>table_len</structfield></entry>
        <entry><type>bigint</type></entry>
        <entry>物理关系长度，以字节计</entry>
       </row>
       <row>
        <entry><structfield>tuple_count</structfield></entry>
        <entry><type>bigint</type></entry>
        <entry>存活元组的数量</entry>
       </row>
       <row>
        <entry><structfield>tuple_len</structfield></entry>
        <entry><type>bigint</type></entry>
        <entry>存活元组的总长度，以字节计</entry>
       </row>
       <row>
        <entry><structfield>tuple_percent</structfield></entry>
        <entry><type>float8</type></entry>
        <entry>存活元组的百分比</entry>
       </row>
       <row>
        <entry><structfield>dead_tuple_count</structfield></entry>
        <entry><type>bigint</type></entry>
        <entry>死亡元组的数量</entry>
       </row>
       <row>
        <entry><structfield>dead_tuple_len</structfield></entry>
        <entry><type>bigint</type></entry>
        <entry>死亡元组的总长度，以字节计</entry>
       </row>
       <row>
        <entry><structfield>dead_tuple_percent</structfield></entry>
        <entry><type>float8</type></entry>
        <entry>死亡元组的百分比</entry>
       </row>
       <row>
        <entry><structfield>free_space</structfield></entry>
        <entry><type>bigint</type></entry>
        <entry>空闲空间总量，以字节计</entry>
       </row>
       <row>
        <entry><structfield>free_percent</structfield></entry>
        <entry><type>float8</type></entry>
        <entry>空闲空间的百分比</entry>
       </row>

      </tbody>
     </tgroup>
    </table>

    <para>
     <function>pgstattuple</function>只要求在关系上的一个读锁。因此结果不能反映一个即时快照，并发更新将影响结果。
    </para>

    <para>
     如果<function>HeapTupleSatisfiesDirty</>返回假，<function>pgstattuple</function>就判定一个元组是<quote>死亡的</>。
    </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term>
     <function>pgstattuple(text) 返回 record</>
    </term>

    <listitem>
     <para>
      与<function>pgstattuple(regclass)</function>相同，
      只不过通过  TEXT 指定目标关系。这个函数只是为了向后
      兼容而保留，在未来的发布中将会被废除。
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term>
    <indexterm>
     <primary>pgstatindex</primary>
    </indexterm>
     <function>pgstatindex(regclass) 返回 record</>
    </term>

    <listitem>
     <para>
      <function>pgstatindex</function>返回一个记录显示有关一个 B-树 索引的信息。例如：
<programlisting>
test=> SELECT * FROM pgstatindex('pg_cast_oid_index');
-[ RECORD 1 ]------+------
version            | 2
tree_level         | 0
index_size         | 8192
root_block_no      | 1
internal_pages     | 0
leaf_pages         | 1
empty_pages        | 0
deleted_pages      | 0
avg_leaf_density   | 50.27
leaf_fragmentation | 0
</programlisting>
     </para>

    <para>
     输出列是：

    <informaltable>
     <tgroup cols="3">
      <thead>
       <row>
        <entry>列</entry>
        <entry>类型</entry>
        <entry>描述</entry>
       </row>
      </thead>

      <tbody>
       <row>
        <entry><structfield>version</structfield></entry>
        <entry><type>integer</type></entry>
        <entry>B-树 版本号</entry>
       </row>

       <row>
        <entry><structfield>tree_level</structfield></entry>
        <entry><type>integer</type></entry>
        <entry>根页的树层次</entry>
       </row>

       <row>
        <entry><structfield>index_size</structfield></entry>
        <entry><type>bigint</type></entry>
        <entry>索引中页面总数</entry>
       </row>

       <row>
        <entry><structfield>root_block_no</structfield></entry>
        <entry><type>bigint</type></entry>
        <entry>根块的位置</entry>
       </row>

       <row>
        <entry><structfield>internal_pages</structfield></entry>
        <entry><type>bigint</type></entry>
        <entry><quote>内部</>（上层）页面的数量</entry>
       </row>

       <row>
        <entry><structfield>leaf_pages</structfield></entry>
        <entry><type>bigint</type></entry>
        <entry>叶子页的数量</entry>
       </row>

       <row>
        <entry><structfield>empty_pages</structfield></entry>
        <entry><type>bigint</type></entry>
        <entry>空页的数量</entry>
       </row>

       <row>
        <entry><structfield>deleted_pages</structfield></entry>
        <entry><type>bigint</type></entry>
        <entry>删除页的数量</entry>
       </row>

       <row>
        <entry><structfield>avg_leaf_density</structfield></entry>
        <entry><type>float8</type></entry>
        <entry>叶子页的平均密度</entry>
       </row>

       <row>
        <entry><structfield>leaf_fragmentation</structfield></entry>
        <entry><type>float8</type></entry>
        <entry>叶子页碎片</entry>
       </row>

      </tbody>
     </tgroup>
    </informaltable>
    </para>

    <para>
     对于<function>pgstattuple</>，结果是一页一页累计的并且不要期望结果会表示整个索引的一个即时快照。
    </para>
    </listitem>
   </varlistentry>
   
   <varlistentry>
   <term>
     <function>pgstatindex(text) returns record</>
    </term>

    <listitem>
     <para>
      与<function>pgstatindex(regclass)</function>相同，
      只不过通过  TEXT 指定目标索引。这个函数只是为了向后
      兼容而保留，在未来的发布中将会被废除。
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term>
     <indexterm>
      <primary>pgstatginindex</primary>
     </indexterm>
     <function>pgstatginindex(regclass) 返回 record</>
    </term>

    <listitem>
     <para>
      <function>pgstatginindex</function>返回一个记录显示有关一个 GIN 索引的信息。例如：
<programlisting>
test=> SELECT * FROM pgstatginindex('test_gin_index');
-[ RECORD 1 ]--+--
version        | 1
pending_pages  | 0
pending_tuples | 0
</programlisting>
     </para>

    <para>
     输出列是：

    <informaltable>
     <tgroup cols="3">
      <thead>
       <row>
        <entry>列</entry>
        <entry>类型</entry>
        <entry>描述</entry>
       </row>
      </thead>

      <tbody>
       <row>
        <entry><structfield>version</structfield></entry>
        <entry><type>integer</type></entry>
        <entry>GIN 版本号</entry>
       </row>

       <row>
        <entry><structfield>pending_pages</structfield></entry>
        <entry><type>integer</type></entry>
        <entry>待处理列表中的页面数</entry>
       </row>

       <row>
        <entry><structfield>pending_tuples</structfield></entry>
        <entry><type>bigint</type></entry>
        <entry>待处理列表中的元组数</entry>
       </row>

      </tbody>
     </tgroup>
    </informaltable>
    </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term>
     <indexterm>
      <primary>pg_relpages</primary>
     </indexterm>
     <function>pg_relpages(regclass) 返回 bigint</>
    </term>

    <listitem>
     <para>
      <function>pg_relpages</function>返回关系中的页面数。
     </para>
    </listitem>
   </varlistentry>
   
   <varlistentry>
    <term>
     <function>pg_relpages(text) returns bigint</>
    </term>

    <listitem>
     <para>
      与<function>pg_relpages(regclass)</function>相同，
      只不过通过  TEXT 指定目标关系。这个函数只是为了向后
      兼容而保留，在未来的发布中将会被废除。
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </sect2>

 <sect2>
  <title>作者</title>

  <para>
   Tatsuo Ishii 和 Satoshi Nagayasu
  </para>
 </sect2>

</sect1>
