<!-- doc/src/sgml/oid2name.sgml -->

<refentry id="oid2name">
 <indexterm zone="oid2name">
  <primary>oid2name</primary>
 </indexterm>
 
 <refmeta>
  <refentrytitle>oid2name</refentrytitle>
  <manvolnum>1</manvolnum>
  <refmiscinfo>Application</refmiscinfo>
 </refmeta>

 <refnamediv>
  <refname>oid2name</refname>
  <refpurpose>解析一个<productname>PostgreSQL</productname>数据目录中的 OID 和文件结点。</refpurpose>
 </refnamediv>

 <refsynopsisdiv>
  <cmdsynopsis>
   <command>oid2name</command>
   <arg rep="repeat"><replaceable>option</replaceable></arg>
  </cmdsynopsis>
 </refsynopsisdiv>

 <refsect1>
  <title>描述</title>

 <para>
  <application>oid2name</>是一个帮助管理员检查被 PostgreSQL 使用的文件结构的工具程序。要使用它，你需要熟悉数据库文件结构（见<xref linkend="storage">）。
 </para>

 <note>
  <para>
   名称<quote>oid2name</>是有历史原因的，它确实有些误导性，因为在你使用它的大部分时间里，你实际关心的是表的文件结点编号（在数据目录中是可见的文件名）。请确定你理解表 OID 和表文件结点之间的区别！
  </para>
 </note>

  <para>
   <application>oid2name</application>连接到一个目标数据库并且抽取 OID、文件节点或者表名信息。你也可以让它显示数据库 OID 或表空间 OID。
  </para>

 </refsect1>

 <refsect1>
  <title>选项</title>

  <para>
   <application>oid2name</application>接受下列命令行参数：

   <variablelist>

    <varlistentry>
     <term><option>-f</option> <replaceable>filenode</></term>
     <listitem><para>显示具有文件结点<replaceable>filenode</>的表的信息</para></listitem>
    </varlistentry>

    <varlistentry>
     <term><option>-i</option></term>
     <listitem><para>在列举中包括索引和序列</para></listitem>
    </varlistentry>

    <varlistentry>
     <term><option>-o</option> <replaceable>oid</></term>
     <listitem><para>显示具有 OID <replaceable>oid</>的表的信息</para></listitem>
    </varlistentry>

    <varlistentry>
     <term><option>-q</option></term>
     <listitem><para>忽略头部（用于脚本）</para></listitem>
    </varlistentry>

    <varlistentry>
     <term><option>-s</option></term>
     <listitem><para>显示表空间 OID</para></listitem>
    </varlistentry>

    <varlistentry>
     <term><option>-S</option></term>
     <listitem><para>包括系统对象（位于
      <option>information_schema</option>、<option>pg_toast</option>和<option>pg_catalog</option>模式中）
     </para></listitem>
    </varlistentry>

    <varlistentry>
     <term><option>-t</option> <replaceable>tablename_pattern</></term>
     <listitem><para>显示匹配<replaceable>tablename_pattern</>的表的信息</para></listitem>
    </varlistentry>

    <varlistentry>
     <term><option>-V</></term>
     <term><option>--version</></term>
     <listitem>
      <para>
       打印<application>oid2name</application>版本并退出。
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><option>-x</option></term>
     <listitem><para>为要显示的每个对象显示更多信息：表空间名、模式名以及 OID
     </para></listitem>
    </varlistentry>

    <varlistentry>
     <term><option>-?</></term>
     <term><option>--help</></term>
     <listitem>
      <para>
       显示有关<application>oid2name</application>命令行参数的帮助并退出。
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>

  <para>
   <application>oid2name</application>也接受下列用于连接参数的命令行参数：

   <variablelist>
    <varlistentry>
     <term><option>-d</option> <replaceable>database</></term>
     <listitem><para>要连接的数据库</para></listitem>
    </varlistentry>

    <varlistentry>
     <term><option>-H</option> <replaceable>host</></term>
     <listitem><para>数据库服务器的主机</para></listitem>
    </varlistentry>

    <varlistentry>
     <term><option>-p</option> <replaceable>port</></term>
     <listitem><para>数据库服务器的端口</para></listitem>
    </varlistentry>

    <varlistentry>
     <term><option>-U</option> <replaceable>username</></term>
     <listitem><para>用于连接的用户名</para></listitem>
    </varlistentry>

    <varlistentry>
     <term><option>-P</option> <replaceable>password</></term>
     <listitem><para>口令（弃用 &mdash; 把口令放在命令行上是安全灾难）</para></listitem>
    </varlistentry>

   </variablelist>
  </para>

  <para>
   要显示特定表，通过使用<option>-o</>、<option>-f</>和<option>-t</>选择要显示哪个表。
   <option>-o</>采用一个 OID，
   <option>-f</>采用一个文件节点，
   而<option>-t</>采用一个表名（实际上，它是一个<literal>LIKE</>模式，因此你可以用诸如<literal>foo%</>之类的东西）。
   这些选项你想用多少就用多少，最后的列举将包括所有匹配任意一个这些选项的对象。但是注意这些选项只能显示由<option>-d</>给定的数据库中的对象。
  </para>

  <para>
   如果你没有给出任何<option>-o</>、<option>-f</>或者<option>-t</>，但是给出了<option>-d</>，它将列出由<option>-d</>指定的数据库中的所有表。在这种模式下，<option>-S</>和<option>-i</>选项控制什么会被列出。
  </para>

  <para>
   如果你也没有给出<option>-d</>，它将显示一个数据库 OID 的列表。你也可以给出<option>-s</>来得到一个表空间列表。
  </para>
 </refsect1>

 <refsect1>
  <title>注解</title>

  <para>
   <application>oid2name</>要求一个运行着的数据库服务器并且其系统目录没有损坏。因此它对于数据库损坏的情况用处有限。
  </para>
 </refsect1>

 <refsect1>
  <title>例子</title>

<screen>
$ # 在这个数据库服务器中到底有什么？
$ oid2name
All databases:
    Oid  Database Name  Tablespace
----------------------------------
  17228       alvherre  pg_default
  17255     regression  pg_default
  17227      template0  pg_default
      1      template1  pg_default

$ oid2name -s
All tablespaces:
     Oid  Tablespace Name
-------------------------
    1663       pg_default
    1664        pg_global
  155151         fastdisk
  155152          bigdisk

$ # OK，让我们看看数据库 alvherre 里面
$ cd $PGDATA/base/17228

$ # 得到默认表空间中前十个数据库对象，按尺寸排序
$ ls -lS * | head -10
-rw-------  1 alvherre alvherre 136536064 sep 14 09:51 155173
-rw-------  1 alvherre alvherre  17965056 sep 14 09:51 1155291
-rw-------  1 alvherre alvherre   1204224 sep 14 09:51 16717
-rw-------  1 alvherre alvherre    581632 sep  6 17:51 1255
-rw-------  1 alvherre alvherre    237568 sep 14 09:50 16674
-rw-------  1 alvherre alvherre    212992 sep 14 09:51 1249
-rw-------  1 alvherre alvherre    204800 sep 14 09:51 16684
-rw-------  1 alvherre alvherre    196608 sep 14 09:50 16700
-rw-------  1 alvherre alvherre    163840 sep 14 09:50 16699
-rw-------  1 alvherre alvherre    122880 sep  6 17:51 16751

$ # 我好奇文件 155173 是 ...
$ oid2name -d alvherre -f 155173
From database "alvherre":
  Filenode  Table Name
----------------------
    155173    accounts

$ # 你可以请求多于一个对象
$ oid2name -d alvherre -f 155173 -f 1155291
From database "alvherre":
  Filenode     Table Name
-------------------------
    155173       accounts
   1155291  accounts_pkey

$ # 你可以混合选项，并且用 -x 得到更多细节
$ oid2name -d alvherre -t accounts -f 1155291 -x
From database "alvherre":
  Filenode     Table Name      Oid  Schema  Tablespace
------------------------------------------------------
    155173       accounts   155173  public  pg_default
   1155291  accounts_pkey  1155291  public  pg_default

$ # 为每个数据库对象显示磁盘空间
$ du [0-9]* |
> while read SIZE FILENODE
> do
>   echo "$SIZE       `oid2name -q -d alvherre -i -f $FILENODE`"
> done
16            1155287  branches_pkey
16            1155289  tellers_pkey
17561            1155291  accounts_pkey
...

$ # 相同，但是按尺寸排序
$ du [0-9]* | sort -rn | while read SIZE FN
> do
>   echo "$SIZE   `oid2name -q -d alvherre -f $FN`"
> done
133466             155173    accounts
17561            1155291  accounts_pkey
1177              16717  pg_proc_proname_args_nsp_index
...

$ # 如果你想看看表空间里有什么，使用 pg_tblspc 目录
$ cd $PGDATA/pg_tblspc
$ oid2name -s
All tablespaces:
     Oid  Tablespace Name
-------------------------
    1663       pg_default
    1664        pg_global
  155151         fastdisk
  155152          bigdisk

$ # 哪些数据库在表空间 "fastdisk" 中有对象？
$ ls -d 155151/*
155151/17228/  155151/PG_VERSION

$ # 噢，什么是数据库 17228 ？
$ oid2name
All databases:
    Oid  Database Name  Tablespace
----------------------------------
  17228       alvherre  pg_default
  17255     regression  pg_default
  17227      template0  pg_default
      1      template1  pg_default

$ # 让我们看这个数据库在该表空间中有哪些对象。
$ cd 155151/17228
$ ls -l
total 0
-rw-------  1 postgres postgres 0 sep 13 23:20 155156

$ # OK，这是个很小的表，但是哪一个是它？
$ oid2name -d alvherre -f 155156
From database "alvherre":
  Filenode  Table Name
----------------------
    155156         foo
</screen>
 </refsect1>

 <refsect1>
  <title>作者</title>

  <para>
   B. Palmer <email>bpalmer@crimelabs.net</email>
  </para>
 </refsect1>

</refentry>
