<!-- doc/src/sgml/docguide.sgml -->

<appendix id="docguide">
 <!-- 
 <title>Documentation</title> 
 -->
 <title>文档</title>

 
<para>
<!-- 
  <productname>PostgreSQL</productname> has four primary documentation
  formats:
 -->
 <productname>PostgreSQL</productname>有四种主要的文档格式：
  <itemizedlist>
   <listitem>
<!--
    <para>
     Plain text, for pre-installation information
    </para>
-->
<para>
纯文本，用于安装前信息的纯文本格式。
</para>
   </listitem>
   <listitem>
    <!--
<para>
     <acronym>HTML</acronym>, for on-line browsing and reference
    </para>
-->
<para>
<acronym>HTML</acronym>，用于在线浏览和参考。
</para>
   </listitem>
   <listitem>
    <!--
<para>
     PDF or PostScript, for printing
    </para>
-->
<para>
PDF或PostScript，用于打印。
</para>
   </listitem>
   <listitem>
    <!--
<para>
     man pages, for quick reference.
    </para>
-->
<para>
手册页，用于快速参考。
</para>
   </listitem>
  </itemizedlist>

<!-- 
  Additionally, a number of plain-text <filename>README</filename> files can
  be found throughout the <productname>PostgreSQL</productname> source tree,
  documenting various implementation issues. 
-->
另外，在<productname>PostgreSQL</productname>源码树里面还有许多<filename>README</filename>
风格的文件，它们记录了许多与实现有关的东西。
 </para>

 <!--
<para>
  <acronym>HTML</acronym> documentation and man pages are part of a
  standard distribution and are installed by default.  PDF and
  PostScript format documentation is available separately for
  download.
 </para>
-->
<para>
<acronym>HTML</acronym>文档和手册页(man pages)是标准版本的一部分并且缺省时安装。
PDF和PostScript格式的文档可以独立地下载。
</para>

 <sect1 id="docguide-docbook">
  <title>DocBook</title>
  <!--
<para>
   The documentation sources are written in
   <firstterm>DocBook</firstterm>, which is a markup language
   superficially similar to <acronym>HTML</acronym>.  Both of these
   languages are applications of the <firstterm>Standard Generalized
   Markup Language</firstterm>, <acronym>SGML</acronym>, which is
   essentially a language for describing other languages.  In what
   follows, the terms DocBook and <acronym>SGML</acronym> are both
   used, but technically they are not interchangeable.
  </para>
-->
<para>
文档源文件是用<firstterm>DocBook</firstterm>写的，它是一种标记语言，
类似<acronym>HTML</acronym>。这两种语言都是<acronym>SGML</acronym>
(<firstterm>标准通用标记语言</firstterm>)的应用，它实际上是描述另外一种语言的语言。
也就是说，术语上 DocBook 和<acronym>SGML</acronym>都可以用，而技术上是不能互换的。
</para>

  <!--
<para>
  <productname>DocBook</productname> allows an author to specify the
   structure and content of a technical document without worrying
   about presentation details.  A document style defines how that
   content is rendered into one of several final forms.  DocBook is
   maintained by the <ulink url="http://www.oasis-open.org">
   OASIS group</ulink>.  The <ulink url="http://www.oasis-open.org/docbook/">
   official DocBook site</ulink> has good introductory and reference documentation and
   a complete O'Reilly book for your online reading pleasure.  The
   <ulink url="http://newbiedoc.sourceforge.net/metadoc/docbook-guide.html">
   NewbieDoc Docbook Guide</ulink> is very helpful for beginners.
   The <ulink url="http://www.freebsd.org/docproj/docproj.html">
   FreeBSD Documentation Project</ulink> also uses DocBook and has some good
   information, including a number of style guidelines that might be
   worth considering.
  </para>
-->
<para>
<productname>DocBook</productname>允许作者不用考虑表现细节地描述一份技术文档的结构和内容。
一份文档风格定义该内容如何呈现为几种最终形式之一。DocBook 是由
<ulink url="http://www.oasis-open.org">OASIS 工作组</ulink>组维护的。
<ulink url="http://www.oasis-open.org/docbook/">DocBook官方网站</ulink>
有很好的介绍和参考手册以及一整本 O'Reilly 的书可供你在线阅读。
<ulink url="http://newbiedoc.sourceforge.net/metadoc/docbook-guide.html">
NewbieDoc Docbook Guide</ulink>非常适合初学者阅读。
<ulink url="http://www.freebsd.org/docproj/docproj.html">
FreeBSD Documentation Project</ulink>也使用 DocBook 并且有一些很好的信息，
包括一些很值得考虑的风格向导。
</para>
 </sect1>


 <sect1 id="docguide-toolsets">
  <!-- 
  <title>Tool Sets</title> 
  -->
  <title>工具集</title>

  
<para>
<!-- 
   The following tools are used to process the documentation.  Some
   might be optional, as noted.
-->
下面的工具用于处理此文档。有些可能是可选的，在文中标注了。
   <variablelist>
    <varlistentry>
     <term><ulink url="http://www.oasis-open.org/docbook/">DocBook DTD</ulink></term>
     <listitem>
<!--
      <para>
       This is the definition of DocBook itself.  We currently use
       version 4.2; you cannot use later or earlier versions.  You
       need the <acronym>SGML</acronym> variant of the DocBook DTD,
       but to build man pages you also need the <acronym>XML</acronym>
       variant of the same version.
      </para>
-->
<para>
这是 DocBook 本身的定义。目前使用版本 4.2 ；你不能使用更新或者早些的版本。
你需要<acronym>SGML</acronym>版本的DocBook DTD，但是建立手册页也需要
<acronym>XML</acronym>版本的相同版本。
</para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><ulink url="http://www.oasis-open.org/cover/ISOEnts.zip">ISO 8879 character entities</ulink></term>
     <listitem>
      <!--
<para>
       These are required by DocBook but are distributed separately
       because they are maintained by ISO.
      </para>
-->
<para>
这是 DocBook 需要的，但是独立发布，因为它们是由 ISO 维护的。
</para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><ulink url="http://wiki.docbook.org/DocBookDssslStylesheetDocs">DocBook DSSSL Stylesheets</ulink></term>
     <listitem>
      <!--
<para>
       These contain the processing instructions for converting the
       DocBook sources to other formats, such as
       <acronym>HTML</acronym>.
      </para>
-->
<para>
这些东西包含把 DocBook 源代码转换成其它格式(比如<acronym>HTML</acronym>)的处理指令。
</para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><ulink url="http://wiki.docbook.org/DocBookXslStylesheets">DocBook XSL Stylesheets</ulink></term>
     <listitem>
      <!--
<para>
       This is another stylesheet for converting DocBook to other
       formats.  We currently use this to produce man pages and
       optionally HTMLHelp.  You can also use this toolchain to
       produce HTML or PDF output, but official PostgreSQL releases
       use the DSSSL stylesheets for that.
      </para>
-->
<para>
这是另外一个转化DocBook到其他格式的样式表。我们当前使用它来生成手册页和可选的HTML帮助。
你也可以使用这个工具生成HTML或PDF输出，但是官方的PostgresSQL发布使用DSSSL stylesheets。
</para>

      <!--
<para>
       The minimum required version is currently 1.74.0.
      </para>
-->
<para>
当前所需的最小版本是1.74.0。
</para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><ulink url="http://openjade.sourceforge.net">OpenJade</ulink></term>
     <listitem>
      <!--
<para>
       This is the base package of <acronym>SGML</acronym> processing.
       It contains an <acronym>SGML</acronym> parser, a
       <acronym>DSSSL</acronym> processor (that is, a program to
       convert <acronym>SGML</acronym> to other formats using
       <acronym>DSSSL</acronym> stylesheets), as well as a number of
       related tools.  <productname>Jade</productname> is now being
       maintained by the OpenJade group, no longer by James Clark.
      </para>
-->
<para>
这是处理<acronym>SGML</acronym>的基本包。它包含一个<acronym>SGML</acronym>分析器，
一个<acronym>DSSSL</acronym>处理器(也就是一个用<acronym>DSSSL</acronym>风格表把
<acronym>SGML</acronym>转换成其它格式的程序)，还有一系列相关工具。现在<productname>Jade</productname>
由 OpenJade 组维护，而不再是 James Clark 了。
</para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><ulink url="http://xmlsoft.org/XSLT/">Libxslt</ulink> for <command>xsltproc</command></term>
     <listitem>
      <!--
<para>
       This is the processing tool to use with the XSLT stylesheets
       (like <command>jade</command> is the processing tool for DSSSL
       stylesheets).
      </para>
-->
<para>
这是和XSLT stylesheets一起使用的处理工具（类似<command>jade</command>，是处理DSSSL stylesheets的工具）。
</para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><ulink url="http://jadetex.sourceforge.net">JadeTeX</ulink></term>
     <listitem>
      <!--
<para>
       If you want to, you can also install
       <productname>JadeTeX</productname> to use
       <productname>TeX</productname> as a formatting backend for
       <productname>Jade</productname>.
       <application>JadeTeX</application> can create PostScript or
       <acronym>PDF</acronym> files (the latter with bookmarks).
      </para>
-->
<para>
如果你需要，你还可以安装<productname>JadeTeX</productname>把<productname>TeX</productname>
用做<productname>Jade</productname>的一种格式化后端。<application>JadeTeX</application>
可以生成 Postscript 或者<acronym>PDF</acronym>文件(后者带书签)。
</para>

      <!--
<para>
       However, the output from <application>JadeTeX</application> is
       inferior to what you get from the <acronym>RTF</acronym>
       backend.  Particular problem areas are tables and various
       artifacts of vertical and horizontal spacing.  Also, there is
       no opportunity to manually polish the results.
      </para>
-->
<para>
不过，<application>JadeTeX</application>的输出比<acronym>RTF</acronym>后端稍差一点的打印输出。
主要是表的格式和各种竖直和水平的空白效果。而且，你还没有机会手工润色输出结果。
</para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>

  <!--
<para>
   We have documented experience with several installation methods for
   the various tools that are needed to process the documentation.
   These will be described below.  There might be some other packaged
   distributions for these tools. Please report package status to the
   documentation mailing list, and we will include that information
   here.
  </para>
-->
<para>
我们已经在文档中记录了几种安装处理此文档所需的各种工具的方法。它们在下面描述。
也可能有其它包发布这些工具。请向 doc 邮件列表报告那些包的状态，就会在这里包括那些信息。
</para>

  <sect2>
   <!-- 
   <title><productname>Linux</productname> <acronym>RPM</acronym> Installation</title> 
   -->
   <title><productname>Linux</productname> <acronym>RPM</acronym> 安装</title>

   <!--
<para>
    Most vendors provide a complete RPM set for DocBook processing in
    their distribution.  Look for an <quote>SGML</quote> option while
    installing, or the following packages:
    <filename>sgml-common</filename>, <filename>docbook</filename>,
    <filename>stylesheets</filename>, <filename>openjade</filename>
    (or <filename>jade</filename>).  You may also need <filename>sgml-tools</filename>
    and either <filename>xsltproc</filename> or <filename>libxslt</>.  If your
    distributor does not provide these then you should be able to make
    use of the packages from some other, reasonably compatible vendor.
   </para>
-->
<para>
许多供应商在它们的版本里提供了一整套处理 DocBook 的 RPM 包，请检查一下<quote>SGML</quote>选项，
或者下列包之一：<filename>sgml-common</filename>, <filename>docbook</filename>,
<filename>stylesheets</filename>, <filename>openjade</filename>(或<filename>jade</filename>)。
可能还需要<filename>sgml-tools</filename>和<filename>xsltproc</filename>或<filename>libxslt</>。
如果你的版本没有提供这些东西，那么你应该可以使用来自一些其它合理兼容的发行商的包。
</para>
  </sect2>

  <sect2>
   <!-- 
   <title>FreeBSD Installation</title> 
   -->
   <title>FreeBSD 安装</title>

   
<para>
<!-- 
   The FreeBSD Documentation Project is itself a heavy user of
    DocBook, so it comes as no surprise that there is a full set of
    <quote>ports</quote> of the documentation tools available on
    FreeBSD.  The following ports need to be installed to build the
    documentation on FreeBSD.
-->
FreeBSD 文档计划本身就非常频繁地使用 DocBook ，
所以在 FreeBSD 里有一整套可以用的文档工具的<quote>ports</quote>就一点也不奇怪了。
要在 FreeBSD 里制作文档，你必须安装下面的 port ：
    <itemizedlist>
     <listitem>
      <para><filename>textproc/sp</filename></para>
     </listitem>
     <listitem>
<para><filename>textproc/openjade</filename></para>
     </listitem>
     <listitem>
<para><filename>textproc/iso8879</filename></para>
     </listitem>
     <listitem>
<para><filename>textproc/dsssl-docbook-modular</filename></para>
     </listitem>
     <listitem>
<para><filename>textproc/docbook-420</filename></para>
     </listitem>
    </itemizedlist>
   </para>

   <!--
<para>
    A number of things from <filename>/usr/ports/print</filename>
    (<filename>tex</filename>, <filename>jadetex</filename>) might
    also be of interest.
   </para>
-->
<para>
很多东西来自<filename>/usr/ports/print</filename>(<filename>tex</filename>，
 <filename>jadetex</filename>) 你也可能会安装。
</para>

   <!--
<para>
    It's possible that the ports do not update the main catalog file
    in <filename>/usr/local/share/sgml/catalog.ports</filename> or that the
    order isn't proper.  Be sure to have the following lines in the beginning
    of the file:
<programlisting>
CATALOG "openjade/catalog"
CATALOG "iso8879/catalog"
CATALOG "docbook/dsssl/modular/catalog"
CATALOG "docbook/4.2/catalog"
</programlisting>
    If you do not want to edit the file you can also set the
    environment variable <envar>SGML_CATALOG_FILES</envar> to a
    colon-separated list of catalog files (such as the one above).
   </para>
-->
<para>
这些 port 很可能不会更新位于<filename>/usr/local/share/sgml/catalog.ports</filename>
的主目录文件或顺序不合适。确保文件的开头有下面这几行：
<programlisting>
CATALOG "openjade/catalog"
CATALOG "iso8879/catalog"
CATALOG "docbook/dsssl/modular/catalog"
CATALOG "docbook/4.2/catalog"
</programlisting>
如果你不想编辑文件，还可以把环境变量<envar>SGML_CATALOG_FILES</envar>
设置为一个冒号分隔的目录文件列表(比如上面那样的)。
</para>

   <!--
<para>
    More information about the FreeBSD documentation tools can be
    found in the <ulink url="http://www.freebsd.org/doc/en_US.ISO8859-1/books/fdp-primer/tools.html">
    FreeBSD Documentation Project's instructions</ulink>.
   </para>
-->
<para>
你可以在<ulink url="http://www.freebsd.org/doc/en_US.ISO8859-1/books/fdp-primer/tools.html">
FreeBSD Documentation Project's instructions</ulink>里找到更多有关 FreeBSD 文档工具的信息。
</para>
  </sect2>

  <sect2>
   <!-- 
   <title>Debian Packages</title> 
   -->
   <title>Debian 包</title>

   <!--
<para>
    There is a full set of packages of the documentation tools
    available for <productname>Debian GNU/Linux</productname>.
    To install, simply use:
<programlisting>
apt-get install docbook docbook-dsssl docbook-xsl openjade1.3 opensp xsltproc
</programlisting>
   </para>
-->
<para>
<productname>Debian GNU/Linux</productname>里面也有一整套可以用的文档工具的包。
安装时，只需要用下面的命令：
<programlisting>
apt-get install docbook docbook-dsssl docbook-xsl openjade1.3 opensp xsltproc
</programlisting>
</para>
  </sect2>

  <sect2>
   <title>OS X</title>

   <!--
<para>
    If you use MacPorts, the following will get you set up:
<programlisting>
sudo port install docbook-dsssl docbook-sgml-4.2 docbook-xml-4.2 docbook-xsl libxslt openjade opensp
</programlisting>
   </para>
-->
<para>
如果你使用MacPorts，你将使用以下命令来设置：
<programlisting>
sudo port install docbook-dsssl docbook-sgml-4.2 docbook-xml-4.2 docbook-xsl libxslt openjade opensp
</programlisting>
</para>
  </sect2>

  <sect2>
   <!-- 
   <title>Manual Installation from Source</title> 
   -->
   <title>从源程序手工安装</title>

   <!--
<para>
    The manual installation process of the DocBook tools is somewhat
    complex, so if you have pre-built packages available, use them.
    We describe here only a standard setup, with reasonably standard
    installation paths, and no <quote>fancy</quote> features.  For
    details, you should study the documentation of the respective
    package, and read <acronym>SGML</acronym> introductory material.
   </para>
-->
<para>
DocBook 工具的手工安装过程有些复杂，因此如果你有预先制作好的包，最好还是用它们。
在这里只描述一个标准的安装，而且安装到标准的路径里，并且没有<quote>神奇</quote>的特性。
相关的更多的细节，你应该学习相关包的文档，并且阅读<acronym>SGML</acronym>介绍性材料。
</para>

   <sect3>
    <!-- 
<title>Installing OpenJade</title> 
-->
<title>安装 OpenJade</title>

    <procedure>
      <step>
<para>
<!-- 
        The installation of OpenJade offers a GNU-style
        <literal>./configure; make; make install</literal> build
        process.  Details can be found in the OpenJade source
        distribution. In a nutshell: 
-->
OpenJade 提供了一个 GNU 风格的<literal>./configure; make; make install</literal>制作过程。
你可以在 OpenJade 源程序包里找到详细内容。在 shell 里：
<synopsis>
./configure --enable-default-catalog=/usr/local/share/sgml/catalog
make
make install
</synopsis>
<!-- 
        Be sure to remember where you put the <quote>default
        catalog</quote>; you will need it below.  You can also leave
        it off, but then you will have to set the environment variable
        <envar>SGML_CATALOG_FILES</envar> to point to the file
        whenever you use <application>jade</application> later on.
        (This method is also an option if OpenJade is already
        installed and you want to install the rest of the toolchain
        locally.) 
-->
确保你记住了<quote>default catalog</quote>的位置，后面还会需要它。也可以不用注明这句话，
但是稍后使用<application>jade</application>的时候，你就不得不把环境变量<envar>SGML_CATALOG_FILES</envar>
设置为指向该文件的位置。如果 OpenJade 已经安装，并且你想在本地安装其它工具的时候，这也是个可选的方法。
       </para>

       <note>
<para>
       <!-- 
   Some users have reported encountering a segmentation fault using
        OpenJade 1.4devel to build the PDFs, with a message like: 
-->
一些用户已经报告了使用OpenJade 1.4devel建立PDF时的分段错误，消息如下：
<screen>
openjade:./stylesheet.dsl:664:2:E: flow object not accepted by port; only display flow objects accepted
make: *** [postgres-A4.tex-pdf] Segmentation fault
</screen>
        <!-- 
Downgrading to OpenJade 1.3 should get rid of this error. 
-->
使用低级的OpenJade 1.3应该鞥解决这个错误。
       </para>
       </note>

      </step>

      <step id="doc-openjade-install">
       <!--
<para>
        Additionally, you should install the files
        <filename>dsssl.dtd</filename>, <filename>fot.dtd</filename>,
        <filename>style-sheet.dtd</filename>, and
        <filename>catalog</filename> from the
        <filename>dsssl</filename> directory somewhere, perhaps into
        <filename>/usr/local/share/sgml/dsssl</filename>.  It's
        probably easiest to copy the entire directory:
<synopsis>
cp -R dsssl /usr/local/share/sgml
</synopsis>
       </para>
-->
<para>
另外，你应该从<filename>dsssl</filename>目录里把<filename>dsssl.dtd</filename>, 
<filename>fot.dtd</filename>, <filename>style-sheet.dtd</filename>, <filename>catalog</filename>
文件安装上，可能是安装到<filename>/usr/local/share/sgml/dsssl</filename>吧。
最简单的可能就是复制整个目录：
<synopsis>
cp -R dsssl /usr/local/share/sgml
</synopsis>
</para>
      </step>

      <step>
       <!--
<para>
        Finally, create the file
        <filename>/usr/local/share/sgml/catalog</filename> and add
        this line to it:
<programlisting>
CATALOG "dsssl/catalog"
</programlisting>
        (This is a relative path reference to the file installed in
        <xref linkend="doc-openjade-install">.  Be sure to adjust it
        if you chose your installation layout differently.)
       </para>
-->
<para>
最后，创建文件<filename>/usr/local/share/sgml/catalog</filename>并且把下面行加入其中：
<programlisting>
CATALOG "dsssl/catalog"
</programlisting>
这是一个相对路径，指向在<xref linkend="doc-openjade-install">里安装的文件。
请根据你自己的安装布局进行调整。
</para>
      </step>
     </procedure>
   </sect3>

   <sect3>
    <!-- 
<title>Installing the <productname>DocBook</productname> <acronym>DTD</acronym> Kit</title> 
-->
<title>安装 <productname>DocBook</productname> <acronym>DTD</acronym> 工具箱</title>

    <procedure>
     <step>
      <!--
<para>
       Obtain the <ulink url="http://www.docbook.org/sgml/4.2/docbook-4.2.zip">
       DocBook V4.2 distribution</ulink>.
      </para>
-->
<para>
获取<ulink url="http://www.docbook.org/sgml/4.2/docbook-4.2.zip">DocBook V4.2 发布</ulink>
</para>
     </step>

     <step>
<para>
       <!-- 
   Create the directory
       <filename>/usr/local/share/sgml/docbook-4.2</filename> and change
       to it. (The exact location is irrelevant, but this one is
       reasonable within the layout we are following here.) 
   -->
   创建目录<filename>/usr/local/share/sgml/docbook-4.2</filename>并且进入该目录。
   实际的位置并非关键，上面这个只是在这里的布局的比较合理的位置。
<screen>
<prompt>$ </prompt><userinput>mkdir /usr/local/share/sgml/docbook-4.2</userinput>
<prompt>$ </prompt><userinput>cd /usr/local/share/sgml/docbook-4.2</userinput>
</screen>
      </para>
     </step>

     <step>
      <!--
<para>
       Unpack the archive:
<screen>
<prompt>$ </prompt><userinput>unzip -a ...../docbook-4.2.zip</userinput>
</screen>
       (The archive will unpack its files into the current directory.)
      </para>
-->
<para>
解包归档：
<screen>
<prompt>$ </prompt><userinput>unzip -a ...../docbook-4.2.zip</userinput>
</screen>
这个归档将把它的文件解开到当前目录。
</para>
     </step>

     <step>
      <!--
<para>
       Edit the file
       <filename>/usr/local/share/sgml/catalog</filename> (or whatever
       you told jade during installation) and put a line like this
       into it:
<programlisting>
CATALOG "docbook-4.2/docbook.cat"
</programlisting>
      </para>
-->
<para>
编辑<filename>/usr/local/share/sgml/catalog</filename>文件(或者任何安装的时候你告诉 jade 的东西)
并且把类似下面的行放到该文件里面：
<programlisting>
CATALOG "docbook-4.2/docbook.cat"
</programlisting>
</para>
     </step>

     <step>
      <!--
<para>
       Download the <ulink url="http://www.oasis-open.org/cover/ISOEnts.zip">
       ISO 8879 character entities archive</ulink>, unpack it, and put the
       files in the same directory you put the DocBook files in:
<screen>
<prompt>$ </prompt><userinput>cd /usr/local/share/sgml/docbook-4.2</userinput>
<prompt>$ </prompt><userinput>unzip ...../ISOEnts.zip</userinput>
</screen>
      </para>
-->
<para>
下载<ulink url="http://www.oasis-open.org/cover/ISOEnts.zip">ISO 8879 字符记录归档</ulink>，
解开它，然后把文件放到 DocBook 文件的同一个目录里。
</para>
     </step>

     <step>
      <!--
<para>
       Run the following command in the directory with the DocBook and ISO files:
<programlisting>
perl -pi -e 's/iso-(.*).gml/ISO\1/g' docbook.cat
</programlisting>
       (This fixes a mixup between the names used in the DocBook
       catalog file and the actual names of the ISO character entity
       files.)
      </para>
-->
<para>
在装有 DocBook 和 ISO 文件的目录里运行下面的命令：
<programlisting>
perl -pi -e 's/iso-(.*).gml/ISO\1/g' docbook.cat
</programlisting>
这个动作修补了一个小毛病，这个毛病把 DocBook 目录文件里使用的名字和 ISO 字符实体文件的名字混淆了。
</para>
     </step>
    </procedure>
   </sect3>

   <sect3>
    <!-- 
<title>Installing the DocBook <acronym>DSSSL</acronym> Style Sheets</title>
-->
<title>安装 DocBook 的<acronym>DSSSL</acronym>样式表</title>

    <!--
<para>
     To install the style sheets, unzip and untar the distribution and
     move it to a suitable place, for example
     <filename>/usr/local/share/sgml</filename>.  (The archive will
     automatically create a subdirectory.)
<screen>
<prompt>$</prompt> <userinput>gunzip docbook-dsssl-1.<replaceable>xx</>.tar.gz</userinput>
<prompt>$</prompt> <userinput>tar -C /usr/local/share/sgml -xf docbook-dsssl-1.<replaceable>xx</>.tar</userinput>
</screen>
    </para>
-->
<para>
要安装样式表，解开发布的工具包，然后把它挪到一个合适的地方(比如<filename>/usr/local/share/sgml</filename>)。
归档会自动生成一个子目录。
<screen>
<prompt>$</prompt> <userinput>gunzip docbook-dsssl-1.<replaceable>xx</>.tar.gz</userinput>
<prompt>$</prompt> <userinput>tar -C /usr/local/share/sgml -xf docbook-dsssl-1.<replaceable>xx</>.tar</userinput>
</screen>
</para>

    <!--
<para>
     The usual catalog entry in
     <filename>/usr/local/share/sgml/catalog</filename> can also be
     made:
<programlisting>
CATALOG "docbook-dsssl-1.<replaceable>xx</>/catalog"
</programlisting>
     Because stylesheets change rather often, and it's sometimes
     beneficial to try out alternative versions,
     <productname>PostgreSQL</productname> doesn't use this catalog
     entry.  See <xref linkend="docguide-toolsets-configure"> for
     information about how to select the stylesheets instead.
    </para>
-->
<para>
你也可以在<filename>/usr/local/share/sgml/catalog</filename>里制作常用的目录条目：
<programlisting>
CATALOG "docbook-dsssl-1.<replaceable>xx</>/catalog"
</programlisting>
因为样式表变化频繁，因此有时候多实验几个版本也挺好，<productname>PostgreSQL</productname>
并不使用这个表项。参阅<xref linkend="docguide-toolsets-configure">获取有关如何选择样式表的信息。
</para>
   </sect3>

   <sect3>
    <!-- 
<title>Installing <productname>JadeTeX</productname></title> 
-->
<title>安装 <productname>JadeTeX</productname></title>

    <!--
<para>
     To install and use <productname>JadeTeX</productname>, you will
     need a working installation of <productname>TeX</productname> and
     <productname>LaTeX2e</productname>, including the supported
     <productname>tools</productname> and
     <productname>graphics</productname> packages,
     <productname>Babel</productname>,
     <productname><acronym>AMS</acronym> fonts</productname> and
     <productname>AMS-LaTeX</productname>, the
     <productname><acronym>PSNFSS</acronym></productname> extension
     and companion kit of <quote>the 35 fonts</quote>, the
     <productname>dvips</productname> program for generating
     <productname>PostScript</productname>, the macro packages
     <productname>fancyhdr</productname>,
     <productname>hyperref</productname>,
     <productname>minitoc</productname>,
     <productname>url</productname> and
     <productname>ot2enc</productname>.  All of these can be found on
     your friendly neighborhood <ulink url="http://www.ctan.org">
     <acronym>CTAN</acronym> site</ulink>.
     The installation of the <application>TeX</application> base
     system is far beyond the scope of this introduction.  Binary
     packages should be available for any system that can run
     <application>TeX</application>.
    </para>
-->
<para>
要安装和使用<productname>JadeTeX</productname>，就需要一套能用的<productname>TeX</productname>
和<productname>LaTeX2e</productname>，包括支持的<productname>工具</productname>和
<productname>图形</productname>包。<productname>Babel</productname>、
<productname><acronym>AMS</acronym> 字体</productname> 、<productname>AMS-LaTeX</productname> 、
<productname><acronym>PSNFSS</acronym></productname>扩展、<quote>the 35 fonts</quote>工具箱、
用于生成 <productname>PostScript</productname> 的<productname>dvips</productname>程序，
宏包<productname>fancyhdr</productname>。 <productname>hyperref</productname>， <productname>minitoc</productname>，
<productname>url</productname> ，<productname>ot2enc</productname>，所有这些你都可以在你最近的
<ulink url="http://www.ctan.org"><acronym>CTAN</acronym> 镜像站点</ulink>找到。
基本<application>TeX</application>系统的安装远远超出了这份介绍的范围。
你应该可以在任何可以运行<application>TeX</application>的系统上找到二进制包。
</para>

    <!--
<para>
     Before you can use <application>JadeTeX</application> with the
     <productname>PostgreSQL</productname> documentation sources, you
     will need to increase the size of
     <application>TeX</application>'s internal data structures.
     Details on this can be found in the <application>JadeTeX</application>
     installation instructions.
    </para>
-->
<para>
在你开始使用<application>JadeTeX</application>处理<productname>PostgreSQL</productname>文档之前，
你需要增大<application>TeX</application>的内部数据结构的尺寸。
关于这些事情的细节可以在<application>JadeTeX</application>的安装指导里找到。
</para>

    <!--
<para>
     Once that is finished you can install <application>JadeTeX</application>:
<screen>
<prompt>$</prompt> <userinput>gunzip jadetex-<replaceable>xxx</replaceable>.tar.gz</userinput>
<prompt>$</prompt> <userinput>tar xf jadetex-<replaceable>xxx</replaceable>.tar</userinput>
<prompt>$</prompt> <userinput>cd jadetex</userinput>
<prompt>$</prompt> <userinput>make install</userinput>
<prompt>$</prompt> <userinput>mktexlsr</userinput>
</screen>
     The last two need to be done as <systemitem>root</systemitem>.
    </para>
-->
<para>
一旦完成了这些你就可以安装<application>JadeTeX</application>了：
<screen>
<prompt>$</prompt> <userinput>gunzip jadetex-<replaceable>xxx</replaceable>.tar.gz</userinput>
<prompt>$</prompt> <userinput>tar xf jadetex-<replaceable>xxx</replaceable>.tar</userinput>
<prompt>$</prompt> <userinput>cd jadetex</userinput>
<prompt>$</prompt> <userinput>make install</userinput>
<prompt>$</prompt> <userinput>mktexlsr</userinput>
</screen>
最后两步需要以<systemitem>root</systemitem>身份处理。
</para>

   </sect3>

  </sect2>

  <sect2 id="docguide-toolsets-configure">
   <!-- 
   <title>Detection by <command>configure</command></title> 
   -->
   <title><command>configure</command>检测</title>
<para>
<!-- 
   Before you can build the documentation you need to run the
   <filename>configure</filename> script as you would when building
   the <productname>PostgreSQL</productname> programs themselves.
   Check the output near the end of the run, it should look something
   like this: 
-->
在你制作文档之前，你需要像制作程序本身那样运行<filename>configure</filename>脚本。
检查运行结尾处的输出，应该看起来像这样：
<screen>
<computeroutput>
checking for onsgmls... onsgmls
checking for openjade... openjade
checking for DocBook V4.2... yes
checking for DocBook stylesheets... /usr/share/sgml/docbook/stylesheet/dsssl/modular
checking for collateindex.pl... /usr/bin/collateindex.pl
checking for xsltproc... xsltproc
checking for osx... osx
</computeroutput>
</screen>
<!-- 
   If neither <filename>onsgmls</filename> nor
   <filename>nsgmls</filename> were found then some of the following tests
   will be skipped.  <filename>nsgmls</filename> is part of the Jade
   package.  You can pass the environment variables
   <envar>JADE</envar> and <envar>NSGMLS</envar> to configure to point
   to the programs if they are not found automatically.  If
   <quote>DocBook V4.2</quote> was not found then you did not install
   the DocBook DTD kit in a place where Jade can find it, or you have
   not set up the catalog files correctly.  See the installation hints
   above.  The DocBook stylesheets are looked for in a number of
   relatively standard places, but if you have them some other place
   then you should set the environment variable
   <envar>DOCBOOKSTYLE</envar> to the location and rerun
   <filename>configure</filename> afterwards. 
-->
如果<filename>onsgmls</filename>和<filename>nsgmls</filename>都没有找到，
那么下面的测试将被跳过。<filename>nsgmls</filename>是 Jade 包的一部分。
可以通过传递环境变量<envar>JADE</envar>和<envar>NSGMLS</envar>
给 configure 来指定这些程序的位置。如果没有找到<quote>DocBook V4.2</quote>，
那么就是你没有把 DocBook DTD 工具箱装到 jade 可以找到的地方，或者你没有正确设置目录文件。
参阅上面的安装提示。配置脚本会在一些比较标准的位置寻找 DocBook 样式表，
但如果你把它们放在其它位置，那么就应该设置环境变量 <envar>DOCBOOKSTYLE</envar>
为该位置并且重新运行<filename>configure</filename>脚本。
  </para>

  </sect2>
 </sect1>

 <sect1 id="docguide-build">
  <!-- 
  <title>Building The Documentation</title>
  -->
  <title>制作文档</title>

  <!--
<para>
   Once you have everything set up, change to the directory
   <filename>doc/src/sgml</filename> and run one of the commands
   described in the following subsections to build the
   documentation. (Remember to use GNU make.)
  </para>
-->
<para>
一旦把所有的东西都设置好了，进入目录<filename>doc/src/sgml</filename>
然后运行下面其中一条命令(记得要用 GNU make)：
</para>

  <sect2>
   <title>HTML</title>

   <!--
<para>
    To build the <acronym>HTML</acronym> version of the documentation:
<screen>
<prompt>doc/src/sgml$ </prompt><userinput>make html</userinput>
</screen>
    This is also the default target.  The output appears in the
    subdirectory <filename>html</filename>.
   </para>
-->
<para>
制作<acronym>HTML</acronym>版本的文档：
<screen>
<prompt>doc/src/sgml$ </prompt><userinput>make html</userinput>
</screen>
这也是缺省目标。在子目录<filename>html</filename>里输出。
</para>

   <!--
<para>
    To create a proper index, the build might process several identical
    stages.  If you do not care about the index, and just want to
    proof-read the output, use <literal>draft</>:
<screen>
<prompt>doc/src/sgml$ </prompt><userinput>make draft</userinput>
</screen>
   </para>
-->
<para>
要创建一个适当的索引，可能处理几个相同的阶段。如果你不关心该索引，
只是想校对输出，使用<literal>draft</>:
<screen>
<prompt>doc/src/sgml$ </prompt><userinput>make draft</userinput>
</screen>
</para>

   <!--
<para>
    To build the documentation as a single HTML page, use:
<screen>
<prompt>doc/src/sgml$ </prompt><userinput>make postgres.html</userinput>
</screen>
   </para>
-->
<para>
要建立文档为一个HTML页，使用：
<screen>
<prompt>doc/src/sgml$ </prompt><userinput>make postgres.html</userinput>
</screen>
</para>
 </sect2>

 <sect2>
  <!-- 
  <title>Manpages</title> 
  -->
  <title>手册页</title>

  <!--
<para>
   We use the DocBook XSL stylesheets to
   convert <productname>DocBook</productname>
   <sgmltag>refentry</sgmltag> pages to *roff output suitable for man
   pages.  The man pages are also distributed as a tar archive,
   similar to the <acronym>HTML</acronym> version.  To create the man
   pages, use the commands:
<programlisting>
cd doc/src/sgml
gmake man
</programlisting>
  </para>
-->
<para>
用DocBook XSL样式表把<productname>DocBook</productname>的<sgmltag>refentry</sgmltag>
页面转换成适于做手册页的 *roff 输出。这些手册页也是以 tar 归档的形式发布的，
与<acronym>HTML</acronym>版本类似。要创建手册页包，用命令：
<programlisting>
cd doc/src/sgml
gmake man
</programlisting>
</para>
 </sect2>

  <sect2>
   <!-- 
   <title>Print Output via <application>JadeTeX</application></title> 
   -->
   <title>用<application>JadeTeX</application>生成的打印输出</title>

   
<para>
<!-- 
    If you want to use <application>JadeTex</application> to produce a
    printable rendition of the documentation, you can use one of the
    following commands:
-->
如果你想用<application>JadeTex</application>生成一个可打印的文档，可以用下面的命令：
    <itemizedlist>
     <listitem>
 <!--
 <para>
       To generate PostScript via <acronym>DVI</acronym> in A4 format:
<screen>
<prompt>doc/src/sgml$ </prompt><userinput>make postgres-A4.ps</userinput>
</screen>
       In U.S. letter format:
<screen>
<prompt>doc/src/sgml$ </prompt><userinput>make postgres-US.ps</userinput>
</screen>
      </para>
-->
<para>
使用<acronym>DVI</acronym>生成一个A4格式的PostScript：
<screen>
<prompt>doc/src/sgml$ </prompt><userinput>make postgres-A4.ps</userinput>
</screen>
U.S.信件的格式：
<screen>
<prompt>doc/src/sgml$ </prompt><userinput>make postgres-US.ps</userinput>
</screen>
</para>
     </listitem>

     <listitem>
      <!--
<para>
       To make a <acronym>PDF</acronym>:
<screen>
<prompt>doc/src/sgml$ </prompt><userinput>make postgres-A4.pdf</userinput>
</screen>
       or:
<screen>
<prompt>doc/src/sgml$ </prompt><userinput>make postgres-US.pdf</userinput>
</screen>
       (Of course you can also make a <acronym>PDF</acronym> version
       from the PostScript, but if you generate <acronym>PDF</acronym>
       directly, it will have hyperlinks and other enhanced features.)
      </para>
-->
<para>
制作一个<acronym>PDF</acronym>：
<screen>
<prompt>doc/src/sgml$ </prompt><userinput>make postgres-A4.pdf</userinput>
</screen>
或：
<screen>
<prompt>doc/src/sgml$ </prompt><userinput>make postgres-US.pdf</userinput>
</screen>
当然，你也可以从 Postscript 里制作<acronym>PDF</acronym>版本，但是如果你直接生成
<acronym>PDF</acronym>，那么它会有超链接和其它增强的特性。
</para>
     </listitem>
    </itemizedlist>
   </para>

   <!--
<para>
    When using JadeTeX to build the PostgreSQL documentation, you will
    probably need to increase some of TeX's internal parameters.  These
    can be set in the file <filename>texmf.cnf</filename>.  The following
    settings worked at the time of this writing:
<programlisting>
hash_extra.jadetex  = 200000
hash_extra.pdfjadetex  = 200000
pool_size.jadetex = 2000000
pool_size.pdfjadetex = 2000000
string_vacancies.jadetex = 150000
string_vacancies.pdfjadetex = 150000
max_strings.jadetex = 300000
max_strings.pdfjadetex = 300000
save_size.jadetex = 15000
save_size.pdfjadetex = 15000
</programlisting>
   </para>
-->
<para>
当使用 JadeTeX 生成PostgreSQL文档时，你可能需要增大一些TeX的内部参数。
通过设置文件<filename>texmf.cnf</filename>来实现。下面的设置立即生效：
<programlisting>
hash_extra.jadetex  = 200000
hash_extra.pdfjadetex  = 200000
pool_size.jadetex = 2000000
pool_size.pdfjadetex = 2000000
string_vacancies.jadetex = 150000
string_vacancies.pdfjadetex = 150000
max_strings.jadetex = 300000
max_strings.pdfjadetex = 300000
save_size.jadetex = 15000
save_size.pdfjadetex = 15000
</programlisting>
</para>

  </sect2>

  <sect2>
   <!-- 
   <title>Overflow Text</title> 
   -->
   <title>溢出文本</title>

   <!--
<para>
    Occasionally text is too wide for the printed margins, and in
    extreme cases, too wide for the printed page, e.g.  non-wrapped
    text, wide tables.  Overly wide text generates <quote>Overfull
    hbox</quote> messages in the TeX log output file, e.g.
    <filename>postgres-US.log</> or <filename>postgres-A4.log</>.
    There are 72 points in an inch so anything reported as over 72
    points too wide will probably not fit on the printed page (assuming
    one inch margins).  To find the <acronym>SGML</acronym> text
    causing the overflow, find the first page number mentioned above
    the overflow message, e.g.  <literal>[50 ###]</> (page 50), and
    look at the page after that (e.g. page 51) in the <acronym>PDF</acronym>
    file to see the overflow text and adjust the <acronym>SGML</acronym>
    accordingly.
   </para>
-->
<para>
偶尔文本超出了打印的边缘，并且在极限情况下，超出了打印的纸张的宽度，例如，非包裹的文本，
宽表格。过宽的文本在TeX日志输出文件中产生<quote>Overfull hbox</quote>信息，例如，
<filename>postgres-US.log</> 或 <filename>postgres-A4.log</>。一英寸有72个点，
所以任何超过72个点的报告都太宽，可能不适合打印页（假设一英寸）。
要找到导致溢出的<acronym>SGML</acronym>文本，首先找到上面提到的溢出消息的首页码，例如，
<literal>[50 ###]</> (page 50)，然后在<acronym>PDF</acronym>文件中查找其后的页码(例如页 51)，
查看溢出文本并相应的调整<acronym>SGML</acronym>。
</para>
  </sect2>

  <sect2>
   <!-- 
   <title>Print Output via <acronym>RTF</acronym></title> 
   -->
   <title>通过<acronym>RTF</acronym>生成打印输出</title>

   <!--
<para>
    You can also create a printable version of the <productname>PostgreSQL</productname>
    documentation by converting it to <acronym>RTF</acronym> and
    applying minor formatting corrections using an office suite.
    Depending on the capabilities of the particular office suite, you
    can then convert the documentation to PostScript of
    <acronym>PDF</acronym>.  The procedure below illustrates this
    process using <productname>Applixware</productname>.
   </para>
-->
<para>
你也可以通过把它转换成<acronym>RTF</acronym>并且用一个办公套件进行格式微调的办法来创建一个
<productname>PostgreSQL</productname>文档的可打印的版本。根据你使用的不同的办公套件，
然后你就可以分别把文档转换成 <acronym>PDF</acronym>格式的Postscript。
下面的步骤演示了使用<productname>Applixware</productname>实现的过程。
</para>

   <note>
    <!--
<para>
     It appears that current versions of the <productname>PostgreSQL</productname> documentation
     trigger some bug in or exceed the size limit of OpenJade.  If the
     build process of the <acronym>RTF</acronym> version hangs for a
     long time and the output file still has size 0, then you might have
     hit that problem.  (But keep in mind that a normal build takes 5
     to 10 minutes, so don't abort too soon.)
    </para>
-->
<para>
目前看来<productname>PostgreSQL</productname>的当前版本的文档碰到了 OpenJade 的大小限制的一些毛病。
如果制作<acronym>RTF</acronym>版本的时候停住了好长时间，而输出文件还是 0 ，
那么你很有可能碰到了这个毛病。不过，正常的制作要花 5 到 10 分钟，因此不要太快退出。
</para>
   </note>

   <procedure>
    <!-- 
<title><productname>Applixware</productname> <acronym>RTF</acronym> Cleanup</title> 
-->
<title><productname>Applixware</productname> <acronym>RTF</acronym> 清理</title>

    <!--
<para>
     <application>OpenJade</application> omits specifying a default
     style for body text. In the past, this undiagnosed problem led to
     a long process of table of contents generation. However, with
     great help from the <productname>Applixware</productname> folks
     the symptom was diagnosed and a workaround is available.
    </para>
-->
<para>
<application>OpenJade</application>忽略了声明文本主体的缺省风格。以前，
这个未经查明的问题导致目录生成的长时间处理。不过，在<productname>Applixware</productname>
的工作人员的全力帮助下，这个病症被诊断出来并且找到了绕开的办法。
</para>

    <step performance="required">
     <!--
<para>
      Generate the <acronym>RTF</acronym> version by typing:
<screen>
<prompt>doc/src/sgml$ </prompt><userinput>make postgres.rtf</userinput>
</screen>
     </para>
-->
<para>
键入下面命令生成<acronym>RTF</acronym>版本：
<screen>
<prompt>doc/src/sgml$ </prompt><userinput>make postgres.rtf</userinput>
</screen>
</para>
    </step>

    <step performance="required">
     <!--
<para>
      Repair the RTF file to correctly specify all styles, in
      particular the default style. If the document contains
      <sgmltag>refentry</sgmltag> sections, one must also replace
      formatting hints which tie a preceding paragraph to the current
      paragraph, and instead tie the current paragraph to the
      following one. A utility, <command>fixrtf</command>, is
      available in <filename>doc/src/sgml</filename> to accomplish
      these repairs:
<screen>
<prompt>doc/src/sgml$ </prompt><userinput>./fixrtf -&#045;refentry postgres.rtf</userinput>
</screen>
     </para>
-->
<para>
修复 RTF 文件，以正确声明所有风格，尤其是缺省风格。如果文档包含<sgmltag>refentry</sgmltag>段，
那么还必须把和前面的段落与当前段落绑定的格式化暗示替换为当前的段落和后面的段落绑定。
在<filename>doc/src/sgml</filename>里有一个<command>fixrtf</command>用于完成这样的修补：
<screen>
<prompt>doc/src/sgml$ </prompt><userinput>./fixrtf --refentry postgres.rtf</userinput>
</screen>
</para>

     <!--
<para>
      The script adds <literal>{\s0 Normal;}</literal> as the zeroth
      style in the document. According to
      <productname>Applixware</productname>, the RTF standard would
      prohibit adding an implicit zeroth style, though Microsoft Word
      happens to handle this case. For repairing
      <sgmltag>refentry</sgmltag> sections, the script replaces
      <literal>\keepn</literal> tags with <literal>\keep</literal>.
     </para>
-->
<para>
该脚本把<literal>{\s0 Normal;}</literal>增加为文档的零级风格。根据
<productname>Applixware</productname>，RTF 标准会禁止增加一种隐含的零级风格，
尽管 Microsoft Word 碰巧可以处理这种情况。为了修复<sgmltag>refentry</sgmltag>段落，
该脚本把<literal>\keepn</literal>标记替换为<literal>\keep</literal>。
</para>
    </step>

    <step performance="required">
     <!--
<para>
      Open a new document in <productname>Applixware Words</productname> and
      then import the <acronym>RTF</acronym> file.
     </para>
-->
<para>
在<productname>Applixware Words</productname>里打开新的文档，然后输入该<acronym>RTF</acronym>文件。
</para>
    </step>

    <step performance="required">
     <!--
<para>
      Generate a new table of contents (ToC) using
      <productname>Applixware</productname>.
     </para>
-->
<para>
用<productname>Applixware</productname>生成一个新的目录(ToC)。
</para>

     <substeps>
      <step>
       <!--
<para>
        Select the existing ToC lines, from the beginning of the first
        character on the first line to the last character of the last
        line.
       </para>
-->
<para>
选择现有的 ToC 行，从第一行第一个字符到最后一行最后一个字符。
</para>
      </step>

      <step>
       <!--
<para>
        Build a new ToC using
        <menuchoice><guimenu>Tools</guimenu><guisubmenu>Book
        Building</guisubmenu><guimenuitem>Create Table of
        Contents</guimenuitem></menuchoice>. Select the first three
        levels of headers for inclusion in the ToC. This will replace
        the existing lines imported in the RTF with a native
        <productname>Applixware</productname> ToC.
       </para>
-->
<para>
用<menuchoice><guimenu>Tools</guimenu><guisubmenu>Book Building</guisubmenu><guimenuitem>
制作一个新的 ToC</guimenuitem></menuchoice>。选择头三层头用于包含在 ToC 里。这将用本地的
<productname>Applixware</productname> ToC 代替从 RTF 里输入进来的行。
</para>
      </step>

      <step>
<para>
<!-- 
        Adjust the ToC formatting by using
        <menuchoice><guimenu>Format</guimenu><guimenuitem>Style</guimenuitem></menuchoice>,
        selecting each of the three ToC styles, and adjusting the
        indents for <literal>First</literal> and
        <literal>Left</literal>. Use the following values:
-->
使用<menuchoice><guimenu>Format</guimenu><guimenuitem>Style</guimenuitem></menuchoice>
调整 ToC 格式，选择每三种 ToC 风格，然后为<literal>First</literal>和<literal>Left</literal>
调整边距。使用下面的值：
        <informaltable>
         <tgroup cols="3">
          <thead>
           <row>
            <!-- 
<entry>Style</entry>
            <entry>First Indent (inches)</entry>
            <entry>Left Indent (inches)</entry> 
-->
<entry>风格</entry>
            <entry>第一边距(英寸)</entry>
            <entry>左边距(英寸)</entry>
           </row>
          </thead>

          <tbody>
           <row>
            <entry><literal>TOC-Heading 1</literal></entry>
            <entry><literal>0.4</literal></entry>
            <entry><literal>0.4</literal></entry>
           </row>

           <row>
            <entry><literal>TOC-Heading 2</literal></entry>
            <entry><literal>0.8</literal></entry>
            <entry><literal>0.8</literal></entry>
           </row>

           <row>
            <entry><literal>TOC-Heading 3</literal></entry>
            <entry><literal>1.2</literal></entry>
            <entry><literal>1.2</literal></entry>
           </row>
          </tbody>
         </tgroup>
        </informaltable>
       </para>
      </step>
     </substeps>
    </step>

    <step performance="required">
    
<para>
<!-- 
      Work through the document to:
 -->
 对文档进行加工：
      <itemizedlist>
       <listitem>
 <!--
 <para>
         Adjust page breaks.
        </para>
-->
<para>
调整分页符
</para>
       </listitem>

       <listitem>
        <!--
<para>
         Adjust table column widths.
        </para>
-->
<para>
调整表列宽
</para>
       </listitem>
      </itemizedlist>
     </para>
    </step>

    <step performance="required">
     <!--
<para>
      Replace the right-justified page numbers in the Examples and
      Figures portions of the ToC with correct values. This only takes
      a few minutes.
     </para>
-->
<para>
用正确的值替换 ToC 里例子和图片部分右对齐的页数。这些对每个文档只需要花几分钟。
</para>
    </step>

    <step performance="optional">
     <!--
<para>
       Delete the index section from the document if it is empty.
     </para>
-->
<para>
如果索引是空的，那么从文档中删除它。
</para>
    </step>

    <step performance="required">
     <!--
<para>
       Regenerate and adjust the table of contents.
     </para>
-->
<para>
重新生成并调整目录。
</para>

      <substeps>
       <step>
        <!--
<para>
         Select the ToC field.
        </para>
-->
<para>
选择 ToC 字段。
</para>
       </step>

       <step>
        <!--
<para>
         Select <menuchoice><guimenu>Tools</guimenu><guisubmenu>Book
         Building</guisubmenu><guimenuitem>Create Table of
         Contents</guimenuitem></menuchoice>.
        </para>
-->
<para>
选择<menuchoice><guimenu>Tools</guimenu><guisubmenu>Book
         Building</guisubmenu><guimenuitem>Create Table of
         Contents</guimenuitem></menuchoice>。
</para>
       </step>

       <step>
        <!--
<para>
         Unbind the ToC by selecting
         <menuchoice><guimenu>Tools</guimenu><guisubmenu>Field
         Editing</guisubmenu><guimenuitem>Unprotect</guimenuitem></menuchoice>.
        </para>
-->
<para>
通过选择<menuchoice><guimenu>Tools</guimenu><guisubmenu>Field
         Editing</guisubmenu><guimenuitem>Unprotect</guimenuitem></menuchoice>解除 ToC。
</para>
       </step>

       <step>
        <!--
<para>
         Delete the first line in the ToC, which is an entry for the
         ToC itself.
        </para>
-->
<para>
删除 ToC 中的第一行，它是指向 ToC 本身的一条记录。
</para>
       </step>
      </substeps>
    </step>

    <step performance="required">
     <!--
<para>
      Save the document as native <productname>Applixware
      Words</productname> format to allow easier last minute editing
      later.
     </para>
-->
<para>
把该文档保存为<productname>Applixware Words</productname>本地文档格式以便于最后的编辑。
</para>
    </step>

    <step performance="required">
     <!--
<para>
      <quote>Print</quote> the document
      to a file in PostScript format.
     </para>
-->
<para>
把该文档以 PostScript 格式<quote>打印</quote>到一个文件。
</para>
    </step>
   </procedure>
  </sect2>

  <sect2>
   <!-- 
   <title>Plain Text Files</title>
   -->
   <title>纯文本文件</title>

   <!--
<para>
    The installation instructions are also distributed as plain text,
    in case they are needed in a situation where better reading tools
    are not available.  The <filename>INSTALL</filename> file
    corresponds to <xref linkend="installation">, with some minor
    changes to account for the different context.  To recreate the
    file, change to the directory <filename>doc/src/sgml</filename>
    and enter <userinput>make INSTALL</userinput>. 
   </para>
-->
<para>
该安装说明书也以纯文本的模式发布了，以防它们在没有更好的阅读工具的时候使用。<filename>INSTALL</filename>
文件对应<xref linkend="installation">，只有一点用于不同环境的修改。要重建这个文件，
进入目录<filename>doc/src/sgml</filename>然后敲入<userinput>make INSTALL</userinput>。
</para>

   <!--
   <para>
    In the past, the release notes and regression testing instructions
    were also distributed as plain text, but this practice has been
    discontinued.
   </para>
-->
<para>
在过去，版本说明和回归测试说明也以纯文本的格式发布了，
但是已经停止这个做法了。
</para>
  </sect2>

  <sect2>
   <!-- 
   <title>Syntax Check</title> 
   -->
   <title>语法检查</title>

   <!--
<para>
    Building the documentation can take very long.  But there is a
    method to just check the correct syntax of the documentation
    files, which only takes a few seconds:
<screen>
<prompt>doc/src/sgml$ </prompt><userinput>make check</userinput>
</screen>
   </para>
-->
<para>
制作文档可能需要很长时间。但是有一个方法用于只检查文档文件的语法正确性，只要花几秒钟：
<screen>
<prompt>doc/src/sgml$ </prompt><userinput>make check</userinput>
</screen>
</para>
  </sect2>
 </sect1>


 <sect1 id="docguide-authoring">
  <!-- 
  <title>Documentation Authoring</title> 
  -->
  <title>文档写作</title>

   <!--
<para>
    <acronym>SGML</acronym> and <productname>DocBook</productname> do
    not suffer from an oversupply of open-source authoring tools. The
    most common tool set is the
    <productname>Emacs</productname>/<productname>XEmacs</productname>
    editor with appropriate editing mode.  On some systems
    these tools are provided in a typical full installation.
   </para>
-->
<para>
<acronym>SGML</acronym>和<productname>DocBook</productname>没有受到过多的开放源码写作工具的影响。
最常用的工具集是带有合适编辑模式的<productname>Emacs</productname>/<productname>XEmacs</productname>
编辑器。在一些系统上这些工具在典型的完全安装时是一并安装的。
</para>

   <sect2>
    <title>Emacs/PSGML</title>

    <!--
<para>
     <productname>PSGML</productname> is the most common and most
     powerful mode for editing <acronym>SGML</acronym> documents.
     When properly configured, it will allow you to use
     <application>Emacs</application> to insert tags and check markup
     consistency.  You could use it for <acronym>HTML</acronym> as
     well.  Check the <ulink url="http://www.lysator.liu.se/projects/about_psgml.html">
     PSGML web site</ulink> for downloads, installation instructions, and
     detailed documentation.
    </para>
-->
<para>
<productname>PSGML</productname>是最常用和最强大的编辑<acronym>SGML</acronym>文档的工具。
如果正确的做了配置，它将允许你使用<application>Emacs</application>插入标签和检查标记一致性。
你也可以把它用于<acronym>HTML</acronym>。看看<ulink url="http://www.lysator.liu.se/projects/about_psgml.html">
PSGML 站点</ulink>获取下载、安装指导、详细文档。
</para>

    <!--
<para>
     There is one important thing to note with
     <productname>PSGML</productname>: its author assumed that your
     main <acronym>SGML</acronym> <acronym>DTD</acronym> directory
     would be <filename>/usr/local/lib/sgml</filename>.  If, as in the
     examples in this chapter, you use
     <filename>/usr/local/share/sgml</filename>, you have to
     compensate for this, either by setting
     <envar>SGML_CATALOG_FILES</envar> environment variable, or you
     can customize your <productname>PSGML</productname> installation
     (its manual tells you how).
    </para>
-->
<para>
关于<productname>PSGML</productname>有一件比较重要的事情要注意：它的作者假设你的主
<acronym>SGML</acronym> <acronym>DTD</acronym>目录是<filename>/usr/local/lib/sgml</filename>。
如果你像本文的例子那样放在<filename>/usr/local/share/sgml</filename>，就得补偿这个问题，
要么是设置<envar>SGML_CATALOG_FILES</envar>环境变量，要么是自定义你的<productname>PSGML</productname>
安装(它的手册告诉你怎么做)。
</para>

    
<para>
<!--
     Put the following in your <filename>~/.emacs</filename>
     environment file (adjusting the path names to be appropriate for
     your system):
-->
把下面这几行放到你的<filename>~/.emacs</filename>环境文件里(根据你的系统调整路径名)：
<programlisting>
; ********** for SGML mode (psgml)

(setq sgml-omittag t)
(setq sgml-shorttag t)
(setq sgml-minimize-attributes nil)
(setq sgml-always-quote-attributes t)
(setq sgml-indent-step 1)
(setq sgml-indent-data t)
(setq sgml-parent-document nil)
(setq sgml-exposed-tags nil)
(setq sgml-catalog-files '("/usr/local/share/sgml/catalog"))

(autoload 'sgml-mode "psgml" "Major mode to edit SGML files." t )
</programlisting>

     <!-- 
 and in the same file add an entry for <acronym>SGML</acronym>
     into the (existing) definition for
     <varname>auto-mode-alist</varname>: 
 -->
 并且在同一个文件里增加一条记录，把<acronym>SGML</acronym>
 加入自动模式别名的定义中(<varname>auto-mode-alist</varname>)：
<programlisting>
(setq
  auto-mode-alist
  '(("\\.sgml$" . sgml-mode)
   ))
</programlisting>
    </para>

<para>
<!-- 
     You might find that when using <productname>PSGML</productname>, a
     comfortable way of working with these separate files of book
     parts is to insert a proper <literal>DOCTYPE</literal>
     declaration while you're editing them.  If you are working on
     this source, for instance, it is an appendix chapter, so you
     would specify the document as an <quote>appendix</quote> instance
     of a DocBook document by making the first line look like this:
-->
当使用<productname>PSGML</productname>时，有一个让自己在这些分离的文件上干活方便些的办法：
就是你在编辑它们的时候插入合适的<literal>DOCTYPE</literal>定义。例如，
如果你在这个源文件上干活，这是一个附录章节，
因此你将通过把第一行标记成像下面的样子从而把这个文档声明为一个 DocBook 文档的<quote>附录</quote>：
<programlisting>
&lt;!DOCTYPE appendix PUBLIC "-//OASIS//DTD DocBook V4.2//EN"&gt;
</programlisting>

<!-- 
     This means that anything and everything that reads
     <acronym>SGML</acronym> will get it right, and I can verify the
     document with <command>nsgmls -s docguide.sgml</command>.  (But
     you need to take out that line before building the entire
     documentation set.) 
-->
这意味着任何或所有读取<acronym>SGML</acronym>的软件将能正确读取这份文件，
并且我可以用<command>nsgmls -s docguide.sgml</command>校验此文档
(不过你在制作整个文档集的时候要把这行拿走)。
    </para>
   </sect2>

   <sect2>
    <!-- 
<title>Other Emacs Modes</title> 
-->
<title>其它 Emacs 模式</title>

    <!--
<para>
     <productname>GNU Emacs</productname> ships with a different
     <acronym>SGML</acronym> mode, which is not quite as powerful as
     <productname>PSGML</productname>, but it's less confusing and
     lighter weight.  Also, it offers syntax highlighting (font lock),
     which can be very helpful.
     <filename>src/tools/editors/emacs.samples</filename> contains
     sample settings for this mode.
    </para>
-->
<para>
<productname>GNU Emacs</productname>带有不同的<acronym>SGML</acronym>模式，
不过并不像<productname>PSGML</productname>那么强大，但是它比较少让人混淆的东西而且比较小巧。
同样，它也提供语法高亮(字体锁)，也是很有帮助的。<filename>src/tools/editors/emacs.samples</filename>
包含这个模式的相同设置。
</para>

    <!--
<para>
     Norm Walsh offers a
     <ulink url="http://nwalsh.com/emacs/docbookide/index.html">major mode</ulink>
     specifically for DocBook which also has font-lock and a number of features to
     reduce typing.
    </para>
-->
<para>
Norm Walsh 提供一个用于 DocBook 的
<ulink url="http://nwalsh.com/emacs/docbookide/index.html">major mode</ulink>，
也有字体锁和一些可以减少击键的特性。
</para>
   </sect2>

 </sect1>


 <sect1 id="docguide-style">
  <!-- 
  <title>Style Guide</title> 
  -->
  <title>风格指导</title>

  <sect2>
   <!-- 
   <title>Reference Pages</title> 
   -->
   <title>参考页</title>

   <!--
<para>
    Reference pages should follow a standard layout.  This allows
    users to find the desired information more quickly, and it also
    encourages writers to document all relevant aspects of a command.
    Consistency is not only desired among
    <productname>PostgreSQL</productname> reference pages, but also
    with reference pages provided by the operating system and other
    packages.  Hence the following guidelines have been developed.
    They are for the most part consistent with similar guidelines
    established by various operating systems.
   </para>
-->
<para>
参考页应该遵循标准的布局。这样就允许用户更快地找出自己需要的信息，
并且也可以鼓励作者把一条命令的所有相关方面都记录在案。一致性不仅仅是
<productname>PostgreSQL</productname>参考页的需求，也是操作系统和其它页面提供的东西。
因此设计了下面的指导方针。它们在大多数时候是与各种操作系统建立起来的类似的风格是一致的。
</para>


<para>
<!-- 
    Reference pages that describe executable commands should contain
    the following sections, in this order.  Sections that do not apply
    can be omitted.  Additional top-level sections should only be used
    in special circumstances; often that information belongs in the
    <quote>Usage</quote> section.
-->
描述可执行命令的参考页应该包含下面的小节，并且是按照这里的顺序。
不适用的小节可以忽略。额外的顶级小节应该只用在特殊的环境下；
通常那些信息属于<quote>用法</quote>小节。
    <variablelist>
     <varlistentry>
      <!-- 
  <term>Name</term> 
  -->
  <term>名字（Name）</term>
      <listitem>
   <!--
   <para>
        This section is generated automatically.  It contains the
        command name and a half-sentence summary of its functionality.
       </para>
-->
<para>
这个小节是自动生成的。它包含命令名和一个半句话的摘要，介绍该命令的功能。
</para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <!-- 
  <term>Synopsis</term> 
  -->
  <term>纲要（Synopsis）</term>
      <listitem>
       <!--
<para>
        This section contains the syntax diagram of the command.  The
        synopsis should normally not list each command-line option;
        that is done below.  Instead, list the major components of the
        command line, such as where input and output files go.
       </para>
-->
<para>
这个小节包含该命令的语法图表。大纲通常不应该列出每个命令行选项；那些东西在后面做。
大纲应该列出命令行的主要组件，比如应该把输入和输出文件放在哪里等。
</para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <!-- 
  <term>Description</term> 
  -->
  <term>描述（Description）</term>
      <listitem>
       <!--
<para>
        Several paragraphs explaining what the command does.
       </para>
-->
<para>
几个段落，用于描述该命令是做什么的。
</para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <!-- 
  <term>Options</term> 
  -->
  <term>选项（Options）</term>
      <listitem>
       <!--
<para>
        A list describing each command-line option.  If there are a
        lot of options, subsections can be used.
       </para>
-->
<para>
一个列表，描述每个命令行选项。如果有许多选项，可以用子小节。
</para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <!-- 
  <term>Exit Status</term> 
  -->
  <term>退出状态(Exit Status)</term>
      <listitem>
       <!--
<para>
        If the program uses 0 for success and non-zero for failure,
        then you do not need to document it.  If there is a meaning
        behind the different non-zero exit codes, list them here.
       </para>
-->
<para>
如果程序用 0 表示成功，非零表示失败，那么你不需要为此写文档。
如果在每个非零值的后面有不同的含义，那么在这里列出它们。
</para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <!-- 
  <term>Usage</term> 
  -->
  <term>用法(Usage)</term>
      <listitem>
       <!--
<para>
        Describe any sublanguage or run-time interface of the program.
        If the program is not interactive, this section can usually be
        omitted.  Otherwise, this section is a catch-all for
        describing run-time features.  Use subsections if appropriate.
       </para>
-->
<para>
描述任意子语言或者程序的运行时接口。如果程序不是交互的，那么本节通常可以省略。
否则，本节是用于描述所有运行时特性的地方。如果合适，可以使用子小节。
</para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <!-- 
  <term>Environment</term>
  -->
  <term>环境(Environment)</term>
      <listitem>
       <!--
<para>
        List all environment variables that the program might use.
        Try to be complete; even seemingly trivial variables like
        <envar>SHELL</envar> might be of interest to the user.
       </para>
-->
<para>
列出所有程序可能使用的环境变量。尽量完整；即使是那些看起来很琐碎的变量，
比如<envar>SHELL</envar>都可能让读者感兴趣。
</para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <!-- 
  <term>Files</term> 
  -->
  <term>文件(Files)</term>
      <listitem>
       <!--
<para>
        List any files that the program might access implicitly.  That
        is, do not list input and output files that were specified on
        the command line, but list configuration files, etc.
       </para>
-->
<para>
列出所有程序可能隐含访问的文件。也就是说，不要列出在命令行上声明的输入和输出文件。
但是列出配置文件等等。
</para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <!-- 
  <term>Diagnostics</term> 
  -->
  <term>诊断(Diagnostics)</term>
      <listitem>
       <!--
<para>
        Explain any unusual output that the program might create.
        Refrain from listing every possible error message.  This is a
        lot of work and has little use in practice.  But if, say, the
        error messages have a standard format that the user can parse,
        this would be the place to explain it.
       </para>
-->
<para>
解释任何程序可能生成的不正常的输出。避免列出所有可能的错误消息。
这样做工作量很大但没有太多实际用途。但是如果说错误消息有一种用户可以分析的标准格式，
那么这里可能就是解释它的地方。
</para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <!-- 
  <term>Notes</term> 
  -->
  <term>注意(Notes)</term>
      <listitem>
       <!--
<para>
        Anything that doesn't fit elsewhere, but in particular bugs,
        implementation flaws, security considerations, compatibility
        issues.
       </para>
-->
<para>
任何在其它地方放都不合适的东西，尤其是Bug、实现缺陷、安全考量、兼容性问题等。
</para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <!-- 
  <term>Examples</term> 
  -->
  <term>例子(Examples)</term>
      <listitem>
       <!--
<para>
        Examples
       </para>
-->
<para>
例子
</para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <!-- 
  <term>History</term>
  -->
  <term>历史(History)</term>
      <listitem>
       <!--
<para>
        If there were some major milestones in the history of the
        program, they might be listed here.  Usually, this section can
        be omitted.
       </para>
-->
<para>
如果在程序的历史中有一些主要的里程碑，那么可以在这里列出。通常，这个小节可以省略。
</para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <!-- 
  <term>Author</term> 
  -->
  <term>作者（Author）</term>
      <listitem>
       <!--
<para>
        Author (only used in the contrib section)
       </para>
-->
<para>
作者（只在普通发布版中使用）
</para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <!-- 
  <term>See Also</term> 
  -->
  <term>又见(See Also)</term>
      <listitem>
       <!--
<para>
        Cross-references, listed in the following order: other
        <productname>PostgreSQL</productname> command reference pages,
        <productname>PostgreSQL</productname> SQL command reference
        pages, citation of <productname>PostgreSQL</productname>
        manuals, other reference pages (e.g., operating system, other
        packages), other documentation.  Items in the same group are
        listed alphabetically.
       </para>
-->
<para>
交叉引用，按照下面的顺序列出：其它<productname>PostgreSQL</productname>
命令的参考页<productname>PostgreSQL</productname> SQL命令参考页、
<productname>PostgreSQL</productname> 手册的引用、其它引用页面(比如，
操作系统、其它包)、其它文档。在同一组里的条目按照字母顺序列出。
</para>
      </listitem>
     </varlistentry>

    </variablelist>
   </para>

   <!--
<para>
    Reference pages describing SQL commands should contain the
    following sections: Name, Synopsis, Description, Parameters,
    Outputs, Notes, Examples, Compatibility, History, See
    Also.  The Parameters section is like the Options section, but
    there is more freedom about which clauses of the command can be
    listed.  The Outputs section is only needed if the command returns
    something other than a default command-completion tag.  The Compatibility
    section should explain to what extent
    this command conforms to the SQL standard(s), or to which other
    database system it is compatible.  The See Also section of SQL
    commands should list SQL commands before cross-references to
    programs.
   </para>
-->
<para>
描述 SQL 命令的参考页应该包含下面的小节：名字、大纲、描述、参数、输出、注意、例子、
兼容性、历史、又见。参数小节类似选项小节，但是有更多自由可以选择该命令的哪个子句可以列出。
输出小节只在命令有返回的时候需要，而不是缺省的命令结束标签。
兼容性小节应该解释此命令遵循 SQL 标准的哪个扩展，或者它兼容哪种其它数据库系统。
SQL 命令的"又见"小节应该在交叉引用其它程序之前列出 SQL 命令。
</para>
  </sect2>

 </sect1>
</appendix>
