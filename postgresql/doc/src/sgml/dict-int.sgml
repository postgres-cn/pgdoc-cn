<!-- doc/src/sgml/dict-int.sgml -->

<sect1 id="dict-int" xreflabel="dict_int">
 <title>dict_int</title>

 <indexterm zone="dict-int">
  <primary>dict_int</primary>
 </indexterm>

 <!--
<para>
  <filename>dict_int</> is an example of an add-on dictionary template
  for full-text search.  The motivation for this example dictionary is to
  control the indexing of integers (signed and unsigned), allowing such
  numbers to be indexed while preventing excessive growth in the number of
  unique words, which greatly affects the performance of searching.
 </para>
-->
<para>
<filename>dict_int</>是一个全文检索的扩展字典模板的示例。这个示例字典的目的是控制整数
（有符号和无符号）的索引，允许在防止唯一码的数量过度增长时给整数索引，
这将大大的影响搜索的性能。
</para>

 <sect2>
  <!-- 
  <title>Configuration</title> 
  -->
  <title>配置</title>

  <!--
<para>
   The dictionary accepts two options:
  </para>
-->
<para>
该字典接受两个选项：
</para>

  <itemizedlist>
   <listitem>
    <!--
<para>
     The <literal>maxlen</> parameter specifies the maximum number of
     digits allowed in an integer word.  The default value is 6.
    </para>
-->
<para>
<literal>maxlen</>参数声明整数数字的最大位数。缺省值是6。
</para>
   </listitem>
   <listitem>
    <!--
<para>
     The <literal>rejectlong</> parameter specifies whether an overlength
     integer should be truncated or ignored.  If <literal>rejectlong</> is
     <literal>false</> (the default), the dictionary returns the first
     <literal>maxlen</> digits of the integer. If <literal>rejectlong</> is
     <literal>true</>, the dictionary treats an overlength integer as a stop
     word, so that it will not be indexed.  Note that this also means that
     such an integer cannot be searched for.
    </para>
-->
<para>
<literal>rejectlong</>参数声明一个超长的整数是否应该被截断或忽略。如果<literal>rejectlong</>
为<literal>false</>（缺省），那么字典返回该整数前面的<literal>maxlen</>位。如果
<literal>rejectlong</>为<literal>true</>，那么字典认为一个超长的整数是一个干扰词，
所以它将不会被索引。请注意，这也意味着这样一个整数是不能被搜索的。
</para>
   </listitem>
  </itemizedlist>
 </sect2>

 <sect2>
  <!--
<title>Usage</title>
-->
<title>用法</title>

  <!--
<para>
   Installing the <literal>dict_int</> extension creates a text search
   template <literal>intdict_template</> and a dictionary <literal>intdict</>
   based on it, with the default parameters.  You can alter the
   parameters, for example

<programlisting>
mydb# ALTER TEXT SEARCH DICTIONARY intdict (MAXLEN = 4, REJECTLONG = true);
ALTER TEXT SEARCH DICTIONARY
</programlisting>

   or create new dictionaries based on the template.
  </para>
-->
<para>
安装<literal>dict_int</>扩展来创建基于它的一个文本搜索模板<literal>intdict_template</>
和一个字典<literal>intdict</>，带有缺省的参数。你可以修改这些参数，例如
<programlisting>
mydb# ALTER TEXT SEARCH DICTIONARY intdict (MAXLEN = 4, REJECTLONG = true);
ALTER TEXT SEARCH DICTIONARY
</programlisting>
或创建新的基于该模板的字典。
</para>

  
<para>
   <!--
   To test the dictionary, you can try 
   -->
要测试这个字典，可以尝试

<programlisting>
mydb# select ts_lexize('intdict', '12345678');
 ts_lexize
-----------
 {123456}
</programlisting>

<!--
   but real-world usage will involve including it in a text search
   configuration as described in <xref linkend="textsearch">.
   That might look like this:
-->
但是实际的使用情况会涉及包含它在一个文本搜索配置里，就像<xref linkend="textsearch">
里描述的那样。可能看起来像这样：

<programlisting>
ALTER TEXT SEARCH CONFIGURATION english
    ALTER MAPPING FOR int, uint WITH intdict;
</programlisting>

  </para>
 </sect2>

</sect1>
