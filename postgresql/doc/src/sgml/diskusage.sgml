<!-- doc/src/sgml/diskusage.sgml -->

<chapter id="diskusage">
 <title>监控磁盘使用</title>

 <para>
  本章讨论如何监控<productname>PostgreSQL</>数据库系统的磁盘使用情况。
 </para>

 <sect1 id="disk-usage">
  <title>判断磁盘用量</title>

  <indexterm zone="disk-usage">
   <primary>磁盘用量</primary>
  </indexterm>

  <para>
   每个表都有一个主要的堆磁盘文件，大多数数据都存储在其中。如果一个表有着可能会很宽（尺寸大）的列， 则另外还有一个<acronym>TOAST</>文件与这个表相关联， 它用于存储因为太宽而不能存储在主表里面的值（参阅<xref linkend="storage-toast">）。如果有这个附属文件，那么<acronym>TOAST</>表上会有一个可用的索引。 当然，同时还可能有索引和基表关联。每个表和索引都存放在单独的磁盘文件里 &mdash; 如果文件超过 1G 字节，甚至可能多于一个文件。这些文件的命名原则在<xref linkend="storage-file-layout">中描述。
  </para>

  <para>
   你可以以三种方式监视磁盘空间：使用<xref linkend="functions-admin-dbsize">中列出的SQL函数、使用<xref linkend="oid2name">模块或者人工观察系统目录。SQL函数是最容易使用的方法，同时也是我们通常推荐的方法。本节剩余的部分将展示如何通过观察系统目录来监视磁盘空间。
  </para>

  <para>
   在一个最近清理过或者分析过的数据库上使用<application>psql</>，你可以发出查询来查看任意表的磁盘用量：
<programlisting>
SELECT pg_relation_filepath(oid), relpages FROM pg_class WHERE relname = 'customer';

 pg_relation_filepath | relpages
----------------------+----------
 base/16384/16806     |       60
(1 row)
</programlisting>
   每个页通常都是 8K 字节（记住，<structfield>relpages</>只会由<command>VACUUM</>、<command>ANALYZE</>和少数几个 DDL 命令如<command>CREATE INDEX</>所更新）。如果你想直接检查表的磁盘文件，那么文件路径名应该有用。
  </para>

  <para>
   要显示<acronym>TOAST</>表使用的空间，我们可以使用一个类似下面这样的查询：
<programlisting>
SELECT relname, relpages
FROM pg_class,
     (SELECT reltoastrelid
      FROM pg_class
      WHERE relname = 'customer') AS ss
WHERE oid = ss.reltoastrelid OR
      oid = (SELECT indexrelid
             FROM pg_index
             WHERE indrelid = ss.reltoastrelid)
ORDER BY relname;

       relname        | relpages
----------------------+----------
 pg_toast_16806       |        0
 pg_toast_16806_index |        1
</programlisting>
  </para>

  <para>
   你也可以很容易地显示索引的尺寸：
<programlisting>
SELECT c2.relname, c2.relpages
FROM pg_class c, pg_class c2, pg_index i
WHERE c.relname = 'customer' AND
      c.oid = i.indrelid AND
      c2.oid = i.indexrelid
ORDER BY c2.relname;

       relname        | relpages
----------------------+----------
 customer_id_indexdex |       26
</programlisting>
  </para>

  <para>
   我们很容易用下面的信息找出最大的表和索引：
<programlisting>
SELECT relname, relpages
FROM pg_class
ORDER BY relpages DESC;

       relname        | relpages
----------------------+----------
 bigtable             |     3290
 customer             |     3144
</programlisting>
  </para>
 </sect1>

 <sect1 id="disk-full">
  <title>磁盘满失败</title>

  <para>
   一个数据库管理员最重要的磁盘监控任务就是确保磁盘不会写满。一个写满了的数据磁盘可能不会导致数据的崩溃，但它肯定会让系统变得不可用。如果保存 WAL 文件的磁盘变满，会发生数据库服务器致命错误并且可能发生关闭。
  </para>

  <para>
   如果你不能通过删除一些其他的东西来释放一些磁盘空间，那么你可以通过使用表空间把一些数据库文件移动到其他文件系统上去。参阅<xref linkend="manage-ag-tablespaces">获取更多信息。
  </para>

  <tip>
   <para>
    有些文件系统在快满的时候性能会急剧恶化，因此不要等到磁盘完全满的时候才采取行动。
   </para>
  </tip>

  <para>
   如果你的系统支持每用户的磁盘份额，那么数据库将自然地受制于用户所处的服务器给他的份额限制。超过份额的负面影响和完全用光磁盘是完全一样的。
  </para>
 </sect1>
</chapter>
