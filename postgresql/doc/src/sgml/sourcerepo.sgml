<!-- doc/src/sgml/sourcerepo.sgml -->

<appendix id="sourcerepo">
 <title>源代码仓库</title>

 <para>
  <productname>PostgreSQL</productname>源代码使用<productname>Git</productname>版本控制系统存储和管理。有一个主仓库的公共镜像可用，它每分钟都会根据主仓库的任何改变而更新。
 </para>

 <para>
  我们的维基（<ulink url="http://wiki.postgresql.org/wiki/Working_with_Git"></ulink>）上有使用 Git 工作的一些讨论。
 </para>

  <para>
   注意从源代码仓库编译<productname>PostgreSQL</productname>要求合理的最新版本的<application>bison</>、<application>flex</>和<application>Perl</>。这些工具在从一个发布的 tarball 中编译时不需要这些工具，因为它们需要去编译的文件已经被包括在 tarball 中。其他工具要求和<xref linkend="installation">中显示的一样。
  </para>

 <sect1 id="git">
  <title>通过<productname>Git</>得到源码</title>

  <para>
   使用<productname>Git</>你将可以在你的本地机器上创建一份整个代码库的拷贝，这样你将能够离线访问所有历史和分支。这是开发或测试补丁最快也是最灵活的方式。
  </para>

  <procedure>
   <title>Git</title>

   <step>
    <para>
     你将需要一个已安装的<productname>Git</>版本，你可以从<ulink url="http://git-scm.com"></ulink>得到。很多系统已经默认安装了一个最近版本的<application>Git</>，或者可以从它们的包发布系统中找到。
    </para>
   </step>

   <step>
    <para>
     要开始使用 Git 仓库，先做一个官方镜像的克隆：

<programlisting>
git clone git://git.postgresql.org/git/postgresql.git
</programlisting>

     这将复制整个仓库到你的本地机器上，这样它会花上一会儿来完成（特别是如果你使用的互联网连接速度较慢）。文件将被放在你当前目录下的一个新子目录<filename>postgresql</>中。
    </para>

    <para>
     Git 镜像也可以通过 HTTP 协议访问，例如一个防火墙屏蔽 Git 协议访问时可以使用 HTTP。只需要将 URL 前缀改成<literal>http</>：

<programlisting>
git clone http://git.postgresql.org/git/postgresql.git
</programlisting>

     HTTP 协议效率不如 Git 协议，因此它用起来很慢。
    </para>
   </step>

   <step>
    <para>
     不管什么时候你希望得到系统的最新更新，<command>cd</>进入仓库并且运行：

<programlisting>
git fetch
</programlisting>
    </para>
   </step>
  </procedure>

  <para>
   除了取得源码，<productname>Git</>可以做更多事情。要了解更多，请参考<productname>Git</>手册页，或者访问网站<ulink url="http://git-scm.com"></>。
  </para>
 </sect1>

</appendix>
