<!-- doc/src/sgml/dict-xsyn.sgml -->

<sect1 id="dict-xsyn" xreflabel="dict_xsyn">
 <title>dict_xsyn</title>

 <indexterm zone="dict-xsyn">
  <primary>dict_xsyn</primary>
 </indexterm>

 <para>
  <filename>dict_xsyn</>（扩展同义词字典）是一个附加全文搜索字典模板的例子。这种字典类型将词替换为它们的同义词分组，并且让使用其任一同义词进行搜索变得可能。
 </para>

 <sect2>
  <title>配置</title>

  <para>
   一个<literal>dict_xsyn</>词典接受以下选项：
  </para>
  <itemizedlist>
   <listitem>
    <para>
     <literal>matchorig</>控制该词典是否接受原生词。默认为<literal>true</>。
    </para>
   </listitem>
   <listitem>
    <para>
     <literal>matchsynonyms</>控制该词典是否接受同义词。默认为<literal>false</>。
    </para>
   </listitem>
   <listitem>
    <para>
     <literal>keeporig</>控制原生词是否被包括在词典的输出中。默认为<literal>true</>。
    </para>
   </listitem>
   <listitem>
    <para>
     <literal>keepsynonyms</>控制同义词是否被包括在词典的输出中。默认为<literal>true</>。
    </para>
   </listitem>
   <listitem>
    <para>
     <literal>rules</>是包含同义词列表的文件的基本名。这个文件必须被存储在<filename>$SHAREDIR/tsearch_data/</>（其中<literal>$SHAREDIR</>表示<productname>PostgreSQL</>安装的共享数据目录）中。它的名称必须以<literal>.rules</>结束（这不包括在<literal>rules</>参数中）。
    </para>
   </listitem>
  </itemizedlist>
  <para>
   规则文件具有下面的格式：
  </para>
  <itemizedlist>
   <listitem>
    <para>
     每一行表示一个单一词的同义词分组，它在该行中首先被给出。同义词被空白分隔，这样：
<programlisting>
word syn1 syn2 syn3
</programlisting>
    </para>
   </listitem>
   <listitem>
    <para>
     井号（<literal>#</>）是注释定界符。它可以出现在一行中的任何位置。该行的剩余部分将被跳过。
    </para>
   </listitem>
  </itemizedlist>

  <para>
   例如，可以看看安装在<filename>$SHAREDIR/tsearch_data/</>中的<filename>xsyn_sample.rules</>。
  </para>
 </sect2>

 <sect2>
  <title>用法</title>

  <para>
   安装<literal>dict_xsyn</>扩展会用默认参数创建一个文本搜索模板<literal>xsyn_template</>以及一个基于它的词典<literal>xsyn</>。你可以修改参数，例如

<programlisting>
mydb# ALTER TEXT SEARCH DICTIONARY xsyn (RULES='my_rules', KEEPORIG=false);
ALTER TEXT SEARCH DICTIONARY
</programlisting>

   或者基于该模板创建新的词典。
  </para>

  <para>
   要测试该词典，你可以尝试

<programlisting>
mydb=# SELECT ts_lexize('xsyn', 'word');
      ts_lexize
-----------------------
 {syn1,syn2,syn3}

mydb# ALTER TEXT SEARCH DICTIONARY xsyn (RULES='my_rules', KEEPORIG=true);
ALTER TEXT SEARCH DICTIONARY

mydb=# SELECT ts_lexize('xsyn', 'word');
      ts_lexize
-----------------------
 {word,syn1,syn2,syn3}

mydb# ALTER TEXT SEARCH DICTIONARY xsyn (RULES='my_rules', KEEPORIG=false, MATCHSYNONYMS=true);
ALTER TEXT SEARCH DICTIONARY

mydb=# SELECT ts_lexize('xsyn', 'syn1');
      ts_lexize
-----------------------
 {syn1,syn2,syn3}

mydb# ALTER TEXT SEARCH DICTIONARY xsyn (RULES='my_rules', KEEPORIG=true, MATCHORIG=false, KEEPSYNONYMS=false);
ALTER TEXT SEARCH DICTIONARY

mydb=# SELECT ts_lexize('xsyn', 'syn1');
      ts_lexize
-----------------------
 {word}
</programlisting>

   现实世界的用法将涉及将它包括在一个<xref linkend="textsearch">中描述的文本搜索配置中。看起来像这样：

<programlisting>
ALTER TEXT SEARCH CONFIGURATION english
    ALTER MAPPING FOR word, asciiword WITH xsyn, english_stem;
</programlisting>

  </para>
 </sect2>

</sect1>
