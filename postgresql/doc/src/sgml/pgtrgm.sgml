<!-- doc/src/sgml/pgtrgm.sgml -->

<sect1 id="pgtrgm" xreflabel="pg_trgm">
 <title>pg_trgm</title>

 <indexterm zone="pgtrgm">
  <primary>pg_trgm</primary>
 </indexterm>

 <para>
  <filename>pg_trgm</filename>模块提供用于决定基于 trigram 匹配的字母数字文本相似度的函数和操作符，以及支持快速搜索相似字符串的索引操作符类。
 </para>

 <sect2>
  <title>Trigram（或者 Trigraph）概念</title>

  <para>
   一个 trigram 是从一个字符串中取出的由三个连续字符组成的组。我们可以通过对两个字符串之间共享的 trigram 计数来度量它们的相似度。这种简单的思想已经成为在很多自然语言中度量词相似度的有效方法。
  </para>

  <note>
   <para>
    在从一个字符串中提取 trigram 时，<filename>pg_trgm</filename>会忽略非词字符（非字母数字）。在决定字符串中所含的 trigram 集合时，每一个词被认为具有两个空格前缀和一个空格后缀。例如，字符串<quote><literal>cat</literal></quote>中的 trigram 集合是：
    <quote><literal>  c</literal></quote>、
    <quote><literal> ca</literal></quote>、
    <quote><literal>cat</literal></quote>以及
    <quote><literal>at </literal></quote>。
    字符串<quote><literal>foo|bar</literal></quote>中的 trigram 集合是：
    <quote><literal>  f</literal></quote>、
    <quote><literal> fo</literal></quote>、
    <quote><literal>foo</literal></quote>、
    <quote><literal>oo </literal></quote>、
    <quote><literal>  b</literal></quote>、
    <quote><literal> ba</literal></quote>、
    <quote><literal>bar</literal></quote>以及
    <quote><literal>ar </literal></quote>。
   </para>
  </note>
 </sect2>

 <sect2>
  <title>函数和操作符</title>

  <para>
   <filename>pg_trgm</filename>模块所提供的函数如<xref linkend="pgtrgm-func-table">中所示，操作符则显示在<xref linkend="pgtrgm-op-table">中。
  </para>

  <table id="pgtrgm-func-table">
   <title><filename>pg_trgm</filename> 函数</title>
   <tgroup cols="3">
    <thead>
     <row>
      <entry>函数</entry>
      <entry>返回值</entry>
      <entry>描述</entry>
     </row>
    </thead>

    <tbody>
     <row>
      <entry><function>similarity(text, text)</function><indexterm><primary>similarity</primary></indexterm></entry>
      <entry><type>real</type></entry>
      <entry>
       返回一个数字指示两个参数有多相似。该结果的范围是 0（指示两个字符串完全不相似）到 1（指示两个字符串完全一样）。
      </entry>
     </row>
     <row>
      <entry><function>show_trgm(text)</function><indexterm><primary>show_trgm</primary></indexterm></entry>
      <entry><type>text[]</type></entry>
      <entry>
       返回一个给定字符串中所有的 trigram 组成的一个数组（实际上除了调试很少有用）。
      </entry>
     </row>
     <row>
      <entry><function>show_limit()</function><indexterm><primary>show_limit</primary></indexterm></entry>
      <entry><type>real</type></entry>
      <entry>
       返回<literal>%</>操作符使用的当前相似度阈值。例如，这设定两个词被认为足够相似时，它们之间应满足的最小相似度。
      </entry>
     </row>
     <row>
      <entry><function>set_limit(real)</function><indexterm><primary>set_limit</primary></indexterm></entry>
      <entry><type>real</type></entry>
      <entry>
       设定<literal>%</>操作符使用的当前相似度阈值。该阈值必须介于 0 和 1 之间（默认为 0.3）。返回传递进来的同一个值。
      </entry>
     </row>
    </tbody>
   </tgroup>
  </table>

  <table id="pgtrgm-op-table">
   <title><filename>pg_trgm</filename> 操作符</title>
   <tgroup cols="3">
    <thead>
     <row>
      <entry>操作符</entry>
      <entry>返回值</entry>
      <entry>描述</entry>
     </row>
    </thead>

    <tbody>
     <row>
      <entry><type>text</> <literal>%</literal> <type>text</></entry>
      <entry><type>boolean</type></entry>
      <entry>
       如果参数具有超过<function>set_limit</>设置的当前相似度阈值的相似度，则返回<literal>true</>。
      </entry>
     </row>
     <row>
      <entry><type>text</> <literal>&lt;-&gt;</literal> <type>text</></entry>
      <entry><type>real</type></entry>
      <entry>
       返回参数之间的<quote>距离</>，即 1 减去<function>similarity()</>值。
      </entry>
     </row>
    </tbody>
   </tgroup>
  </table>
 </sect2>

 <sect2>
  <title>索引支持</title>

  <para>
   <filename>pg_trgm</filename>模块提供了 GiST 和 GIN 索引操作符类，这允许你在一个文本列上创建索引用于快速相似度搜索的目的。这些索引类型支持上述的相似度操作符，并且额外支持基于 trigram 的索引搜索用于<literal>LIKE</>、<literal>ILIKE</>、<literal>~</>和<literal>~*</>查询（这些索引不支持等值或简单比较操作符，因此你可能还需要一个常规的 B-树索引）。
  </para>

  <para>
   例子：

<programlisting>
CREATE TABLE test_trgm (t text);
CREATE INDEX trgm_idx ON test_trgm USING gist (t gist_trgm_ops);
</programlisting>
或
<programlisting>
CREATE INDEX trgm_idx ON test_trgm USING gin (t gin_trgm_ops);
</programlisting>
  </para>

  <para>
   此时，你将有一个<structfield>t</>列上的索引，你可以用它进行相似度搜索。一个典型的查询是
<programlisting>
SELECT t, similarity(t, '<replaceable>word</>') AS sml
  FROM test_trgm
  WHERE t % '<replaceable>word</>'
  ORDER BY sml DESC, t;
</programlisting>
   这将返回在文本列中与<replaceable>word</>足够相似的所有值，按最佳匹配到最差匹配的方式排序。索引将被用来让这种搜索变快，即使在一个非常大的数据集上。
  </para>

  <para>
   上述查询的一种变体是
<programlisting>
SELECT t, t &lt;-&gt; '<replaceable>word</>' AS dist
  FROM test_trgm
  ORDER BY dist LIMIT 10;
</programlisting>
   这能够用 GiST 索引有效地实现，但是用 GIN 索引无法做到。当只想要少数最接近的匹配时，这通常会比第一种形式更好。
  </para>

  <para>
   从<productname>PostgreSQL</> 9.1 中开始，这些索引类型也支持用于<literal>LIKE</>和<literal>ILIKE</>的索引搜索，例如
<programlisting>
SELECT * FROM test_trgm WHERE t LIKE '%foo%bar';
</programlisting>
   该索引搜索通过从搜索字符串中抽取 trigram 并且在索引中查找它们来工作。搜索字符串中有更多 trigram，索引搜索的效率更高。不像基于 B-树的搜索，搜索字符串不需要是左锚定的。
  </para>

  <para>
   从<productname>PostgreSQL</> 9.3 中开始，这些索引类型也支持用于正则表达式匹配（<literal>~</>和<literal>~*</>操作符）的索引搜索，例如
<programlisting>
SELECT * FROM test_trgm WHERE t ~ '(foo|bar)';
</programlisting>
   该索引搜索通过从正则表达式中抽取 trigram 并且在索引中查找它们来工作。正则表达式中能抽取出更多 trigram，索引搜索的效率更高。不像基于 B-树的搜索，搜索字符串不需要是左锚定的。
  </para>

  <para>
   对于<literal>LIKE</>和正则表达式搜索，记住没有可抽取 trigram 的模式将退化成一个全索引扫描。
  </para>

  <para>
   GiST 和 GIN 索引之间的选择依赖于 GiST 和 GIN 的相对性能特性，这在其他地方讨论。作为一种经验法则，搜索一个 GIN 索引比一个 GiST 索引更快，但是构建或者更新要更慢。所以 GIN 更适合于静态数据，而 GiST 更适合于经常更新的数据。
  </para>
 </sect2>

 <sect2>
  <title>文本搜索集成</title>

  <para>
   在与一个全文索引联合使用时，trigram 匹配是一种非常有用的工具。特别是它能有助于识别拼写错误的输入词，这些词直接用全文搜索机制是不会被匹配的。
  </para>

  <para>
   第一步是生成一个包含文档中所有唯一词的辅助表：

<programlisting>
CREATE TABLE words AS SELECT word FROM
        ts_stat('SELECT to_tsvector(''simple'', bodytext) FROM documents');
</programlisting>

   其中<structname>documents</>是一个具有我们希望搜索的文本域<structfield>bodytext</>的表。对<function>to_tsvector</>函数使用<literal>simple</>配置而不是使用语言相关的配置的原因是，我们想要一个原始（没有去掉词根的）词的列表。
  </para>

  <para>
   接下来，在词列上创建一个 trigram 索引：

<programlisting>
CREATE INDEX words_idx ON words USING gin(word gin_trgm_ops);
</programlisting>

   现在，类似于前面例子的一个<command>SELECT</command>查询可以被用来为用户搜索术语中的拼写不当的词建议拼写。要求被选择的词也与拼写不当的词具有相似的长度是一种有用的额外测试。
  </para>

  <note>
   <para>
    由于<structname>words</>表已经被生成为一个单独的、静态的表，它将需要被定期地重新生成，这样它能合理地与文档集合保持一致。但是要求它完全与文档集合同步通常是不必要的。
   </para>
  </note>
 </sect2>

 <sect2>
  <title>参考</title>

  <para>
   GiST 开发站点
   <ulink url="http://www.sai.msu.su/~megera/postgres/gist/"></ulink>
  </para>
  <para>
   Tsearch2 开发站点
   <ulink url="http://www.sai.msu.su/~megera/postgres/gist/tsearch/V2/"></ulink>
  </para>
 </sect2>

 <sect2>
  <title>作者</title>

  <para>
   Oleg Bartunov <email>oleg@sai.msu.su</email>，俄罗斯莫斯科大学
  </para>
  <para>
   Teodor Sigaev <email>teodor@sigaev.ru</email>，俄罗斯莫斯科 Delta-Soft 有限责任公司
  </para>
  <para>
   文档：Christopher Kings-Lynne
  </para>
  <para>
   这个模块由俄罗斯莫斯科 Delta-Soft 有限责任公司赞助。
  </para>
 </sect2>

</sect1>
