<!-- doc/src/sgml/pgbuffercache.sgml -->

<sect1 id="pgbuffercache" xreflabel="pg_buffercache">
 <title>pg_buffercache</title>

 <indexterm zone="pgbuffercache">
  <primary>pg_buffercache</primary>
 </indexterm>

 <para>
  <filename>pg_buffercache</filename>模块提供了一种方法实时检查共享缓冲区。
 </para>

 <indexterm>
  <primary>pg_buffercache_pages</primary>
 </indexterm>

 <para>
  该模块提供了一个 C 函数<function>pg_buffercache_pages</function>，它返回一个记录的集合，外加一个包装了该函数以便于使用的视图<structname>pg_buffercache</structname>。
 </para>

 <para>
  默认情况下，会从这些函数和视图撤回公共访问，以防有潜在的安全问题。
 </para>

 <sect2>
  <title><structname>pg_buffercache</structname>视图</title>

  <para>
   视图显示的列的定义如<xref linkend="pgbuffercache-columns">所示。
  </para>

  <table id="pgbuffercache-columns">
   <title><structname>pg_buffercache</> 列</title>

   <tgroup cols="4">
    <thead>
     <row>
      <entry>名称</entry>
      <entry>类型</entry>
      <entry>引用</entry>
      <entry>描述</entry>
     </row>
    </thead>
    <tbody>

     <row>
      <entry><structfield>bufferid</structfield></entry>
      <entry><type>integer</type></entry>
      <entry></entry>
      <entry>ID，在范围 1..<varname>shared_buffers</>中</entry>
     </row>

     <row>
      <entry><structfield>relfilenode</structfield></entry>
      <entry><type>oid</type></entry>
      <entry><literal>pg_class.relfilenode</literal></entry>
      <entry>关系的文件结点编号</entry>
     </row>

     <row>
      <entry><structfield>reltablespace</structfield></entry>
      <entry><type>oid</type></entry>
      <entry><literal>pg_tablespace.oid</literal></entry>
      <entry>关系的表空间 OID</entry>
     </row>

     <row>
      <entry><structfield>reldatabase</structfield></entry>
      <entry><type>oid</type></entry>
      <entry><literal>pg_database.oid</literal></entry>
      <entry>关系的数据库 OID</entry>
     </row>

     <row>
      <entry><structfield>relforknumber</structfield></entry>
      <entry><type>smallint</type></entry>
      <entry></entry>
      <entry>关系内的分叉数，见<filename>include/storage/relfilenode.h</></entry>
     </row>
     
     <row>
      <entry><structfield>relblocknumber</structfield></entry>
      <entry><type>bigint</type></entry>
      <entry></entry>
      <entry>关系内的页面数</entry>
     </row>

     <row>
      <entry><structfield>isdirty</structfield></entry>
      <entry><type>boolean</type></entry>
      <entry></entry>
      <entry>页面是否为脏？</entry>
     </row>

     <row>
      <entry><structfield>usagecount</structfield></entry>
      <entry><type>smallint</type></entry>
      <entry></entry>
      <entry>Clock-sweep 访问计数</entry>
     </row>

    </tbody>
   </tgroup>
  </table>

  <para>
   共享缓存中的每一个缓冲区都有一行。没有使用的缓冲区的行中只有<structfield>bufferid</>为非空。共享的系统目录被显示为属于数据库零。
  </para>

  <para>
   因为缓冲是所有数据库共享的，通常会有不属于当前数据库的关系的页面。这意味着对于一些行在<structname>pg_class</>中可能不会有匹配的连接行，或者甚至有错误的连接。如果你试图与<structname>pg_class</>连接，将连接限制于<structfield>reldatabase</>等于当前数据库 OID 或零的行是一个好主意。
  </para>

  <para>
   当访问<structname>pg_buffercache</>视图时，内部缓冲区管理器会被锁住足够长时间来拷贝视图将显示的所有缓冲区状态数据。这确保了该视图会产生一个一致的结果集合，而不会不必要地长时间阻塞普通的缓冲区活动。尽管如此，如果经常读取这个视图还是会对数据库性能产生一些影响。
  </para>
 </sect2>

 <sect2>
  <title>样例输出</title>

<screen>
regression=# SELECT c.relname, count(*) AS buffers
             FROM pg_buffercache b INNER JOIN pg_class c
             ON b.relfilenode = pg_relation_filenode(c.oid) AND
                b.reldatabase IN (0, (SELECT oid FROM pg_database
                                      WHERE datname = current_database()))
             GROUP BY c.relname
             ORDER BY 2 DESC
             LIMIT 10;

             relname             | buffers
---------------------------------+---------
 tenk2                           |     345
 tenk1                           |     141
 pg_proc                         |      46
 pg_class                        |      45
 pg_attribute                    |      43
 pg_class_relname_nsp_index      |      30
 pg_proc_proname_args_nsp_index  |      28
 pg_attribute_relid_attnam_index |      26
 pg_depend                       |      22
 pg_depend_reference_index       |      20
(10 rows)
</screen>
 </sect2>

 <sect2>
  <title>作者</title>

  <para>
   Mark Kirkwood <email>markir@paradise.net.nz</email>
  </para>

  <para>
   设计建议： Neil Conway <email>neilc@samurai.com</email>
  </para>

  <para>
   调试建议： Tom Lane <email>tgl@sss.pgh.pa.us</email>
  </para>
 </sect2>

</sect1>
