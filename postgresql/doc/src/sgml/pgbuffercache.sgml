<!-- doc/src/sgml/pgbuffercache.sgml -->

<sect1 id="pgbuffercache" xreflabel="pg_buffercache">
<!--==========================orignal english content==========================
 <title>pg_buffercache</title>
____________________________________________________________________________-->
 <title>pg_buffercache</title>

<!--==========================orignal english content==========================
 <indexterm zone="pgbuffercache">
  <primary>pg_buffercache</primary>
 </indexterm>
____________________________________________________________________________-->
 <indexterm zone="pgbuffercache">
  <primary>pg_buffercache</primary>
 </indexterm>

<!--==========================orignal english content==========================
 <para>
  The <filename>pg_buffercache</filename> module provides a means for
  examining what's happening in the shared buffer cache in real time.
 </para>
____________________________________________________________________________-->
 <para>
  <filename>pg_buffercache</filename>模块提供了一种方法实时检查共享缓冲区。
 </para>

<!--==========================orignal english content==========================
 <indexterm>
  <primary>pg_buffercache_pages</primary>
 </indexterm>
____________________________________________________________________________-->
 <indexterm>
  <primary>pg_buffercache_pages</primary>
 </indexterm>

<!--==========================orignal english content==========================
 <para>
  The module provides a C function <function>pg_buffercache_pages</function>
  that returns a set of records, plus a view
  <structname>pg_buffercache</structname> that wraps the function for
  convenient use.
 </para>
____________________________________________________________________________-->
 <para>
  该模块提供了一个 C 函数<function>pg_buffercache_pages</function>，它返回一个记录的集合，外加一个包装了该函数以便于使用的视图<structname>pg_buffercache</structname>。
 </para>

<!--==========================orignal english content==========================
 <para>
  By default, use is restricted to superusers and members of the
  <literal>pg_monitor</literal> role. Access may be granted to others
  using <command>GRANT</command>.
 </para>
____________________________________________________________________________-->
 <para>
  默认情况下，使用仅限于超级用户和<literal>pg_monitor</literal>
  角色的成员。可以使用<command>GRANT</command>给其他人授予访问权限。
 </para>

 <sect2>
<!--==========================orignal english content==========================
  <title>The <structname>pg_buffercache</structname> View</title>
____________________________________________________________________________-->
  <title><structname>pg_buffercache</structname>视图</title>

<!--==========================orignal english content==========================
  <para>
   The definitions of the columns exposed by the view are shown in <xref linkend="pgbuffercache-columns"/>.
  </para>
____________________________________________________________________________-->
  <para>
   视图显示的列的定义如<xref linkend="pgbuffercache-columns"/>所示。
  </para>

  <table id="pgbuffercache-columns">
<!--==========================orignal english content==========================
   <title><structname>pg_buffercache</structname> Columns</title>
____________________________________________________________________________-->
   <title><structname>pg_buffercache</structname> 列</title>
   <tgroup cols="1">
    <thead>
<!--==========================orignal english content==========================
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       Column Type
      </para>
      <para>
       Description
      </para></entry>
     </row>
____________________________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       列类型
      </para>
      <para>
       描述
      </para></entry>
     </row>
    </thead>
    <tbody>

<!--==========================orignal english content==========================
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>bufferid</structfield> <type>integer</type>
      </para>
      <para>
       ID, in the range 1..<varname>shared_buffers</varname>
      </para></entry>
     </row>
____________________________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>bufferid</structfield> <type>integer</type>
      </para>
      <para>
       ID，在范围 1..<varname>shared_buffers</varname>中
      </para></entry>
     </row>

<!--==========================orignal english content==========================
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>relfilenode</structfield> <type>oid</type>
       (references <link linkend="catalog-pg-class"><structname>pg_class</structname></link>.<structfield>relfilenode</structfield>)
      </para>
      <para>
       Filenode number of the relation
      </para></entry>
     </row>
____________________________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>relfilenode</structfield> <type>oid</type>
       (references <link linkend="catalog-pg-class"><structname>pg_class</structname></link>.<structfield>relfilenode</structfield>)
      </para>
      <para>
       关系的文件结点编号
      </para></entry>
     </row>

<!--==========================orignal english content==========================
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>reltablespace</structfield> <type>oid</type>
       (references <link linkend="catalog-pg-tablespace"><structname>pg_tablespace</structname></link>.<structfield>oid</structfield>)
      </para>
      <para>
       Tablespace OID of the relation
      </para></entry>
     </row>
____________________________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>reltablespace</structfield> <type>oid</type>
       (references <link linkend="catalog-pg-tablespace"><structname>pg_tablespace</structname></link>.<structfield>oid</structfield>)
      </para>
      <para>
       关系的表空间 OID
      </para></entry>
     </row>

<!--==========================orignal english content==========================
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>reldatabase</structfield> <type>oid</type>
       (references <link linkend="catalog-pg-database"><structname>pg_database</structname></link>.<structfield>oid</structfield>)
      </para>
      <para>
       Database OID of the relation
      </para></entry>
     </row>
____________________________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>reldatabase</structfield> <type>oid</type>
       (references <link linkend="catalog-pg-database"><structname>pg_database</structname></link>.<structfield>oid</structfield>)
      </para>
      <para>
       关系的数据库 OID
      </para></entry>
     </row>

<!--==========================orignal english content==========================
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>relforknumber</structfield> <type>smallint</type>
      </para>
      <para>
       Fork number within the relation;  see
       <filename>include/common/relpath.h</filename>
      </para></entry>
     </row>
____________________________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>relforknumber</structfield> <type>smallint</type>
      </para>
      <para>
       关系内的分叉数，见<filename>include/common/relpath.h</filename>
      </para></entry>
     </row>

<!--==========================orignal english content==========================
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>relblocknumber</structfield> <type>bigint</type>
      </para>
      <para>
       Page number within the relation
      </para></entry>
     </row>
____________________________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>relblocknumber</structfield> <type>bigint</type>
      </para>
      <para>
       关系内的页面数
      </para></entry>
     </row>

<!--==========================orignal english content==========================
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>isdirty</structfield> <type>boolean</type>
      </para>
      <para>
       Is the page dirty?
      </para></entry>
     </row>
____________________________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>isdirty</structfield> <type>boolean</type>
      </para>
      <para>
       页面是否为脏？
      </para></entry>
     </row>

<!--==========================orignal english content==========================
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>usagecount</structfield> <type>smallint</type>
      </para>
      <para>
       Clock-sweep access count
      </para></entry>
     </row>
____________________________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>usagecount</structfield> <type>smallint</type>
      </para>
      <para>
       Clock-sweep 访问计数
      </para></entry>
     </row>

<!--==========================orignal english content==========================
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>pinning_backends</structfield> <type>integer</type>
      </para>
      <para>
       Number of backends pinning this buffer
      </para></entry>
     </row>
____________________________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>pinning_backends</structfield> <type>integer</type>
      </para>
      <para>
       对这个缓冲区加 pin 的后端数量
      </para></entry>
     </row>

    </tbody>
   </tgroup>
  </table>

<!--==========================orignal english content==========================
  <para>
   There is one row for each buffer in the shared cache. Unused buffers are
   shown with all fields null except <structfield>bufferid</structfield>.  Shared system
   catalogs are shown as belonging to database zero.
  </para>
____________________________________________________________________________-->
  <para>
   共享缓存中的每一个缓冲区都有一行。没有使用的缓冲区的行中只有<structfield>bufferid</structfield>为非空。共享的系统目录被显示为属于数据库零。
  </para>

<!--==========================orignal english content==========================
  <para>
   Because the cache is shared by all the databases, there will normally be
   pages from relations not belonging to the current database.  This means
   that there may not be matching join rows in <structname>pg_class</structname> for
   some rows, or that there could even be incorrect joins.  If you are
   trying to join against <structname>pg_class</structname>, it's a good idea to
   restrict the join to rows having <structfield>reldatabase</structfield> equal to
   the current database's OID or zero.
  </para>
____________________________________________________________________________-->
  <para>
   因为缓冲是所有数据库共享的，通常会有不属于当前数据库的关系的页面。这意味着对于一些行在<structname>pg_class</structname>中可能不会有匹配的连接行，或者甚至有错误的连接。如果你试图与<structname>pg_class</structname>连接，将连接限制于<structfield>reldatabase</structfield>等于当前数据库 OID 或零的行是一个好主意。
  </para>

<!--==========================orignal english content==========================
  <para>
   Since buffer manager locks are not taken to copy the buffer state data that
   the view will display, accessing <structname>pg_buffercache</structname> view
   has less impact on normal buffer activity but it doesn't provide a consistent
   set of results across all buffers.  However, we ensure that the information of
   each buffer is self-consistent.
  </para>
____________________________________________________________________________-->
  <para>
   由于缓冲区管理器锁不会用于复制视图将显示的缓冲区状态数据，因此访问<structname>pg_buffercache</structname>视图对正常缓冲区活动的影响较小，但它不会在所有缓冲区中提供一致的结果集。但是，我们确保每个缓冲区的信息是自洽的。
  </para>
 </sect2>

 <sect2>
<!--==========================orignal english content==========================
  <title>Sample Output</title>
____________________________________________________________________________-->
  <title>样例输出</title>

<!--==========================orignal english content==========================
<screen>
regression=# SELECT n.nspname, c.relname, count(*) AS buffers
             FROM pg_buffercache b JOIN pg_class c
             ON b.relfilenode = pg_relation_filenode(c.oid) AND
                b.reldatabase IN (0, (SELECT oid FROM pg_database
                                      WHERE datname = current_database()))
             JOIN pg_namespace n ON n.oid = c.relnamespace
             GROUP BY n.nspname, c.relname
             ORDER BY 3 DESC
             LIMIT 10;

  nspname   |        relname         | buffers
-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;+-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;+-&minus;-&minus;-&minus;-&minus;-
 public     | delete_test_table      |     593
 public     | delete_test_table_pkey |     494
 pg_catalog | pg_attribute           |     472
 public     | quad_poly_tbl          |     353
 public     | tenk2                  |     349
 public     | tenk1                  |     349
 public     | gin_test_idx           |     306
 pg_catalog | pg_largeobject         |     206
 public     | gin_test_tbl           |     188
 public     | spgist_text_tbl        |     182
(10 rows)
</screen>
____________________________________________________________________________-->
<screen>
regression=# SELECT n.nspname, c.relname, count(*) AS buffers
             FROM pg_buffercache b JOIN pg_class c
             ON b.relfilenode = pg_relation_filenode(c.oid) AND
                b.reldatabase IN (0, (SELECT oid FROM pg_database
                                      WHERE datname = current_database()))
             JOIN pg_namespace n ON n.oid = c.relnamespace
             GROUP BY n.nspname, c.relname
             ORDER BY 3 DESC
             LIMIT 10;

  nspname   |        relname         | buffers
------------+------------------------+---------
 public     | delete_test_table      |     593
 public     | delete_test_table_pkey |     494
 pg_catalog | pg_attribute           |     472
 public     | quad_poly_tbl          |     353
 public     | tenk2                  |     349
 public     | tenk1                  |     349
 public     | gin_test_idx           |     306
 pg_catalog | pg_largeobject         |     206
 public     | gin_test_tbl           |     188
 public     | spgist_text_tbl        |     182
(10 rows)
</screen>
 </sect2>

 <sect2>
<!--==========================orignal english content==========================
  <title>Authors</title>
____________________________________________________________________________-->
  <title>作者</title>

<!--==========================orignal english content==========================
  <para>
   Mark Kirkwood <email>markir@paradise.net.nz</email>
  </para>
____________________________________________________________________________-->
  <para>
   Mark Kirkwood <email>markir@paradise.net.nz</email>
  </para>

<!--==========================orignal english content==========================
  <para>
   Design suggestions: Neil Conway <email>neilc@samurai.com</email>
  </para>
____________________________________________________________________________-->
  <para>
   设计建议： Neil Conway <email>neilc@samurai.com</email>
  </para>

<!--==========================orignal english content==========================
  <para>
   Debugging advice: Tom Lane <email>tgl@sss.pgh.pa.us</email>
  </para>
____________________________________________________________________________-->
  <para>
   调试建议： Tom Lane <email>tgl@sss.pgh.pa.us</email>
  </para>
 </sect2>

</sect1>
