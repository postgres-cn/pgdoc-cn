<!-- doc/src/sgml/recovery-config.sgml -->

<chapter id="recovery-config">
<!--==========================orignal english content==========================
  <title>Recovery Configuration</title>
____________________________________________________________________________-->
  <title>恢复配置</title>

<!--==========================orignal english content==========================
  <indexterm>
   <primary>configuration</primary>
   <secondary>of recovery</secondary>
   <tertiary>of a standby server</tertiary>
  </indexterm>
____________________________________________________________________________-->
  <indexterm>
   <primary>configuration</primary>
   <secondary>of recovery</secondary>
   <tertiary>of a standby server</tertiary>
  </indexterm>

<!--==========================orignal english content==========================
   <para>
    This chapter describes the settings available in the
    <filename>recovery.conf</><indexterm><primary>recovery.conf</></>
    file. They apply only for the duration of the
    recovery.  They must be reset for any subsequent recovery you wish to
    perform.  They cannot be changed once recovery has begun.
   </para>
____________________________________________________________________________-->
   <para>
    这一章描述<filename>recovery.conf</filename><indexterm><primary>recovery.conf</primary></indexterm>文件中可用的设置。它们只应用于恢复期。对于你希望执行的任意后续恢复，它们必须被重置。一旦恢复已经开始，它们就不能被更改。
   </para>

<!--==========================orignal english content==========================
   <para>
     Settings in <filename>recovery.conf</> are specified in the format
     <literal>name = 'value'</>. One parameter is specified per line.
     Hash marks (<literal>#</literal>) designate the rest of the
     line as a comment.  To embed a single quote in a parameter
     value, write two quotes (<literal>''</>).
   </para>
____________________________________________________________________________-->
   <para>
     <filename>recovery.conf</filename>中的设置以<literal>name = 'value'</literal>形式指定。每一行指定一个参数。井号（<literal>#</literal>）表示行的剩余部分是一段注释。要在一个参数值中嵌入一个单引号，将其双写（<literal>''</literal>）。
   </para>

<!--==========================orignal english content==========================
   <para>
    A sample file, <filename>share/recovery.conf.sample</>,
    is provided in the installation's <filename>share/</> directory.
   </para>
____________________________________________________________________________-->
   <para>
    作为一个例子文件，<filename>share/recovery.conf.sample</filename>被放置在安装的<filename>share/</filename>目录中。
   </para>

  <sect1 id="archive-recovery-settings">

<!--==========================orignal english content==========================
    <title>Archive Recovery Settings</title>
____________________________________________________________________________-->
    <title>归档恢复设置</title>
     <variablelist>

     <varlistentry id="restore-command" xreflabel="restore_command">
<!--==========================orignal english content==========================
      <term><varname>restore_command</varname> (<type>string</type>)
      <indexterm>
        <primary><varname>restore_command</> recovery parameter</primary>
      </indexterm>
      </term>
____________________________________________________________________________-->
      <term><varname>restore_command</varname> (<type>string</type>)
      <indexterm>
        <primary><varname>restore_command</varname>恢复参数</primary>
      </indexterm>
      </term>
      <listitem>
<!--==========================orignal english content==========================
       <para>
        The local shell command to execute to retrieve an archived segment of
        the WAL file series. This parameter is required for archive recovery,
        but optional for streaming replication.
        Any <literal>%f</> in the string is
        replaced by the name of the file to retrieve from the archive,
        and any <literal>%p</> is replaced by the copy destination path name
        on the server.
        (The path name is relative to the current working directory,
        i.e., the cluster's data directory.)
        Any <literal>%r</> is replaced by the name of the file containing the
        last valid restart point. That is the earliest file that must be kept
        to allow a restore to be restartable, so this information can be used
        to truncate the archive to just the minimum required to support
        restarting from the current restore. <literal>%r</> is typically only
        used by warm-standby configurations
        (see <xref linkend="warm-standby">).
        Write <literal>%%</> to embed an actual <literal>%</> character.
       </para>
____________________________________________________________________________-->
       <para>
        用于获取 WAL 文件系列的一个已归档段的本地 shell 命令。这个参数是归档恢复所必需的，但是对于流复制是可选的。在该字符串中的任何<literal>%f</literal>会被替换为从归档中获得的文件的名字，并且任何<literal>%p</literal>会被在服务器上的复制目标路径名替换（该路径名是相对于当前工作目录的，即集簇的数据目录）。任何<literal>%r</literal>会被包含上一个可用重启点的文件的名字所替换。在那些必须被保留用于使得一次恢复变成可重启的文件中，这个文件是其中最早的一个，因此这个信息可以被用来把归档截断为支持从当前恢复重启所需的最小值。<literal>%r</literal>通常只被温备配置（见<xref linkend="warm-standby"/>）所使用。要嵌入一个真正的<literal>%</literal>字符，需要写成<literal>%%</literal>。
       </para>

<!--==========================orignal english content==========================
       <para>
        It is important for the command to return a zero exit status
        only if it succeeds.  The command <emphasis>will</> be asked for file
        names that are not present in the archive; it must return nonzero
        when so asked.  Examples:
<programlisting>
restore_command = 'cp /mnt/server/archivedir/%f "%p"'
restore_command = 'copy "C:\\server\\archivedir\\%f" "%p"'  # Windows
</programlisting>
        An exception is that if the command was terminated by a signal (other
        than <systemitem>SIGTERM</systemitem>, which is used as part of a
        database server shutdown) or an error by the shell (such as command
        not found), then recovery will abort and the server will not start up.
       </para>
____________________________________________________________________________-->
       <para>
        很重要的一点是，该命令只有在成功时才返回一个为零的退出状态。该命令<emphasis>将</emphasis>会被询问不存在于归档中的文件名，当这样被询问时它必须返回非零。例子：
<programlisting>
restore_command = 'cp /mnt/server/archivedir/%f "%p"'
restore_command = 'copy "C:\\server\\archivedir\\%f" "%p"'  # Windows
</programlisting>
       一个例外是如果该命令被一个信号（不是<systemitem>SIGTERM</systemitem>，它是数据库服务器关闭的一部分）或者一个 shell 错误（例如命令未找到）终止，则恢复将会中止并且服务器将不会启动。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="archive-cleanup-command" xreflabel="archive_cleanup_command">
<!--==========================orignal english content==========================
      <term><varname>archive_cleanup_command</varname> (<type>string</type>)
      <indexterm>
        <primary><varname>archive_cleanup_command</> recovery parameter</primary>
      </indexterm>
      </term>
____________________________________________________________________________-->
      <term><varname>archive_cleanup_command</varname> (<type>string</type>)
      <indexterm>
        <primary><varname>archive_cleanup_command</varname> 恢复参数</primary>
      </indexterm>
      </term>
      <listitem>
<!--==========================orignal english content==========================
       <para>
        This optional parameter specifies a shell command that will be executed
        at every restartpoint.  The purpose of
        <varname>archive_cleanup_command</> is to provide a mechanism for
        cleaning up old archived WAL files that are no longer needed by the
        standby server.
        Any <literal>%r</> is replaced by the name of the file containing the
        last valid restart point.
        That is the earliest file that must be <emphasis>kept</> to allow a
        restore to be restartable, and so all files earlier than <literal>%r</>
        may be safely removed.
        This information can be used to truncate the archive to just the
        minimum required to support restart from the current restore.
        The <xref linkend="pgarchivecleanup"> module
        is often used in <varname>archive_cleanup_command</> for
        single-standby configurations, for example:
<programlisting>archive_cleanup_command = 'pg_archivecleanup /mnt/server/archivedir %r'</programlisting>
        Note however that if multiple standby servers are restoring from the
        same archive directory, you will need to ensure that you do not delete
        WAL files until they are no longer needed by any of the servers.
        <varname>archive_cleanup_command</> would typically be used in a
        warm-standby configuration (see <xref linkend="warm-standby">).
        Write <literal>%%</> to embed an actual <literal>%</> character in the
        command.
       </para>
____________________________________________________________________________-->
       <para>
        这个可选参数指定了一个 shell 命令，它将在每一个重启点被执行。<varname>archive_cleanup_command</varname>的目的是提供一种清除不再被后备服务器需要的旧的已归档 WAL 文件的机制。任何<literal>%r</literal>会被替换为包含最后一个可用重启点的文件的名称。那是使一次恢复变成可重启的所必须被<emphasis>保留</emphasis>的最早的文件，并且因此比<literal>%r</literal>更早的所有文件可以被安全地移除。这个信息可以被用来把归档截断为支持从当前恢复重启所需的最小值。对于单一后备配置，<xref linkend="pgarchivecleanup"/>模块常常被用在<varname>archive_cleanup_command</varname>中，例如：
<programlisting>archive_cleanup_command = 'pg_archivecleanup /mnt/server/archivedir %r'</programlisting>
        但是注意，如果多个后备服务器正在从同一个归档目录中恢复，你将需要保证只有当任意服务器都不再需要 WAL 文件时才会删除它们。<varname>archive_cleanup_command</varname>通常被用于一种温后备配置（见<xref linkend="warm-standby"/>）中。要在该命令中嵌入一个真正的<literal>%</literal>字符，需要写成<literal>%%</literal>。
       </para>
<!--==========================orignal english content==========================
       <para>
        If the command returns a nonzero exit status then a warning log
        message will be written.  An exception is that if the command was
        terminated by a signal or an error by the shell (such as command not
        found), a fatal error will be raised.
       </para>
____________________________________________________________________________-->
       <para>
        如果该命令返回一个非零退出状态，则将会写出一个警告日志消息。一个例外是如果该命令被一个信号或者一个 shell 错误（例如命令未找到）终止，则会抛出一个致命错误。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="recovery-end-command" xreflabel="recovery_end_command">
<!--==========================orignal english content==========================
      <term><varname>recovery_end_command</varname> (<type>string</type>)
      <indexterm>
        <primary><varname>recovery_end_command</> recovery parameter</primary>
      </indexterm>
      </term>
____________________________________________________________________________-->
      <term><varname>recovery_end_command</varname> (<type>string</type>)
      <indexterm>
        <primary><varname>recovery_end_command</varname> 恢复参数</primary>
      </indexterm>
      </term>
      <listitem>
<!--==========================orignal english content==========================
       <para>
        This parameter specifies a shell command that will be executed once only
        at the end of recovery. This parameter is optional. The purpose of the
        <varname>recovery_end_command</> is to provide a mechanism for cleanup
        following replication or recovery.
        Any <literal>%r</> is replaced by the name of the file containing the
        last valid restart point, like in <xref linkend="archive-cleanup-command">.
       </para>
____________________________________________________________________________-->
       <para>
        这个参数指定了一个将只在恢复末尾被执行一次的 shell 命令。这个参数是可选的。<varname>recovery_end_command</varname>的目的是为复制或恢复之后的清除提供一种机制。与<xref linkend="archive-cleanup-command"/>中相似，任何<literal>%r</literal>会被替换为包含最后一个可用重启点的文件的名称。
       </para>
<!--==========================orignal english content==========================
       <para>
        If the command returns a nonzero exit status then a warning log
        message will be written and the database will proceed to start up
        anyway.  An exception is that if the command was terminated by a
        signal or an error by the shell (such as command not found), the
        database will not proceed with startup.
       </para>
____________________________________________________________________________-->
       <para>
        如果该命令返回一个非零退出状态，则一个警告日志消息将被写出并且不管怎样该数据库将继续启动。一个例外是如果该命令被一个信号或者 shell 错误（例如命令未找到）中止，该数据库将不会继续启动。
       </para>
      </listitem>
     </varlistentry>

    </variablelist>

  </sect1>

  <sect1 id="recovery-target-settings">

<!--==========================orignal english content==========================
    <title>Recovery Target Settings</title>
____________________________________________________________________________-->
    <title>恢复目标设置</title>
     
<!--==========================orignal english content==========================
     <para>
      By default, recovery will recover to the end of the WAL log. The
      following parameters can be used to specify an earlier stopping point.
      At most one of <varname>recovery_target</>,
      <varname>recovery_target_lsn</>, <varname>recovery_target_name</>,
      <varname>recovery_target_time</>, or <varname>recovery_target_xid</>
      can be used; if more than one of these is specified in the configuration
      file, the last entry will be used.
     </para>
____________________________________________________________________________-->
     <para>
      默认情况下，恢复将会一直恢复到 WAL 日志的末尾。下面的参数可以被用来指定一个更早的停止点。在<varname>recovery_target</varname>、<varname>recovery_target_lsn</varname>、<varname>recovery_target_name</varname>、<varname>recovery_target_time</varname>和<varname>recovery_target_xid</varname>中，最多只能使用一个，如果在配置文件中使用了多个，将使用最后一个。
     </para>
     
     <variablelist>
     <varlistentry id="recovery-target" xreflabel="recovery_target">
<!--==========================orignal english content==========================
      <term><varname>recovery_target</varname><literal> = 'immediate'</literal>
      <indexterm>
        <primary><varname>recovery_target</> recovery parameter</primary>
      </indexterm>
      </term>
____________________________________________________________________________-->
      <term><varname>recovery_target</varname><literal> = 'immediate'</literal>
      <indexterm>
        <primary><varname>recovery_target</varname> 恢复参数</primary>
      </indexterm>
      </term>
      <listitem>
<!--==========================orignal english content==========================
       <para>
        This parameter specifies that recovery should end as soon as a
        consistent state is reached, i.e. as early as possible. When restoring
        from an online backup, this means the point where taking the backup
        ended.
       </para>
____________________________________________________________________________-->
       <para>
        这个参数指定恢复应该在达到一个一致状态后尽快结束，即尽早结束。在从一个在线备份中恢复时，这意味着备份结束的那个点。
       </para>
<!--==========================orignal english content==========================
       <para>
        Technically, this is a string parameter, but <literal>'immediate'</>
        is currently the only allowed value.
       </para>
____________________________________________________________________________-->
       <para>
        在技术上，这是一个字符串参数，但是<literal>'immediate'</literal>是目前唯一允许的值。
       </para>
      </listitem>
     </varlistentry>
     
     <varlistentry id="recovery-target-name" xreflabel="recovery_target_name">
<!--==========================orignal english content==========================
      <term><varname>recovery_target_name</varname> (<type>string</type>)
      <indexterm>
        <primary><varname>recovery_target_name</> recovery parameter</primary>
      </indexterm>
      </term>
____________________________________________________________________________-->
      <term><varname>recovery_target_name</varname>
           (<type>string</type>)      
      <indexterm>
        <primary><varname>recovery_target_name</varname> 恢复参数</primary>
      </indexterm>
      </term>
      <listitem>
<!--==========================orignal english content==========================
       <para>
        This parameter specifies the named restore point (created with
        <function>pg_create_restore_point()</>) to which recovery will proceed.
       </para>
____________________________________________________________________________-->
       <para>
        这个参数指定（<function>pg_create_restore_point()</function>所创建）的已命名的恢复点，恢复将进入该恢复点。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="recovery-target-time" xreflabel="recovery_target_time">
<!--==========================orignal english content==========================
      <term><varname>recovery_target_time</varname> (<type>timestamp</type>)
      <indexterm>
        <primary><varname>recovery_target_time</> recovery parameter</primary>
      </indexterm>
      </term>
____________________________________________________________________________-->
      <term><varname>recovery_target_time</varname>
           (<type>timestamp</type>)      
      <indexterm>
        <primary><varname>recovery_target_time</varname> 恢复参数</primary>
      </indexterm>
      </term>
      <listitem>
<!--==========================orignal english content==========================
       <para>
        This parameter specifies the time stamp up to which recovery
        will proceed.
        The precise stopping point is also influenced by
        <xref linkend="recovery-target-inclusive">.
       </para>
____________________________________________________________________________-->
       <para>
        这个参数指定恢复将进入的时间戳。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="recovery-target-xid" xreflabel="recovery_target_xid">
<!--==========================orignal english content==========================
      <term><varname>recovery_target_xid</varname> (<type>string</type>)
      <indexterm>
        <primary><varname>recovery_target_xid</> recovery parameter</primary>
      </indexterm>
      </term>
____________________________________________________________________________-->
      <term><varname>recovery_target_xid</varname> (<type>string</type>)
      <indexterm>
        <primary><varname>recovery_target_xid</varname> 恢复参数</primary>
      </indexterm>
      </term>
      <listitem>
<!--==========================orignal english content==========================
       <para>
        This parameter specifies the transaction ID up to which recovery
        will proceed. Keep in mind
        that while transaction IDs are assigned sequentially at transaction
        start, transactions can complete in a different numeric order.
        The transactions that will be recovered are those that committed
        before (and optionally including) the specified one.
        The precise stopping point is also influenced by
        <xref linkend="recovery-target-inclusive">.
       </para>
____________________________________________________________________________-->
       <para>
        这个参数指定恢复将进入的事务 ID。记住虽然事务 ID 是在事务开始时顺序分配的，但是事务可能以不同的数字顺序完成。那些在指定事务之前（也可以包括该事务）提交的事务将被恢复。精确的停止点也受到<xref linkend="recovery-target-inclusive"/>的影响。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="recovery-target-lsn" xreflabel="recovery_target_lsn">
<!--==========================orignal english content==========================
      <term><varname>recovery_target_lsn</varname> (<type>pg_lsn</type>)
      <indexterm>
        <primary><varname>recovery_target_lsn</> recovery parameter</primary>
      </indexterm>
      </term>
____________________________________________________________________________-->
      <term><varname>recovery_target_lsn</varname> (<type>pg_lsn</type>)
      <indexterm>
        <primary><varname>recovery_target_lsn</varname> 恢复参数</primary>
      </indexterm>
      </term>
      <listitem>
<!--==========================orignal english content==========================
       <para>
        This parameter specifies the LSN of the write-ahead log location up
        to which recovery will proceed. The precise stopping point is also
        influenced by <xref linkend="recovery-target-inclusive">. This
        parameter is parsed using the system data type
        <link linkend="datatype-pg-lsn"><type>pg_lsn</></link>.
       </para>
____________________________________________________________________________-->
       <para>
        此参数指定恢复将继续进行的预写日志位置的LSN。精确的停靠点也受
		<xref linkend="recovery-target-inclusive"/>的影响。
		使用系统数据类型<link linkend="datatype-pg-lsn"><type>pg_lsn</type></link>解析此参数。
       </para>
      </listitem>
     </varlistentry>
     </variablelist>

<!--==========================orignal english content==========================
     <para>
       The following options further specify the recovery target, and affect
       what happens when the target is reached:
     </para>
____________________________________________________________________________-->
     <para>
       下列选项进一步指定恢复目标，并且影响到达目标时会发生什么：
     </para>

     <variablelist>
     <varlistentry id="recovery-target-inclusive"
                   xreflabel="recovery_target_inclusive">
<!--==========================orignal english content==========================
      <term><varname>recovery_target_inclusive</varname> (<type>boolean</type>)
      <indexterm>
        <primary><varname>recovery_target_inclusive</> recovery parameter</primary>
      </indexterm>
      </term>
____________________________________________________________________________-->
      <term><varname>recovery_target_inclusive</varname>
        (<type>boolean</type>)      
      <indexterm>
        <primary><varname>recovery_target_inclusive</varname> 恢复参数</primary>
      </indexterm>
      </term>
      <listitem>
<!--==========================orignal english content==========================
       <para>
        Specifies whether to stop just after the specified recovery target
        (<literal>true</literal>), or just before the recovery target
        (<literal>false</literal>).
        Applies when <xref linkend="recovery-target-lsn">,
        <xref linkend="recovery-target-time">, or
        <xref linkend="recovery-target-xid"> is specified.
        This setting controls whether transactions
        having exactly the target WAL location (LSN), commit time, or transaction ID, respectively, will
        be included in the recovery.  Default is <literal>true</>.
       </para>
____________________________________________________________________________-->
       <para>
        指定我们是否仅在指定的恢复目标之后停止（<literal>true</literal>），
		或者仅在恢复目标之前停止（<literal>false</literal>）。
		适用于<xref linkend="recovery-target-lsn"/>、<xref linkend="recovery-target-time"/>
		或者<xref linkend="recovery-target-xid"/>被指定的情况。
		这个设置分别控制事务是否有准确的目标WAL位置(LAN)、提交时间或事务ID将被包括在该恢复中。
		默认值为<literal>true</literal>。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="recovery-target-timeline"
                   xreflabel="recovery_target_timeline">
<!--==========================orignal english content==========================
      <term><varname>recovery_target_timeline</varname> (<type>string</type>)
      <indexterm>
        <primary><varname>recovery_target_timeline</> recovery parameter</primary>
      </indexterm>
      </term>
____________________________________________________________________________-->
      <term><varname>recovery_target_timeline</varname>
        (<type>string</type>)      
      <indexterm>
        <primary><varname>recovery_target_timeline</varname> 恢复参数</primary>
      </indexterm>
      </term>
      <listitem>
<!--==========================orignal english content==========================
       <para>
        Specifies recovering into a particular timeline.  The default is
        to recover along the same timeline that was current when the
        base backup was taken. Setting this to <literal>latest</> recovers
        to the latest timeline found in the archive, which is useful in
        a standby server. Other than that you only need to set this parameter
        in complex re-recovery situations, where you need to return to
        a state that itself was reached after a point-in-time recovery.
        See <xref linkend="backup-timelines"> for discussion.
       </para>
____________________________________________________________________________-->
       <para>
        指定恢复到一个特定的时间线中。默认值是沿着基础备份建立时的当前时间线恢复。将这个参数设置为<literal>latest</literal>会恢复到该归档中能找到的最新的时间线，这在一个后备服务器中有用。除此之外，你只需要在复杂的重恢复情况下设置这个参数，在这种情况下你需要返回到一个状态，该状态本身是在一次时间点恢复之后到达的。相关讨论见<xref linkend="backup-timelines"/>。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="recovery-target-action"
                   xreflabel="recovery_target_action">
<!--==========================orignal english content==========================
      <term><varname>recovery_target_action</varname> (<type>enum</type>)
      <indexterm>
        <primary><varname>recovery_target_action</> recovery parameter</primary>
      </indexterm>
      </term>
____________________________________________________________________________-->
      <term><varname>recovery_target_action</varname> (<type>enum</type>)
      <indexterm>
        <primary><varname>recovery_target_action</varname> 恢复参数</primary>
      </indexterm>
      </term>
      <listitem>
<!--==========================orignal english content==========================
       <para>
        Specifies what action the server should take once the recovery target is
        reached. The default is <literal>pause</>, which means recovery will
        be paused. <literal>promote</> means the recovery process will finish
        and the server will start to accept connections.
        Finally <literal>shutdown</> will stop the server after reaching the
        recovery target.
       </para>
____________________________________________________________________________-->
       <para>
        指定在达到恢复目标时服务器应该立刻采取的动作。默认动作是<literal>pause</literal>，这表示恢复将会被暂停。<literal>promote</literal>表示恢复处理将会结束并且服务器将开始接受连接。最后，<literal>shutdown</literal>将在达到恢复目标之后停止服务器。
       </para>
<!--==========================orignal english content==========================
       <para>
        The intended use of the <literal>pause</> setting is to allow queries
        to be executed against the database to check if this recovery target
        is the most desirable point for recovery.
        The paused state can be resumed by
        using <function>pg_wal_replay_resume()</> (see
        <xref linkend="functions-recovery-control-table">), which then
        causes recovery to end. If this recovery target is not the
        desired stopping point, then shut down the server, change the
        recovery target settings to a later target and restart to
        continue recovery.
       </para>
____________________________________________________________________________-->
       <para>
        使用<literal>pause</literal>设置的目的是：如果这个恢复目标就是恢复最想要的位置，就允许对数据库执行查询。暂停的状态可以使用<function>pg_wal_replay_resume()</function>（见<xref linkend="functions-recovery-control-table"/>）继续，这会让恢复终结。如果这个恢复目标不是想要的停止点，那么关闭服务器，将恢复目标设置改为一个稍后的目标并且重启以继续恢复。
       </para>
<!--==========================orignal english content==========================
       <para>
        The <literal>shutdown</> setting is useful to have the instance ready
        at the exact replay point desired.  The instance will still be able to
        replay more WAL records (and in fact will have to replay WAL records
        since the last checkpoint next time it is started).
       </para>
____________________________________________________________________________-->
       <para>
        要让实例在想要的重放点那里准备好，<literal>shutdown</literal>设置可以派上用场。该实例将仍能重放更多 WAL 记录（并且事实上将不得不重放从下一次它被启动后最后一个检查点以来的 WAL 记录）。
       </para>
<!--==========================orignal english content==========================
       <para>
        Note that because <filename>recovery.conf</> will not be renamed when
        <varname>recovery_target_action</> is set to <literal>shutdown</>,
        any subsequent start will end with immediate shutdown unless the
        configuration is changed or the <filename>recovery.conf</> file is
        removed manually.
       </para>
____________________________________________________________________________-->
       <para>
        注意由于在<varname>recovery_target_action</varname>被设置为<literal>shutdown</literal>时，<filename>recovery.conf</filename>将不会被重命名，任何后续的启动都将会以立刻关闭为终结，除非该配置被改变或者<filename>recovery.conf</filename>文件被手工移除。
       </para>
<!--==========================orignal english content==========================
       <para>
        This setting has no effect if no recovery target is set.
        If <xref linkend="guc-hot-standby"> is not enabled, a setting of
        <literal>pause</> will act the same as <literal>shutdown</>.
       </para>
____________________________________________________________________________-->
       <para>
        如果没有设置恢复目标，这个设置没有效果。如果没有启用<xref linkend="guc-hot-standby"/>，<literal>pause</literal>设置的动作将和<literal>shutdown</literal>一样。
       </para>
      </listitem>
     </varlistentry>

     </variablelist>
   </sect1>

  <sect1 id="standby-settings">

<!--==========================orignal english content==========================
    <title>Standby Server Settings</title>
____________________________________________________________________________-->
    <title>后备服务器设置</title>
     <variablelist>

       <varlistentry id="standby-mode" xreflabel="standby_mode">
<!--==========================orignal english content==========================
        <term><varname>standby_mode</varname> (<type>boolean</type>)
        <indexterm>
          <primary><varname>standby_mode</> recovery parameter</primary>
        </indexterm>
        </term>
____________________________________________________________________________-->
        <term><varname>standby_mode</varname> (<type>boolean</type>)
        <indexterm>
          <primary><varname>standby_mode</varname> 恢复参数</primary>
        </indexterm>
        </term>
        <listitem>
<!--==========================orignal english content==========================
         <para>
          Specifies whether to start the <productname>PostgreSQL</> server as
          a standby. If this parameter is <literal>on</>, the server will
          not stop recovery when the end of archived WAL is reached, but
          will keep trying to continue recovery by fetching new WAL segments
          using <varname>restore_command</>
          and/or by connecting to the primary server as specified by the
          <varname>primary_conninfo</> setting.
         </para>
____________________________________________________________________________-->
         <para>
          指定是否将<productname>PostgreSQL</productname>服务器作为一个后备服务器启动。如果这个参数为<literal>on</literal>，当到达已归档 WAL 末尾时该服务器将不会停止恢复，但是将通过使用<varname>restore_command</varname>获得新的 WAL 段以及/或者通过使用<varname>primary_conninfo</varname>设置连接到主服务器来尝试继续恢复。
         </para>
        </listitem>
       </varlistentry>
       <varlistentry id="primary-conninfo" xreflabel="primary_conninfo">
<!--==========================orignal english content==========================
        <term><varname>primary_conninfo</varname> (<type>string</type>)
        <indexterm>
          <primary><varname>primary_conninfo</> recovery parameter</primary>
        </indexterm>
        </term>
____________________________________________________________________________-->
        <term><varname>primary_conninfo</varname> (<type>string</type>)
        <indexterm>
          <primary><varname>primary_conninfo</varname> 恢复参数</primary>
        </indexterm>
        </term>
        <listitem>
<!--==========================orignal english content==========================
         <para>
          Specifies a connection string to be used for the standby server
          to connect with the primary. This string is in the format
          described in <xref linkend="libpq-connstring">. If any option is
          unspecified in this string, then the corresponding environment
          variable (see <xref linkend="libpq-envars">) is checked. If the
          environment variable is not set either, then
          defaults are used.
         </para>
____________________________________________________________________________-->
         <para>
          指定后备服务器用来连接主服务器的连接字符串。这个字符串的格式在<xref linkend="libpq-connstring"/>中描述。如果在这个字符串中有任何选项未被指定，那么将检查相应的环境变量（见<xref linkend="libpq-envars"/>）。如果环境变量也没有被设置，则使用默认值。
         </para>
<!--==========================orignal english content==========================
         <para>
          The connection string should specify the host name (or address)
          of the primary server, as well as the port number if it is not
          the same as the standby server's default.
          Also specify a user name corresponding to a suitably-privileged role
          on the primary (see
          <xref linkend="streaming-replication-authentication">).
          A password needs to be provided too, if the primary demands password
          authentication.  It can be provided in the
          <varname>primary_conninfo</varname> string, or in a separate
          <filename>~/.pgpass</> file on the standby server (use
          <literal>replication</> as the database name).
          Do not specify a database name in the
          <varname>primary_conninfo</varname> string.
         </para>
____________________________________________________________________________-->
         <para>
          连接字符串应当指定主服务器的主机名（或地址），以及端口号（如果它和后备服务器的默认端口不同）。还要指定对应于主服务器上合适权限角色的用户名（见<xref linkend="streaming-replication-authentication"/>）。如果主服务器要求口令认证，还需要提供一个口令。它可以在<varname>primary_conninfo</varname>字符串中提供，或者在后备服务器（使用<literal>replication</literal>作为数据库名）的一个单独<filename>~/.pgpass</filename>文件中提供。不要在<varname>primary_conninfo</varname>字符串中指定一个数据库名。
         </para>
<!--==========================orignal english content==========================
         <para>
          This setting has no effect if <varname>standby_mode</> is <literal>off</>.
         </para>
____________________________________________________________________________-->
         <para>
          如果<varname>standby_mode</varname>为<literal>off</literal>，这个设置没有效果。
         </para>
        </listitem>
       </varlistentry>
       <varlistentry id="primary-slot-name" xreflabel="primary_slot_name">
<!--==========================orignal english content==========================
        <term><varname>primary_slot_name</varname> (<type>string</type>)
        <indexterm>
          <primary><varname>primary_slot_name</> recovery parameter</primary>
        </indexterm>
        </term>
____________________________________________________________________________-->
        <term><varname>primary_slot_name</varname> (<type>string</type>)
        <indexterm>
          <primary><varname>primary_slot_name</varname> 恢复参数</primary>
        </indexterm>
        </term>
        <listitem>
<!--==========================orignal english content==========================
         <para>
          Optionally specifies an existing replication slot to be used when
          connecting to the primary via streaming replication to control
          resource removal on the upstream node
          (see <xref linkend="streaming-replication-slots">).
          This setting has no effect if <varname>primary_conninfo</> is not
          set.
         </para>
____________________________________________________________________________-->
         <para>
          有选择地指定通过流复制连接到主服务器时使用一个现有的复制槽来控制上游节点上的资源移除（见<xref linkend="streaming-replication-slots"/>）。如果没有设置<varname>primary_conninfo</varname>则这个设置无效。
         </para>
        </listitem>
       </varlistentry>
       <varlistentry id="trigger-file" xreflabel="trigger_file">
<!--==========================orignal english content==========================
        <term><varname>trigger_file</varname> (<type>string</type>)
        <indexterm>
          <primary><varname>trigger_file</> recovery parameter</primary>
        </indexterm>
        </term>
____________________________________________________________________________-->
        <term><varname>trigger_file</varname> (<type>string</type>)
        <indexterm>
          <primary><varname>trigger_file</varname> 恢复参数</primary>
        </indexterm>
        </term>
        <listitem>
<!--==========================orignal english content==========================
         <para>
          Specifies a trigger file whose presence ends recovery in the
          standby.  Even if this value is not set, you can still promote
          the standby using <command>pg_ctl promote</>.
          This setting has no effect if <varname>standby_mode</> is <literal>off</>.
         </para>
____________________________________________________________________________-->
         <para>
          指定一个触发器文件，该文件的存在会结束后备机中的恢复。即使这个值没有被设置，你也能够使用<command>pg_ctl promote</command>来提升后备机。如果<varname>standby_mode</varname>为<literal>off</literal>，这个设置没有效果。
         </para>
        </listitem>
       </varlistentry>
       
       <varlistentry id="recovery-min-apply-delay" xreflabel="recovery_min_apply_delay">
<!--==========================orignal english content==========================
      <term><varname>recovery_min_apply_delay</varname> (<type>integer</type>)
      <indexterm>
        <primary><varname>recovery_min_apply_delay</> recovery parameter</primary>
      </indexterm>
      </term>
____________________________________________________________________________-->
      <term><varname>recovery_min_apply_delay</varname> (<type>integer</type>)
      <indexterm>
        <primary><varname>recovery_min_apply_delay</varname>恢复参数</primary>
      </indexterm>
      </term>
      <listitem>
<!--==========================orignal english content==========================
       <para>
        By default, a standby server restores WAL records from the
        primary as soon as possible. It may be useful to have a time-delayed
        copy of the data, offering opportunities to correct data loss errors.
        This parameter allows you to delay recovery by a fixed period of time,
        measured in milliseconds if no unit is specified.  For example, if
        you set this parameter to <literal>5min</literal>, the standby will
        replay each transaction commit only when the system time on the standby
        is at least five minutes past the commit time reported by the master.
       </para>
____________________________________________________________________________-->
       <para>
        某人情况下，一个后备服务器会尽快恢复来自于主服务器的 WAL 记录。有一份数据的延时拷贝是有用的，它能提供机会纠正数据丢失错误。这个参数允许你将恢复延迟一段固定的时间，如果没有指定单位则以毫秒为单位。例如，如果你设置这个参数为<literal>5min</literal>，对于一个事务提交，只有当后备机上的系统时钟超过主服务器报告的提交时间至少 5分钟时，后备机才会重放该事务。
       </para>
<!--==========================orignal english content==========================
       <para>
        It is possible that the replication delay between servers exceeds the
        value of this parameter, in which case no delay is added.
        Note that the delay is calculated between the WAL time stamp as written
        on master and the current time on the standby. Delays in transfer
        because of network lag or cascading replication configurations
        may reduce the actual wait time significantly. If the system
        clocks on master and standby are not synchronized, this may lead to
        recovery applying records earlier than expected; but that is not a
        major issue because useful settings of this parameter are much larger
        than typical time deviations between servers.
       </para>
____________________________________________________________________________-->
       <para>
        有可能服务器之间的复制延迟会超过这个参数的值，在这种情况下则不会增加延迟。注意延迟是根据主服务器上写 WAL 的时间戳以及后备机上的当前时间来计算。由于网络延迟或者级联复制配置导致的传输延迟可能会显著地减少实际等待时间。如果主服务器和后备机上的系统时钟不同步，这会导致恢复比预期的更早应用记录。但这不是一个主要问题，因为这个参数有用的设置比服务器之间的典型事件偏差要大得多。
       </para>
<!--==========================orignal english content==========================
       <para>
        The delay occurs only on WAL records for transaction commits.
        Other records are replayed as quickly as possible, which
        is not a problem because MVCC visibility rules ensure their effects
        are not visible until the corresponding commit record is applied.
       </para>
____________________________________________________________________________-->
       <para>
        只有在事务提交的 WAL 记录上才会发生延迟。其他记录还是会被尽可能快地重放，这不会成为问题，因为 MVCC 可见性规则确保了在对应的提交记录被应用之前它们的效果不会被看到。
       </para>
<!--==========================orignal english content==========================
       <para>
        The delay occurs once the database in recovery has reached a consistent
        state, until the standby is promoted or triggered. After that the standby
        will end recovery without further waiting.
       </para>
____________________________________________________________________________-->
       <para>
        一旦恢复中的数据库已经达到一致状态，延迟就会产生，直到后备机被提升或者触发。在那之后，后备机将会结束恢复并且不再等待。
       </para>
<!--==========================orignal english content==========================
       <para>
        This parameter is intended for use with streaming replication deployments;
        however, if the parameter is specified it will be honored in all cases.

        <varname>hot_standby_feedback</> will be delayed by use of this feature
        which could lead to bloat on the master; use both together with care.

        <warning>
         <para>
          Synchronous replication is affected by this setting when <varname>synchronous_commit</varname>
          is set to <literal>remote_apply</literal>; every <literal>COMMIT</literal>
          will need to wait to be applied.
         </para>
        </warning>
       </para>
____________________________________________________________________________-->
       <para>
        这个参数的目的是和流复制部署一起使用，但是，如果指定了该参数，所有的情况下都会遵守它。使用这个特性也会让<varname>hot_standby_feedback</varname>被延迟，这可能导致主服务器的膨胀，两者一起使用时要小心。
        
        <warning>
         <para>
          当<varname>synchronous_commit</varname>被设置为<literal>remote_apply</literal>时，同步复制会受到这个设置的影响，每一个<literal>COMMIT</literal>都需要等待被应用。
         </para>
        </warning>
       </para>
      </listitem>
     </varlistentry>

     </variablelist>
   </sect1>

</chapter>
