<!--
doc/src/sgml/ref/alter_type.sgml
PostgreSQL documentation
-->

<refentry id="SQL-ALTERTYPE">
<!--==========================orignal english content==========================
 <indexterm zone="sql-altertype">
  <primary>ALTER TYPE</primary>
 </indexterm>
____________________________________________________________________________-->
 <indexterm zone="sql-altertype">
  <primary>ALTER TYPE</primary>
 </indexterm>

<!--==========================orignal english content==========================
 <refmeta>
  <refentrytitle>ALTER TYPE</refentrytitle>
  <manvolnum>7</manvolnum>
  <refmiscinfo>SQL - Language Statements</refmiscinfo>
 </refmeta>
____________________________________________________________________________-->
 <refmeta>
  <refentrytitle>ALTER TYPE</refentrytitle>
  <manvolnum>7</manvolnum>
  <refmiscinfo>SQL - Language Statements</refmiscinfo>
 </refmeta>

<!--==========================orignal english content==========================
 <refnamediv>
  <refname>ALTER TYPE</refname>
  <refpurpose>
   change the definition of a type
  </refpurpose>
 </refnamediv>
____________________________________________________________________________-->
 <refnamediv>
  <refname>ALTER TYPE</refname>
  <refpurpose>
   更改一个类型的定义
  </refpurpose>
 </refnamediv>

 <refsynopsisdiv>
<!--==========================orignal english content==========================
<synopsis>
ALTER TYPE <replaceable class="parameter">name</replaceable> <replaceable class="parameter">action</replaceable> [, ... ]
ALTER TYPE <replaceable class="parameter">name</replaceable> OWNER TO { <replaceable class="parameter">new_owner</replaceable> | CURRENT_USER | SESSION_USER }
ALTER TYPE <replaceable class="parameter">name</replaceable> RENAME ATTRIBUTE <replaceable class="parameter">attribute_name</replaceable> TO <replaceable class="parameter">new_attribute_name</replaceable> [ CASCADE | RESTRICT ]
ALTER TYPE <replaceable class="parameter">name</replaceable> RENAME TO <replaceable class="parameter">new_name</replaceable>
ALTER TYPE <replaceable class="parameter">name</replaceable> SET SCHEMA <replaceable class="parameter">new_schema</replaceable>
ALTER TYPE <replaceable class="parameter">name</replaceable> ADD VALUE [ IF NOT EXISTS ] <replaceable class="parameter">new_enum_value</replaceable> [ { BEFORE | AFTER } <replaceable class="parameter">neighbor_enum_value</replaceable> ]
ALTER TYPE <replaceable class="parameter">name</replaceable> RENAME VALUE <replaceable class="parameter">existing_enum_value</replaceable> TO <replaceable class="parameter">new_enum_value</replaceable>

<phrase>where <replaceable class="parameter">action</replaceable> is one of:</phrase>

    ADD ATTRIBUTE <replaceable class="parameter">attribute_name</replaceable> <replaceable class="parameter">data_type</replaceable> [ COLLATE <replaceable class="parameter">collation</replaceable> ] [ CASCADE | RESTRICT ]
    DROP ATTRIBUTE [ IF EXISTS ] <replaceable class="parameter">attribute_name</replaceable> [ CASCADE | RESTRICT ]
    ALTER ATTRIBUTE <replaceable class="parameter">attribute_name</replaceable> [ SET DATA ] TYPE <replaceable class="parameter">data_type</replaceable> [ COLLATE <replaceable class="parameter">collation</replaceable> ] [ CASCADE | RESTRICT ]
</synopsis>
____________________________________________________________________________-->
<synopsis>
ALTER TYPE <replaceable class="parameter">name</replaceable> <replaceable class="parameter">action</replaceable> [, ... ]
ALTER TYPE <replaceable class="parameter">name</replaceable> OWNER TO { <replaceable class="parameter">new_owner</replaceable> | CURRENT_USER | SESSION_USER }
ALTER TYPE <replaceable class="parameter">name</replaceable> RENAME ATTRIBUTE <replaceable class="parameter">attribute_name</replaceable> TO <replaceable class="parameter">new_attribute_name</replaceable> [ CASCADE | RESTRICT ]
ALTER TYPE <replaceable class="parameter">name</replaceable> RENAME TO <replaceable class="parameter">new_name</replaceable>
ALTER TYPE <replaceable class="parameter">name</replaceable> SET SCHEMA <replaceable class="parameter">new_schema</replaceable>
ALTER TYPE <replaceable class="parameter">name</replaceable> ADD VALUE [ IF NOT EXISTS ] <replaceable class="parameter">new_enum_value</replaceable> [ { BEFORE | AFTER } <replaceable class="parameter">neighbor_enum_value</replaceable> ]
ALTER TYPE <replaceable class="parameter">name</replaceable> RENAME VALUE <replaceable class="parameter">existing_enum_value</replaceable> TO <replaceable class="parameter">new_enum_value</replaceable>

<phrase>这里<replaceable class="parameter">action</replaceable> 是以下之一：</phrase>

    ADD ATTRIBUTE <replaceable class="parameter">attribute_name</replaceable> <replaceable class="parameter">data_type</replaceable> [ COLLATE <replaceable class="parameter">collation</replaceable> ] [ CASCADE | RESTRICT ]
    DROP ATTRIBUTE [ IF EXISTS ] <replaceable class="parameter">attribute_name</replaceable> [ CASCADE | RESTRICT ]
    ALTER ATTRIBUTE <replaceable class="parameter">attribute_name</replaceable> [ SET DATA ] TYPE <replaceable class="parameter">data_type</replaceable> [ COLLATE <replaceable class="parameter">collation</replaceable> ] [ CASCADE | RESTRICT ]
</synopsis>
 </refsynopsisdiv>

 <refsect1>
<!--==========================orignal english content==========================
  <title>Description</title>
____________________________________________________________________________-->
  <title>描述</title>

<!--==========================orignal english content==========================
  <para>
   <command>ALTER TYPE</command> changes the definition of an existing type.
   There are several subforms:

  <variablelist>
   <varlistentry>
    <term><literal>ADD ATTRIBUTE</literal></term>
    <listitem>
     <para>
      This form adds a new attribute to a composite type, using the same syntax as
      <xref linkend="SQL-CREATETYPE">.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>DROP ATTRIBUTE [ IF EXISTS ]</literal></term>
    <listitem>
     <para>
      This form drops an attribute from a composite type.
      If <literal>IF EXISTS</literal> is specified and the attribute
      does not exist, no error is thrown. In this case a notice
      is issued instead.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>SET DATA TYPE</literal></term>
    <listitem>
     <para>
      This form changes the type of an attribute of a composite type.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>OWNER</literal></term>
    <listitem>
     <para>
      This form changes the owner of the type.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>RENAME</literal></term>
    <listitem>
     <para>
      This form changes the name of the type or the name of an
      individual attribute of a composite type.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>SET SCHEMA</literal></term>
    <listitem>
     <para>
      This form moves the type into another schema.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>ADD VALUE [ IF NOT EXISTS ] [ BEFORE | AFTER ]</literal></term>
    <listitem>
     <para>
      This form adds a new value to an enum type.  The new value's place in
      the enum's ordering can be specified as being <literal>BEFORE</literal>
      or <literal>AFTER</literal> one of the existing values.  Otherwise,
      the new item is added at the end of the list of values.
     </para>
     <para>
      If <literal>IF NOT EXISTS</literal> is specified, it is not an error if
      the type already contains the new value: a notice is issued but no other
      action is taken. Otherwise, an error will occur if the new value is
      already present.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>RENAME VALUE</literal></term>
    <listitem>
     <para>
      This form renames a value of an enum type.
      The value's place in the enum's ordering is not affected.
      An error will occur if the specified value is not present or the new
      name is already present.
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
  </para>
____________________________________________________________________________-->
  <para>
   <command>ALTER TYPE</command>更改一种现有类型的定义。
   它有几种形式：

  <variablelist>
   <varlistentry>
    <term><literal>ADD ATTRIBUTE</literal></term>
    <listitem>
     <para>
      这种形式为一种组合类型增加一个新属性，使用的语法和
      <xref linkend="SQL-CREATETYPE"/>相同。
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>DROP ATTRIBUTE [ IF EXISTS ]</literal></term>
    <listitem>
     <para>
      这种形式从一种组合类型删除一个属性。如果指定了
      <literal>IF EXISTS</literal>并且该属性不存在，则不会抛出错误。
      这种情况下会发出一个提示。
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>SET DATA TYPE</literal></term>
    <listitem>
     <para>
      这种形式更改一种组合类型的一个属性类型。
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>OWNER</literal></term>
    <listitem>
     <para>
      这种形式更改该类型的拥有者。
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>RENAME</literal></term>
    <listitem>
     <para>
      这种形式更改该类型的名称或者一种组合类型的一个属性的名称。
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>SET SCHEMA</literal></term>
    <listitem>
     <para>
      这种形式把该类型移动到另一个模式中。
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>ADD VALUE [ IF NOT EXISTS ] [ BEFORE | AFTER ]</literal></term>
    <listitem>
     <para>
      这种形式为一种枚举类型增加一个新值。可以用<literal>BEFORE</literal>或者
      <literal>AFTER</literal>一个现有值来指定新值在枚举顺序中的位置。
      否则，新项会被增加在值列表的最后。
     </para>
     <para>
      如果指定了<literal>IF NOT EXISTS</literal>，该类型已经包含新值时不会发生
      错误：会发出一个提示但是不采取其他行动。否则，如果新值已经存在会发生错误。
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>RENAME VALUE</literal></term>
    <listitem>
     <para>
      该形式重命名枚举类型的值。该值在枚举排序中的位置不受影响。
	  如果指定的值不存在或新名称已存在，则会发生错误。
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
  </para>

<!--==========================orignal english content==========================
  <para>
   The <literal>ADD ATTRIBUTE</literal>, <literal>DROP
   ATTRIBUTE</literal>, and <literal>ALTER ATTRIBUTE</literal> actions
   can be combined into a list of multiple alterations to apply in
   parallel.  For example, it is possible to add several attributes
   and/or alter the type of several attributes in a single command.
  </para>
____________________________________________________________________________-->
  <para>
   <literal>ADD ATTRIBUTE</literal>、<literal>DROP
   ATTRIBUTE</literal>和<literal>ALTER ATTRIBUTE</literal>动作
   可以被整合到一个多个修改组成的列表中，以便被平行应用。例如，
   可以在一个命令中增加多个属性并且/或者修改多个属性的类型。
  </para>

<!--==========================orignal english content==========================
  <para>
   You must own the type to use <command>ALTER TYPE</>.
   To change the schema of a type, you must also have
   <literal>CREATE</literal> privilege on the new schema.
   To alter the owner, you must also be a direct or indirect member of the new
   owning role, and that role must have <literal>CREATE</literal> privilege on
   the type's schema.  (These restrictions enforce that altering the owner
   doesn't do anything you couldn't do by dropping and recreating the type.
   However, a superuser can alter ownership of any type anyway.)
   To add an attribute or alter an attribute type, you must also
   have <literal>USAGE</literal> privilege on the data type.
  </para>
____________________________________________________________________________-->
  <para>
   要使用<command>ALTER TYPE</command>，你必须拥有该类型。要更改
   一个类型的模式，你还必须拥有新模式上的
   <literal>CREATE</literal>特权。要更改拥有者，你还必须
   是新拥有角色的一个直接或者间接成员，并且该角色必须具有该类型的模式上的
   <literal>CREATE</literal>特权（这些限制强制修改拥有者不能做一些通过删除和重
   建该类型做不到的事情。不过，一个超级用户怎么都能更改任何类型的所有权。）。
   要增加一个属性或者修改一个属性类型，你还必须具有该数据类型上的
   <literal>USAGE</literal>特权。
  </para>
 </refsect1>

 <refsect1>
<!--==========================orignal english content==========================
  <title>Parameters</title>
____________________________________________________________________________-->
  <title>参数</title>

<!--==========================orignal english content==========================
   <para>
    <variablelist>
     <varlistentry>
      <term><replaceable class="parameter">name</replaceable></term>
      <listitem>
       <para>
        The name (possibly schema-qualified) of an existing type to
        alter.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><replaceable class="parameter">new_name</replaceable></term>
      <listitem>
       <para>
        The new name for the type.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><replaceable class="parameter">new_owner</replaceable></term>
      <listitem>
       <para>
        The user name of the new owner of the type.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><replaceable class="parameter">new_schema</replaceable></term>
      <listitem>
       <para>
        The new schema for the type.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><replaceable class="parameter">attribute_name</replaceable></term>
      <listitem>
       <para>
        The name of the attribute to add, alter, or drop.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><replaceable class="parameter">new_attribute_name</replaceable></term>
      <listitem>
       <para>
        The new name of the attribute to be renamed.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><replaceable class="parameter">data_type</replaceable></term>
      <listitem>
       <para>
        The data type of the attribute to add, or the new type of the
        attribute to alter.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><replaceable class="parameter">new_enum_value</replaceable></term>
      <listitem>
       <para>
        The new value to be added to an enum type's list of values,
        or the new name to be given to an existing value.
        Like all enum literals, it needs to be quoted.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><replaceable class="parameter">neighbor_enum_value</replaceable></term>
      <listitem>
       <para>
        The existing enum value that the new value should be added immediately
        before or after in the enum type's sort ordering.
        Like all enum literals, it needs to be quoted.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><replaceable class="parameter">existing_enum_value</replaceable></term>
      <listitem>
       <para>
        The existing enum value that should be renamed.
        Like all enum literals, it needs to be quoted.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><literal>CASCADE</literal></term>
      <listitem>
       <para>
        Automatically propagate the operation to typed tables of the
        type being altered, and their descendants.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><literal>RESTRICT</literal></term>
      <listitem>
       <para>
        Refuse the operation if the type being altered is the type of a
        typed table.  This is the default.
       </para>
      </listitem>
     </varlistentry>

    </variablelist>
   </para>
____________________________________________________________________________-->
   <para>
    <variablelist>
     <varlistentry>
      <term><replaceable class="parameter">name</replaceable></term>
      <listitem>
       <para>
        要修改的一个现有类型的名称（可能被模式限定）。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><replaceable class="parameter">new_name</replaceable></term>
      <listitem>
       <para>
        该类型的新名称。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><replaceable class="parameter">new_owner</replaceable></term>
      <listitem>
       <para>
        该类型新拥有者的用户名。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><replaceable class="parameter">new_schema</replaceable></term>
      <listitem>
       <para>
        该类型的新模式。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><replaceable class="parameter">attribute_name</replaceable></term>
      <listitem>
       <para>
        要增加、修改或者删除的属性名称。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><replaceable class="parameter">new_attribute_name</replaceable></term>
      <listitem>
       <para>
        要被重命名的属性的新名称。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><replaceable class="parameter">data_type</replaceable></term>
      <listitem>
       <para>
        要增加的属性的数据类型，或者是要修改的属性的新类型。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><replaceable class="parameter">new_enum_value</replaceable></term>
      <listitem>
       <para>
        要被增加到一个枚举类型的值列表的新值，或将赋予现有值的新名称。
		和所有枚举文本一样，它需要被引号引用。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><replaceable class="parameter">neighbor_enum_value</replaceable></term>
      <listitem>
       <para>
        一个现有枚举值，新值应该被增加在紧接着该枚举值之前或者
        之后的位置上。和所有枚举文本一样，它需要被引号引用。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><replaceable class="parameter">existing_enum_value</replaceable></term>
      <listitem>
       <para>
        现有的应该重命名的枚举值。和所有的枚举文本一样，它需要被引号引用。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><literal>CASCADE</literal></term>
      <listitem>
       <para>
        自动将操作传播到被更改类型的类型表及其后代。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><literal>RESTRICT</literal></term>
      <listitem>
       <para>
        如果被更改的类型是类型表的类型，则拒绝该操作。这是默认设置。
       </para>
      </listitem>
     </varlistentry>

    </variablelist>
   </para>
  </refsect1>

 <refsect1>
<!--==========================orignal english content==========================
  <title>Notes</title>
____________________________________________________________________________-->
  <title>注解</title>

<!--==========================orignal english content==========================
  <para>
   <command>ALTER TYPE ... ADD VALUE</> (the form that adds a new value to an
   enum type) cannot be executed inside a transaction block.
  </para>
____________________________________________________________________________-->
  <para>
   <command>ALTER TYPE ... ADD VALUE</command>（增加一个新值到枚举类型的形式）
   不能在一个事务块中执行。
  </para>

<!--==========================orignal english content==========================
  <para>
   Comparisons involving an added enum value will sometimes be slower than
   comparisons involving only original members of the enum type.  This will
   usually only occur if <literal>BEFORE</literal> or <literal>AFTER</literal>
   is used to set the new value's sort position somewhere other than at the
   end of the list.  However, sometimes it will happen even though the new
   value is added at the end (this occurs if the OID counter <quote>wrapped
   around</> since the original creation of the enum type).  The slowdown is
   usually insignificant; but if it matters, optimal performance can be
   regained by dropping and recreating the enum type, or by dumping and
   reloading the database.
  </para>
____________________________________________________________________________-->
  <para>
   涉及到一个新增加枚举值的比较有时会被只涉及原始枚举值的比较更慢。这通常
   只会在利用<literal>BEFORE</literal>或者<literal>AFTER</literal>来把新值的
   排序位置设置为非列表结尾的地方时发生。不过，有时候即使把新值增加到最后时
   也会发生这种情况（如果创建了该枚举类型之后出现过 OID 计数器
   <quote>回卷</quote>，就会发生这种情况）。这种减速通常不明显，但是如果它确实
   带来了麻烦，通过删除并且重建该枚举类型或者转储并且重载整个数据库可以重新
   得到最优性能。
  </para>
 </refsect1>

 <refsect1>
<!--==========================orignal english content==========================
  <title>Examples</title>
____________________________________________________________________________-->
  <title>示例</title>

<!--==========================orignal english content==========================
  <para>
   To rename a data type:
<programlisting>
ALTER TYPE electronic_mail RENAME TO email;
</programlisting>
  </para>
____________________________________________________________________________-->
  <para>
   要重命名一个数据类型：
<programlisting>
ALTER TYPE electronic_mail RENAME TO email;
</programlisting>
  </para>

<!--==========================orignal english content==========================
  <para>
   To change the owner of the type <literal>email</literal>
   to <literal>joe</literal>:
<programlisting>
ALTER TYPE email OWNER TO joe;
</programlisting>
  </para>
____________________________________________________________________________-->
  <para>
   把类型<literal>email</literal>的拥有者改为
   <literal>joe</literal>：
<programlisting>
ALTER TYPE email OWNER TO joe;
</programlisting>
  </para>

<!--==========================orignal english content==========================
  <para>
   To change the schema of the type <literal>email</literal>
   to <literal>customers</literal>:
<programlisting>
ALTER TYPE email SET SCHEMA customers;
</programlisting>
  </para>
____________________________________________________________________________-->
  <para>
   把类型<literal>email</literal>的模式改为
   <literal>customers</literal>：
<programlisting>
ALTER TYPE email SET SCHEMA customers;
</programlisting>
  </para>

<!--==========================orignal english content==========================
  <para>
   To add a new attribute to a type:
<programlisting>
ALTER TYPE compfoo ADD ATTRIBUTE f3 int;
</programlisting>
  </para>
____________________________________________________________________________-->
  <para>
   增加一个新属性到一个类型：
<programlisting>
ALTER TYPE compfoo ADD ATTRIBUTE f3 int;
</programlisting>
  </para>

<!--==========================orignal english content==========================
  <para>
   To add a new value to an enum type in a particular sort position:
<programlisting>
ALTER TYPE colors ADD VALUE 'orange' AFTER 'red';
</programlisting>
  </para>
____________________________________________________________________________-->
  <para>
   在一个特定的排序位置上为一个枚举类型增加一个新值：
<programlisting>
ALTER TYPE colors ADD VALUE 'orange' AFTER 'red';
</programlisting>
  </para>

<!--==========================orignal english content==========================
  <para>
   To rename an enum value:
<programlisting>
ALTER TYPE colors RENAME VALUE 'purple' TO 'mauve';
</programlisting></para>
____________________________________________________________________________-->
  <para>
   重命名一个枚举值：
<programlisting>
ALTER TYPE colors RENAME VALUE 'purple' TO 'mauve';
</programlisting></para>
 </refsect1>

 <refsect1>
<!--==========================orignal english content==========================
  <title>Compatibility</title>
____________________________________________________________________________-->
  <title>兼容性</title>

<!--==========================orignal english content==========================
  <para>
   The variants to add and drop attributes are part of the SQL
   standard; the other variants are PostgreSQL extensions.
  </para>
____________________________________________________________________________-->
  <para>
   增加和删除属性的变体是 SQL 标准的一部分，而其他变体是
   PostgreSQL 扩展。
  </para>
 </refsect1>

 <refsect1 id="SQL-ALTERTYPE-see-also">
<!--==========================orignal english content==========================
  <title>See Also</title>
____________________________________________________________________________-->
  <title>另见</title>

  <simplelist type="inline">
   <member><xref linkend="sql-createtype"/></member>
   <member><xref linkend="sql-droptype"/></member>
  </simplelist>
 </refsect1>
</refentry>
