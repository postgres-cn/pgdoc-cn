<!--
doc/src/sgml/ref/drop_opclass.sgml
PostgreSQL documentation
-->

<refentry id="SQL-DROPOPCLASS">
<!--==========================orignal english content==========================
 <indexterm zone="sql-dropopclass">
  <primary>DROP OPERATOR CLASS</primary>
 </indexterm>
____________________________________________________________________________-->
 <indexterm zone="sql-dropopclass">
  <primary>DROP OPERATOR CLASS</primary>
 </indexterm>

<!--==========================orignal english content==========================
 <refmeta>
  <refentrytitle>DROP OPERATOR CLASS</refentrytitle>
  <manvolnum>7</manvolnum>
  <refmiscinfo>SQL - Language Statements</refmiscinfo>
 </refmeta>
____________________________________________________________________________-->
 <refmeta>
  <refentrytitle>DROP OPERATOR CLASS</refentrytitle>
  <manvolnum>7</manvolnum>
  <refmiscinfo>SQL - Language Statements</refmiscinfo>
 </refmeta>

<!--==========================orignal english content==========================
 <refnamediv>
  <refname>DROP OPERATOR CLASS</refname>
  <refpurpose>remove an operator class</refpurpose>
 </refnamediv>
____________________________________________________________________________-->
 <refnamediv>
  <refname>DROP OPERATOR CLASS</refname>
  <refpurpose>移除一个操作符类</refpurpose>
 </refnamediv>

 <refsynopsisdiv>
<!--==========================orignal english content==========================
<synopsis>
DROP OPERATOR CLASS [ IF EXISTS ] <replaceable class="parameter">name</replaceable> USING <replaceable class="parameter">index_method</replaceable> [ CASCADE | RESTRICT ]
</synopsis>
____________________________________________________________________________-->
<synopsis>
DROP OPERATOR CLASS [ IF EXISTS ] <replaceable class="parameter">name</replaceable> USING <replaceable class="parameter">index_method</replaceable> [ CASCADE | RESTRICT ]
</synopsis>
 </refsynopsisdiv>

 <refsect1>
<!--==========================orignal english content==========================
  <title>Description</title>
____________________________________________________________________________-->
  <title>描述</title>

<!--==========================orignal english content==========================
  <para>
   <command>DROP OPERATOR CLASS</command> drops an existing operator class.
   To execute this command you must be the owner of the operator class.
  </para>
____________________________________________________________________________-->
  <para>
   <command>DROP OPERATOR CLASS</command>删除一个现有的
   操作符类。要执行这个命令，你必须是该操作符类的拥有者。
  </para>

<!--==========================orignal english content==========================
  <para>
   <command>DROP OPERATOR CLASS</command> does not drop any of the operators
   or functions referenced by the class.  If there are any indexes depending
   on the operator class, you will need to specify
   <literal>CASCADE</> for the drop to complete.
  </para>
____________________________________________________________________________-->
  <para>
   <command>DROP OPERATOR CLASS</command>不会删除任何被
   该类引用的操作符或者函数。如果有索引依赖于该操作符类，你将需要指
   定<literal>CASCADE</literal>来完成删除。
  </para>
 </refsect1>

 <refsect1>
<!--==========================orignal english content==========================
  <title>Parameters</title>
____________________________________________________________________________-->
  <title>参数</title>

  <variablelist>

   <varlistentry>
<!--==========================orignal english content==========================
    <term><literal>IF EXISTS</literal></term>
____________________________________________________________________________-->
    <term><literal>IF EXISTS</literal></term>
    <listitem>
<!--==========================orignal english content==========================
     <para>
      Do not throw an error if the operator class does not exist. A notice is issued
      in this case.
     </para>
____________________________________________________________________________-->
     <para>
      如果该操作符类不存在则不要抛出一个错误，而是发出一个提示。
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
<!--==========================orignal english content==========================
    <term><replaceable class="parameter">name</replaceable></term>
____________________________________________________________________________-->
    <term><replaceable class="parameter">name</replaceable></term>
    <listitem>
<!--==========================orignal english content==========================
     <para>
      The name (optionally schema-qualified) of an existing operator class.
     </para>
____________________________________________________________________________-->
     <para>
      一个现有的操作符类的名称（可以是模式限定的）。
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
<!--==========================orignal english content==========================
    <term><replaceable class="parameter">index_method</replaceable></term>
____________________________________________________________________________-->
    <term><replaceable class="parameter">index_method</replaceable></term>
    <listitem>
<!--==========================orignal english content==========================
     <para>
      The name of the index access method the operator class is for.
     </para>
____________________________________________________________________________-->
     <para>
      该操作符类适用的索引访问方法的名称。
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
<!--==========================orignal english content==========================
    <term><literal>CASCADE</literal></term>
____________________________________________________________________________-->
    <term><literal>CASCADE</literal></term>
    <listitem>
<!--==========================orignal english content==========================
     <para>
      Automatically drop objects that depend on the operator class (such as
      indexes), and in turn all objects that depend on those objects
      (see <xref linkend="ddl-depend">).
     </para>
____________________________________________________________________________-->
     <para>
      自动删除依赖于该操作符类的对象（例如索引），然后删除所有
      依赖于那些对象的对象（见<xref linkend="ddl-depend"/>）。
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
<!--==========================orignal english content==========================
    <term><literal>RESTRICT</literal></term>
____________________________________________________________________________-->
    <term><literal>RESTRICT</literal></term>
    <listitem>
<!--==========================orignal english content==========================
     <para>
      Refuse to drop the operator class if any objects depend on it.
      This is the default.
     </para>
____________________________________________________________________________-->
     <para>
      如果有任何对象依赖于该操作符类，则拒绝删除它。这是默认值。
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </refsect1>

 <refsect1>
<!--==========================orignal english content==========================
  <title>Notes</title>
____________________________________________________________________________-->
  <title>注解</title>

<!--==========================orignal english content==========================
  <para>
   <command>DROP OPERATOR CLASS</> will not drop the operator family
   containing the class, even if there is nothing else left in the
   family (in particular, in the case where the family was implicitly
   created by <command>CREATE OPERATOR CLASS</>).  An empty operator
   family is harmless, but for the sake of tidiness you might wish to
   remove the family with <command>DROP OPERATOR FAMILY</>; or perhaps
   better, use <command>DROP OPERATOR FAMILY</> in the first place.
  </para>
____________________________________________________________________________-->
  <para>
   <command>DROP OPERATOR CLASS</command>将不会删除包含该类的
   操作符族，即使该族中已经没有任何成员（特别是由
   <command>CREATE OPERATOR CLASS</command>隐式创建的族）。一个
   空操作符族是无害的，但是为了整洁你可能希望用
   <command>DROP OPERATOR FAMILY</command>移除该操作符族，或者
   一开始就使用<command>DROP OPERATOR FAMILY</command>会更好。
  </para>
 </refsect1>

 <refsect1>
<!--==========================orignal english content==========================
  <title>Examples</title>
____________________________________________________________________________-->
  <title>示例</title>

<!--==========================orignal english content==========================
  <para>
   Remove the B-tree operator class <literal>widget_ops</literal>:

<programlisting>
DROP OPERATOR CLASS widget_ops USING btree;
</programlisting>

   This command will not succeed if there are any existing indexes
   that use the operator class.  Add <literal>CASCADE</> to drop
   such indexes along with the operator class.
  </para>
____________________________________________________________________________-->
  <para>
   移除 B-树操作符类<literal>widget_ops</literal>：

<programlisting>
DROP OPERATOR CLASS widget_ops USING btree;
</programlisting>

   如果有任何使用该操作符类的索引存在，这个命令都不会成功。增加
   <literal>CASCADE</literal>可以把这类索引与该操作符类一起删除。
  </para>
 </refsect1>

 <refsect1>
<!--==========================orignal english content==========================
  <title>Compatibility</title>
____________________________________________________________________________-->
  <title>兼容性</title>

<!--==========================orignal english content==========================
  <para>
   There is no <command>DROP OPERATOR CLASS</command> statement in the
   SQL standard.
  </para>
____________________________________________________________________________-->
  <para>
   SQL 标准中没有<command>DROP OPERATOR CLASS</command>语句。
  </para>
 </refsect1>

 <refsect1>
<!--==========================orignal english content==========================
  <title>See Also</title>
____________________________________________________________________________-->
  <title>另见</title>

  <simplelist type="inline">
   <member><xref linkend="sql-alteropclass"/></member>
   <member><xref linkend="sql-createopclass"/></member>
   <member><xref linkend="sql-dropopfamily"/></member>
  </simplelist>
 </refsect1>

</refentry>
