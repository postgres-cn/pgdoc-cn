<!--
doc/src/sgml/ref/revoke.sgml
PostgreSQL documentation
-->

<refentry id="SQL-REVOKE">
<!--==========================orignal english content==========================
 <indexterm zone="sql-revoke">
  <primary>REVOKE</primary>
 </indexterm>
____________________________________________________________________________-->
 <indexterm zone="sql-revoke">
  <primary>REVOKE</primary>
 </indexterm>

<!--==========================orignal english content==========================
 <refmeta>
  <refentrytitle>REVOKE</refentrytitle>
  <manvolnum>7</manvolnum>
  <refmiscinfo>SQL - Language Statements</refmiscinfo>
 </refmeta>
____________________________________________________________________________-->
 <refmeta>
  <refentrytitle>REVOKE</refentrytitle>
  <manvolnum>7</manvolnum>
  <refmiscinfo>SQL - Language Statements</refmiscinfo>
 </refmeta>

<!--==========================orignal english content==========================
 <refnamediv>
  <refname>REVOKE</refname>
  <refpurpose>remove access privileges</refpurpose>
 </refnamediv>
____________________________________________________________________________-->
 <refnamediv>
  <refname>REVOKE</refname>
  <refpurpose>移除访问特权</refpurpose>
 </refnamediv>

 <refsynopsisdiv>
<!--==========================orignal english content==========================
<synopsis>
REVOKE [ GRANT OPTION FOR ]
    { { SELECT | INSERT | UPDATE | DELETE | TRUNCATE | REFERENCES | TRIGGER }
    [, ...] | ALL [ PRIVILEGES ] }
    ON { [ TABLE ] <replaceable class="parameter">table_name</replaceable> [, ...]
         | ALL TABLES IN SCHEMA <replaceable>schema_name</replaceable> [, ...] }
    FROM { [ GROUP ] <replaceable class="parameter">role_name</replaceable> | PUBLIC } [, ...]
    [ CASCADE | RESTRICT ]

REVOKE [ GRANT OPTION FOR ]
    { { SELECT | INSERT | UPDATE | REFERENCES } ( <replaceable class="parameter">column_name</replaceable> [, ...] )
    [, ...] | ALL [ PRIVILEGES ] ( <replaceable class="parameter">column_name</replaceable> [, ...] ) }
    ON [ TABLE ] <replaceable class="parameter">table_name</replaceable> [, ...]
    FROM { [ GROUP ] <replaceable class="parameter">role_name</replaceable> | PUBLIC } [, ...]
    [ CASCADE | RESTRICT ]

REVOKE [ GRANT OPTION FOR ]
    { { USAGE | SELECT | UPDATE }
    [, ...] | ALL [ PRIVILEGES ] }
    ON { SEQUENCE <replaceable class="parameter">sequence_name</replaceable> [, ...]
         | ALL SEQUENCES IN SCHEMA <replaceable>schema_name</replaceable> [, ...] }
    FROM { [ GROUP ] <replaceable class="parameter">role_name</replaceable> | PUBLIC } [, ...]
    [ CASCADE | RESTRICT ]

REVOKE [ GRANT OPTION FOR ]
    { { CREATE | CONNECT | TEMPORARY | TEMP } [, ...] | ALL [ PRIVILEGES ] }
    ON DATABASE <replaceable>database_name</replaceable> [, ...]
    FROM { [ GROUP ] <replaceable class="parameter">role_name</replaceable> | PUBLIC } [, ...]
    [ CASCADE | RESTRICT ]

REVOKE [ GRANT OPTION FOR ]
    { USAGE | ALL [ PRIVILEGES ] }
    ON DOMAIN <replaceable>domain_name</replaceable> [, ...]
    FROM { [ GROUP ] <replaceable class="parameter">role_name</replaceable> | PUBLIC } [, ...]
    [ CASCADE | RESTRICT ]

REVOKE [ GRANT OPTION FOR ]
    { USAGE | ALL [ PRIVILEGES ] }
    ON FOREIGN DATA WRAPPER <replaceable>fdw_name</replaceable> [, ...]
    FROM { [ GROUP ] <replaceable class="parameter">role_name</replaceable> | PUBLIC } [, ...]
    [ CASCADE | RESTRICT ]

REVOKE [ GRANT OPTION FOR ]
    { USAGE | ALL [ PRIVILEGES ] }
    ON FOREIGN SERVER <replaceable>server_name</replaceable> [, ...]
    FROM { [ GROUP ] <replaceable class="parameter">role_name</replaceable> | PUBLIC } [, ...]
    [ CASCADE | RESTRICT ]

REVOKE [ GRANT OPTION FOR ]
    { EXECUTE | ALL [ PRIVILEGES ] }
    ON { FUNCTION <replaceable>function_name</replaceable> [ ( [ [ <replaceable class="parameter">argmode</replaceable> ] [ <replaceable class="parameter">arg_name</replaceable> ] <replaceable class="parameter">arg_type</replaceable> [, ...] ] ) ] [, ...]
         | ALL FUNCTIONS IN SCHEMA <replaceable>schema_name</replaceable> [, ...] }
    FROM { [ GROUP ] <replaceable class="parameter">role_name</replaceable> | PUBLIC } [, ...]
    [ CASCADE | RESTRICT ]

REVOKE [ GRANT OPTION FOR ]
    { USAGE | ALL [ PRIVILEGES ] }
    ON LANGUAGE <replaceable>lang_name</replaceable> [, ...]
    FROM { [ GROUP ] <replaceable class="parameter">role_name</replaceable> | PUBLIC } [, ...]
    [ CASCADE | RESTRICT ]

REVOKE [ GRANT OPTION FOR ]
    { { SELECT | UPDATE } [, ...] | ALL [ PRIVILEGES ] }
    ON LARGE OBJECT <replaceable class="parameter">loid</replaceable> [, ...]
    FROM { [ GROUP ] <replaceable class="parameter">role_name</replaceable> | PUBLIC } [, ...]
    [ CASCADE | RESTRICT ]

REVOKE [ GRANT OPTION FOR ]
    { { CREATE | USAGE } [, ...] | ALL [ PRIVILEGES ] }
    ON SCHEMA <replaceable>schema_name</replaceable> [, ...]
    FROM { [ GROUP ] <replaceable class="parameter">role_name</replaceable> | PUBLIC } [, ...]
    [ CASCADE | RESTRICT ]

REVOKE [ GRANT OPTION FOR ]
    { CREATE | ALL [ PRIVILEGES ] }
    ON TABLESPACE <replaceable>tablespace_name</replaceable> [, ...]
    FROM { [ GROUP ] <replaceable class="parameter">role_name</replaceable> | PUBLIC } [, ...]
    [ CASCADE | RESTRICT ]

REVOKE [ GRANT OPTION FOR ]
    { USAGE | ALL [ PRIVILEGES ] }
    ON TYPE <replaceable>type_name</replaceable> [, ...]
    FROM { [ GROUP ] <replaceable class="parameter">role_name</replaceable> | PUBLIC } [, ...]
    [ CASCADE | RESTRICT ]

REVOKE [ ADMIN OPTION FOR ]
    <replaceable class="parameter">role_name</replaceable> [, ...] FROM <replaceable class="parameter">role_name</replaceable> [, ...]
    [ CASCADE | RESTRICT ]
</synopsis>
____________________________________________________________________________-->
<synopsis>
REVOKE [ GRANT OPTION FOR ]
    { { SELECT | INSERT | UPDATE | DELETE | TRUNCATE | REFERENCES | TRIGGER }
    [, ...] | ALL [ PRIVILEGES ] }
    ON { [ TABLE ] <replaceable class="parameter">table_name</replaceable> [, ...]
         | ALL TABLES IN SCHEMA <replaceable>schema_name</replaceable> [, ...] }
    FROM { [ GROUP ] <replaceable class="parameter">role_name</replaceable> | PUBLIC } [, ...]
    [ CASCADE | RESTRICT ]

REVOKE [ GRANT OPTION FOR ]
    { { SELECT | INSERT | UPDATE | REFERENCES } ( <replaceable class="parameter">column_name</replaceable> [, ...] )
    [, ...] | ALL [ PRIVILEGES ] ( <replaceable class="parameter">column_name</replaceable> [, ...] ) }
    ON [ TABLE ] <replaceable class="parameter">table_name</replaceable> [, ...]
    FROM { [ GROUP ] <replaceable class="parameter">role_name</replaceable> | PUBLIC } [, ...]
    [ CASCADE | RESTRICT ]

REVOKE [ GRANT OPTION FOR ]
    { { USAGE | SELECT | UPDATE }
    [, ...] | ALL [ PRIVILEGES ] }
    ON { SEQUENCE <replaceable class="parameter">sequence_name</replaceable> [, ...]
         | ALL SEQUENCES IN SCHEMA <replaceable>schema_name</replaceable> [, ...] }
    FROM { [ GROUP ] <replaceable class="parameter">role_name</replaceable> | PUBLIC } [, ...]
    [ CASCADE | RESTRICT ]

REVOKE [ GRANT OPTION FOR ]
    { { CREATE | CONNECT | TEMPORARY | TEMP } [, ...] | ALL [ PRIVILEGES ] }
    ON DATABASE <replaceable>database_name</replaceable> [, ...]
    FROM { [ GROUP ] <replaceable class="parameter">role_name</replaceable> | PUBLIC } [, ...]
    [ CASCADE | RESTRICT ]

REVOKE [ GRANT OPTION FOR ]
    { USAGE | ALL [ PRIVILEGES ] }
    ON DOMAIN <replaceable>domain_name</replaceable> [, ...]
    FROM { [ GROUP ] <replaceable class="parameter">role_name</replaceable> | PUBLIC } [, ...]
    [ CASCADE | RESTRICT ]

REVOKE [ GRANT OPTION FOR ]
    { USAGE | ALL [ PRIVILEGES ] }
    ON FOREIGN DATA WRAPPER <replaceable>fdw_name</replaceable> [, ...]
    FROM { [ GROUP ] <replaceable class="parameter">role_name</replaceable> | PUBLIC } [, ...]
    [ CASCADE | RESTRICT ]

REVOKE [ GRANT OPTION FOR ]
    { USAGE | ALL [ PRIVILEGES ] }
    ON FOREIGN SERVER <replaceable>server_name</replaceable> [, ...]
    FROM { [ GROUP ] <replaceable class="parameter">role_name</replaceable> | PUBLIC } [, ...]
    [ CASCADE | RESTRICT ]

REVOKE [ GRANT OPTION FOR ]
    { EXECUTE | ALL [ PRIVILEGES ] }
    ON { FUNCTION <replaceable>function_name</replaceable> [ ( [ [ <replaceable class="parameter">argmode</replaceable> ] [ <replaceable class="parameter">arg_name</replaceable> ] <replaceable class="parameter">arg_type</replaceable> [, ...] ] ) ] [, ...]
         | ALL FUNCTIONS IN SCHEMA <replaceable>schema_name</replaceable> [, ...] }
    FROM { [ GROUP ] <replaceable class="parameter">role_name</replaceable> | PUBLIC } [, ...]
    [ CASCADE | RESTRICT ]

REVOKE [ GRANT OPTION FOR ]
    { USAGE | ALL [ PRIVILEGES ] }
    ON LANGUAGE <replaceable>lang_name</replaceable> [, ...]
    FROM { [ GROUP ] <replaceable class="parameter">role_name</replaceable> | PUBLIC } [, ...]
    [ CASCADE | RESTRICT ]

REVOKE [ GRANT OPTION FOR ]
    { { SELECT | UPDATE } [, ...] | ALL [ PRIVILEGES ] }
    ON LARGE OBJECT <replaceable class="parameter">loid</replaceable> [, ...]
    FROM { [ GROUP ] <replaceable class="parameter">role_name</replaceable> | PUBLIC } [, ...]
    [ CASCADE | RESTRICT ]

REVOKE [ GRANT OPTION FOR ]
    { { CREATE | USAGE } [, ...] | ALL [ PRIVILEGES ] }
    ON SCHEMA <replaceable>schema_name</replaceable> [, ...]
    FROM { [ GROUP ] <replaceable class="parameter">role_name</replaceable> | PUBLIC } [, ...]
    [ CASCADE | RESTRICT ]

REVOKE [ GRANT OPTION FOR ]
    { CREATE | ALL [ PRIVILEGES ] }
    ON TABLESPACE <replaceable>tablespace_name</replaceable> [, ...]
    FROM { [ GROUP ] <replaceable class="parameter">role_name</replaceable> | PUBLIC } [, ...]
    [ CASCADE | RESTRICT ]

REVOKE [ GRANT OPTION FOR ]
    { USAGE | ALL [ PRIVILEGES ] }
    ON TYPE <replaceable>type_name</replaceable> [, ...]
    FROM { [ GROUP ] <replaceable class="parameter">role_name</replaceable> | PUBLIC } [, ...]
    [ CASCADE | RESTRICT ]

REVOKE [ ADMIN OPTION FOR ]
    <replaceable class="parameter">role_name</replaceable> [, ...] FROM <replaceable class="parameter">role_name</replaceable> [, ...]
    [ CASCADE | RESTRICT ]
</synopsis>
 </refsynopsisdiv>

 <refsect1 id="SQL-REVOKE-description">
<!--==========================orignal english content==========================
  <title>Description</title>
____________________________________________________________________________-->
  <title>描述</title>

<!--==========================orignal english content==========================
  <para>
   The <command>REVOKE</command> command revokes previously granted
   privileges from one or more roles.  The key word
   <literal>PUBLIC</literal> refers to the implicitly defined group of
   all roles.
  </para>
____________________________________________________________________________-->
  <para>
   <command>REVOKE</command>命令收回之前从一个或者更多角色
   授予的特权。关键词<literal>PUBLIC</literal>隐式定义的全部角色的组。
  </para>

<!--==========================orignal english content==========================
  <para>
   See the description of the <xref linkend="sql-grant"> command for
   the meaning of the privilege types.
  </para>
____________________________________________________________________________-->
  <para>
   特权类型的含义见<xref linkend="sql-grant"/>命令的描述。
  </para>

<!--==========================orignal english content==========================
  <para>
   Note that any particular role will have the sum
   of privileges granted directly to it, privileges granted to any role it
   is presently a member of, and privileges granted to
   <literal>PUBLIC</literal>.  Thus, for example, revoking <literal>SELECT</> privilege
   from <literal>PUBLIC</literal> does not necessarily mean that all roles
   have lost <literal>SELECT</> privilege on the object: those who have it granted
   directly or via another role will still have it.  Similarly, revoking
   <literal>SELECT</> from a user might not prevent that user from using
   <literal>SELECT</> if <literal>PUBLIC</literal> or another membership
   role still has <literal>SELECT</> rights.
  </para>
____________________________________________________________________________-->
  <para>
   注意任何特定角色拥有的特权包括直接授予给它的特权、从它作为其成员的
   角色中得到的特权以及授予给<literal>PUBLIC</literal>的特权。因此，
   从<literal>PUBLIC</literal>收回<literal>SELECT</literal>特权并不一定会意味
   着所有角色都会失去在该对象上的<literal>SELECT</literal>特权：那些直接被授
   予的或者通过另一个角色被授予的角色仍然会拥有它。类似地，从一个用户
   收回<literal>SELECT</literal>后，如果<literal>PUBLIC</literal>或者另一个
   成员关系角色仍有<literal>SELECT</literal>权利，该用户还是可以使用
   <literal>SELECT</literal>。
  </para>

<!--==========================orignal english content==========================
  <para>
   If <literal>GRANT OPTION FOR</literal> is specified, only the grant
   option for the privilege is revoked, not the privilege itself.
   Otherwise, both the privilege and the grant option are revoked.
  </para>
____________________________________________________________________________-->
  <para>
   如果指定了<literal>GRANT OPTION FOR</literal>，只会回收该特权
   的授予选项，特权本身不被回收。否则，特权及其授予选项都会被回收。
  </para>

<!--==========================orignal english content==========================
  <para>
   If a user holds a privilege with grant option and has granted it to
   other users then the privileges held by those other users are
   called dependent privileges. If the privilege or the grant option
   held by the first user is being revoked and dependent privileges
   exist, those dependent privileges are also revoked if
   <literal>CASCADE</literal> is specified; if it is not, the revoke action
   will fail.  This recursive revocation only affects privileges that
   were granted through a chain of users that is traceable to the user
   that is the subject of this <literal>REVOKE</literal> command.
   Thus, the affected users might effectively keep the privilege if it
   was also granted through other users.
  </para>
____________________________________________________________________________-->
  <para>
   如果一个用户持有一个带有授予选项的特权并且把它授予给了其他用户，
   那么被那些其他用户持有的该特权被称为依赖特权。如果第一个用户持有
   的该特权或者授予选项正在被收回且存在依赖特权，指定
   <literal>CASCADE</literal>可以连带回收那些依赖特权，不指定则会
   导致回收动作失败。这种递归回收只影响通过可追溯到该
   <literal>REVOKE</literal>命令的主体的用户链授予的特权。因此，
   如果该特权经由其他用户授予给受影响用户，受影响用户可能实际上还
   保留有该特权。
  </para>

<!--==========================orignal english content==========================
  <para>
   When revoking privileges on a table, the corresponding column privileges
   (if any) are automatically revoked on each column of the table, as well.
   On the other hand, if a role has been granted privileges on a table, then
   revoking the same privileges from individual columns will have no effect.
  </para>
____________________________________________________________________________-->
  <para>
   在回收一个表上的特权时，也会在该表的每一个列上自动回收对应的列
   特权（如果有）。在另一方面，如果一个角色已经被授予一个表上的
   特权，那么从个别的列上回收同一个特权将不会生效。
  </para>

<!--==========================orignal english content==========================
  <para>
   When revoking membership in a role, <literal>GRANT OPTION</> is instead
   called <literal>ADMIN OPTION</>, but the behavior is similar.
   Note also that this form of the command does not
   allow the noise word <literal>GROUP</>.
  </para>
____________________________________________________________________________-->
  <para>
   在回收一个角色中的成员关系时，<literal>GRANT OPTION</literal>被改
   称为<literal>ADMIN OPTION</literal>，但行为是类似的。也要注意这种
   形式的命令不允许噪声词<literal>GROUP</literal>。
  </para>
 </refsect1>

 <refsect1 id="SQL-REVOKE-notes">
<!--==========================orignal english content==========================
  <title>Notes</title>
____________________________________________________________________________-->
  <title>注解</title>

<!--==========================orignal english content==========================
  <para>
   Use <xref linkend="app-psql">'s <command>\dp</command> command to
   display the privileges granted on existing tables and columns.  See <xref
   linkend="sql-grant"> for information about the
   format.  For non-table objects there are other <command>\d</> commands
   that can display their privileges.
  </para>
____________________________________________________________________________-->
  <para>
   使用<xref linkend="app-psql"/>的<command>\dp</command>
   命令能够显示在现有表和列上已被授予的特权。其格式可见<xref
   linkend="sql-grant"/>。对于不是表的对象有其他<command>\d</command>
   命令可以显示它们的特权。
  </para>

<!--==========================orignal english content==========================
  <para>
   A user can only revoke privileges that were granted directly by
   that user.  If, for example, user A has granted a privilege with
   grant option to user B, and user B has in turned granted it to user
   C, then user A cannot revoke the privilege directly from C.
   Instead, user A could revoke the grant option from user B and use
   the <literal>CASCADE</literal> option so that the privilege is
   in turn revoked from user C.  For another example, if both A and B
   have granted the same privilege to C, A can revoke their own grant
   but not B's grant, so C will still effectively have the privilege.
  </para>
____________________________________________________________________________-->
  <para>
   用户只能回收由它直接授出的特权。例如，如果用户 A 已经把一个带有
   授予选项的特权授予给了用户 B，并且用户 B 接着把它授予给了用户 C，
   那么用户 A 无法直接从 C 收回该特权。反而，用户 A 可以从用户 B 收回
   该授予选项并且使用<literal>CASCADE</literal>选项，这样该特权会被
   依次从用户 C 回收。对于另一个例子，如果 A 和 B 都把同一个特权授予
   给了 C，A 能够收回它们自己的授权但不能收回 B 的授权，因此 C 实际上
   仍将拥有该特权。
  </para>

<!--==========================orignal english content==========================
   <para>
    When a non-owner of an object attempts to <command>REVOKE</> privileges
    on the object, the command will fail outright if the user has no
    privileges whatsoever on the object.  As long as some privilege is
    available, the command will proceed, but it will revoke only those
    privileges for which the user has grant options.  The <command>REVOKE ALL
    PRIVILEGES</> forms will issue a warning message if no grant options are
    held, while the other forms will issue a warning if grant options for
    any of the privileges specifically named in the command are not held.
    (In principle these statements apply to the object owner as well, but
    since the owner is always treated as holding all grant options, the
    cases can never occur.)
   </para>
____________________________________________________________________________-->
   <para>
    当一个对象的非拥有者尝试<command>REVOKE</command>该对象上的特权时，
    如果该用户在该对象上什么特权都不拥有，该命令会立刻失败。只要有某个
    特权可用，该命令将继续，但是它只会收回那些它具有授予选项的特权。
    如果没有持有授予选项，<command>REVOKE ALL PRIVILEGES</command>形式
    将发出一个警告，而其他形式在没有持有该命令中特别提到的任何特权的
    授予选项时就会发出警告（原则上，这些语句也适用于对象拥有者，但是
    由于拥有者总是被认为持有所有授予选项，这些情况永远不会发生）。
   </para>

<!--==========================orignal english content==========================
   <para>
    If a superuser chooses to issue a <command>GRANT</> or <command>REVOKE</>
    command, the command is performed as though it were issued by the
    owner of the affected object.  Since all privileges ultimately come
    from the object owner (possibly indirectly via chains of grant options),
    it is possible for a superuser to revoke all privileges, but this might
    require use of <literal>CASCADE</literal> as stated above.
   </para>
____________________________________________________________________________-->
   <para>
    如果一个超级用户选择发出一个<command>GRANT</command>或者
    <command>REVOKE</command>命令，该命令就好像被受影响对象的拥有者发出
    的一样被执行。因为所有特权最终来自于对象拥有者（可能是间接地通过
    授予选项链），可以由超级用户收回所有特权，但是这可能需要前述的
    <literal>CASCADE</literal>。
   </para>

<!--==========================orignal english content==========================
   <para>
    <command>REVOKE</> can also be done by a role
    that is not the owner of the affected object, but is a member of the role
    that owns the object, or is a member of a role that holds privileges
    <literal>WITH GRANT OPTION</literal> on the object.  In this case the
    command is performed as though it were issued by the containing role that
    actually owns the object or holds the privileges
    <literal>WITH GRANT OPTION</literal>.  For example, if table
    <literal>t1</> is owned by role <literal>g1</>, of which role
    <literal>u1</> is a member, then <literal>u1</> can revoke privileges
    on <literal>t1</> that are recorded as being granted by <literal>g1</>.
    This would include grants made by <literal>u1</> as well as by other
    members of role <literal>g1</>.
   </para>
____________________________________________________________________________-->
   <para>
    <command>REVOKE</command>也可以由一个并非受影响对象的拥有者的角色
    完成，但是该角色应该是一个拥有该对象的角色的成员或者是一个在该对象
    上拥有特权的<literal>WITH GRANT OPTION</literal>的角色的成员。
    在这种情况中，该命令就好像被实际拥有该对象或者特权的
    <literal>WITH GRANT OPTION</literal>的包含角色发出的一样被执行。
    例如，如果表<literal>t1</literal>被角色<literal>g1</literal>拥有，而<literal>u1</literal>
    是<literal>g1</literal>的一个成员，那么<literal>u1</literal>能收回<literal>t1</literal>
    上被记录为由<literal>g1</literal>授出的特权。这会包括由<literal>u1</literal>
    以及由角色<literal>g1</literal>的其他成员完成的授予。
   </para>

<!--==========================orignal english content==========================
   <para>
    If the role executing <command>REVOKE</> holds privileges
    indirectly via more than one role membership path, it is unspecified
    which containing role will be used to perform the command.  In such cases
    it is best practice to use <command>SET ROLE</> to become the specific
    role you want to do the <command>REVOKE</> as.  Failure to do so might
    lead to revoking privileges other than the ones you intended, or not
    revoking anything at all.
   </para>
____________________________________________________________________________-->
   <para>
    如果执行<command>REVOKE</command>的角色持有通过多于一条角色成员
    关系路径间接得到的特权，其中哪一条包含将被用于执行该命令的
    角色是没有被指明的。在这种情况中，最好使用
    <command>SET ROLE</command>成为你想作为其身份执行
    <command>REVOKE</command>的特定角色。如果无法做到这一点
    可能会导致回收超过你预期的特权，或者根本回收不了任何东西。
   </para>
 </refsect1>

 <refsect1 id="SQL-REVOKE-examples">
<!--==========================orignal english content==========================
  <title>Examples</title>
____________________________________________________________________________-->
  <title>示例</title>

<!--==========================orignal english content==========================
  <para>
   Revoke insert privilege for the public on table
   <literal>films</literal>:

<programlisting>
REVOKE INSERT ON films FROM PUBLIC;
</programlisting>
  </para>
____________________________________________________________________________-->
  <para>
   从 public 收回表<literal>films</literal>上的插入特权：

<programlisting>
REVOKE INSERT ON films FROM PUBLIC;
</programlisting>
  </para>

<!--==========================orignal english content==========================
  <para>
   Revoke all privileges from user <literal>manuel</literal> on view
   <literal>kinds</literal>:

<programlisting>
REVOKE ALL PRIVILEGES ON kinds FROM manuel;
</programlisting>

   Note that this actually means <quote>revoke all privileges that I
   granted</>.
  </para>
____________________________________________________________________________-->
  <para>
   从用户<literal>manuel</literal>收回视图
   <literal>kinds</literal>上的所有特权：

<programlisting>
REVOKE ALL PRIVILEGES ON kinds FROM manuel;
</programlisting>

   注意着实际意味着<quote>收回所有我授出的特权</quote>。
  </para>

<!--==========================orignal english content==========================
  <para>
   Revoke membership in role <literal>admins</> from user <literal>joe</>:

<programlisting>
REVOKE admins FROM joe;
</programlisting></para>
____________________________________________________________________________-->
  <para>
   从用户<literal>joe</literal>收回角色<literal>admins</literal>中的成员关系：

<programlisting>
REVOKE admins FROM joe;
</programlisting></para>
 </refsect1>

 <refsect1 id="SQL-REVOKE-compatibility">
<!--==========================orignal english content==========================
  <title>Compatibility</title>
____________________________________________________________________________-->
  <title>兼容性</title>

<!--==========================orignal english content==========================
   <para>
    The compatibility notes of the <xref linkend="sql-grant"> command
    apply analogously to <command>REVOKE</command>.
    The keyword <literal>RESTRICT</literal> or <literal>CASCADE</literal>
    is required according to the standard, but <productname>PostgreSQL</>
    assumes <literal>RESTRICT</literal> by default.
   </para>
____________________________________________________________________________-->
   <para>
    <xref linkend="sql-grant"/>命令的兼容性注解同样适用于
    <command>REVOKE</command>。根据标准，关键词
    <literal>RESTRICT</literal>或<literal>CASCADE</literal>
    是必要的，但是<productname>PostgreSQL</productname>默认假定为
    <literal>RESTRICT</literal>。
   </para>
 </refsect1>

 <refsect1>
<!--==========================orignal english content==========================
  <title>See Also</title>
____________________________________________________________________________-->
  <title>另见</title>

<!--==========================orignal english content==========================
  <simpara>
   <xref linkend="sql-grant">
  </simpara>
____________________________________________________________________________-->
  <simpara>
   <xref linkend="sql-grant"/>
  </simpara>
 </refsect1>

</refentry>
