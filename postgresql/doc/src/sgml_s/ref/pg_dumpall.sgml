<!--
doc/src/sgml/ref/pg_dumpall.sgml
PostgreSQL documentation
-->

<refentry id="app-pg-dumpall">
<!--==========================orignal english content==========================
 <indexterm zone="app-pg-dumpall">
  <primary>pg_dumpall</primary>
 </indexterm>
____________________________________________________________________________-->
 <indexterm zone="app-pg-dumpall">
  <primary>pg_dumpall</primary>
 </indexterm>
 
<!--==========================orignal english content==========================
 <refmeta>
  <refentrytitle><application>pg_dumpall</application></refentrytitle>
  <manvolnum>1</manvolnum>
  <refmiscinfo>Application</refmiscinfo>
 </refmeta>
____________________________________________________________________________-->
 <refmeta>
  <refentrytitle><application>pg_dumpall</application></refentrytitle>
  <manvolnum>1</manvolnum>
  <refmiscinfo>Application</refmiscinfo>
 </refmeta>

<!--==========================orignal english content==========================
 <refnamediv>
  <refname>pg_dumpall</refname>
  <refpurpose>extract a <productname>PostgreSQL</productname> database cluster into a script file</refpurpose>
 </refnamediv>
____________________________________________________________________________-->
 <refnamediv>
  <refname>pg_dumpall</refname>
  <refpurpose>将一个<productname>PostgreSQL</productname>数据库集簇抽取到一个脚本文件中</refpurpose>
 </refnamediv>

 <refsynopsisdiv>
<!--==========================orignal english content==========================
  <cmdsynopsis>
   <command>pg_dumpall</command>
   <arg rep="repeat"><replaceable>connection-option</replaceable></arg>
   <arg rep="repeat"><replaceable>option</replaceable></arg>
  </cmdsynopsis>
____________________________________________________________________________-->
  <cmdsynopsis>
   <command>pg_dumpall</command>
   <arg rep="repeat"><replaceable>connection-option</replaceable></arg>
   <arg rep="repeat"><replaceable>option</replaceable></arg>
  </cmdsynopsis>
 </refsynopsisdiv>

 <refsect1 id="app-pg-dumpall-description">
<!--==========================orignal english content==========================
  <title>Description</title>
____________________________________________________________________________-->
  <title>描述</title>

<!--==========================orignal english content==========================
  <para>
   <application>pg_dumpall</application> is a utility for writing out
   (<quote>dumping</quote>) all <productname>PostgreSQL</productname> databases
   of a cluster into one script file.  The script file contains
   <acronym>SQL</acronym> commands that can be used as input to <xref
   linkend="app-psql"/> to restore the databases.  It does this by
   calling <xref linkend="app-pgdump"/> for each database in the cluster.
   <application>pg_dumpall</application> also dumps global objects
   that are common to all databases, that is, database roles and tablespaces.
   (<application>pg_dump</application> does not save these objects.)
  </para>
____________________________________________________________________________-->
  <para>
   <application>pg_dumpall</application>工具可以一个集簇中所有的<productname>PostgreSQL</productname>数据库写出到（<quote>转储</quote>）一个脚本文件。该脚本文件包含可以用作<xref linkend="app-psql"/>的输入<acronym>SQL</acronym>命令来恢复数据库。它会对集簇中的每个数据库调用<xref linkend="app-pgdump"/>来完成该工作。<application>pg_dumpall</application>还转储对所有数据库公用的全局对象（<xref linkend="app-pgdump"/>不保存这些对象），也就是说数据库角色和表空间都会被转储。 目前这包括适数据库用户和组、表空间以及适合所有数据库的访问权限等属性。
  </para>

<!--==========================orignal english content==========================
  <para>
   Since <application>pg_dumpall</application> reads tables from all
   databases you will most likely have to connect as a database
   superuser in order to produce a complete dump.  Also you will need
   superuser privileges to execute the saved script in order to be
   allowed to add roles and create databases.
  </para>
____________________________________________________________________________-->
  <para>
   因为<application>pg_dumpall</application>从所有数据库中读取表，所以你很可能需要以一个数据库超级用户的身份连接以便生成完整的转储。同样，你也需要超级用户特权执行保存下来的脚本，这样才能增加角色和组以及创建数据库。
  </para>

<!--==========================orignal english content==========================
  <para>
   The SQL script will be written to the standard output.  Use the
   [-f|file] option or shell operators to redirect it into a file.
  </para>
____________________________________________________________________________-->
  <para>
   SQL 脚本将被写出到标准输出。使用 [-f|file] 选项或者 shell 操作符可以把它重定向到一个文件。
  </para>

<!--==========================orignal english content==========================
  <para>
  <application>pg_dumpall</application> needs to connect several
  times to the <productname>PostgreSQL</productname> server (once per
  database).  If you use password authentication it will ask for
  a password each time. It is convenient to have a
  <filename>~/.pgpass</filename> file in such cases. See <xref
  linkend="libpq-pgpass"/> for more information.
  </para>
____________________________________________________________________________-->
  <para>
  <application>pg_dumpall</application>需要多次连接到<productname>PostgreSQL</productname>服务器（每个数据库一次）。如果你使用口令认证，可能每次都会要求口令。这种情况下使用一个<filename>~/.pgpass</filename>会比较方便。详见<xref linkend="libpq-pgpass"/>。
  </para>

 </refsect1>

 <refsect1>
<!--==========================orignal english content==========================
  <title>Options</title>
____________________________________________________________________________-->
  <title>选项</title>

<!--==========================orignal english content==========================
   <para>
    The following command-line options control the content and
    format of the output.

    <variablelist>
     <varlistentry>
      <term><option>-a</option></term>
      <term><option>-&minus;data-only</option></term>
      <listitem>
       <para>
        Dump only the data, not the schema (data definitions).
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-c</option></term>
      <term><option>-&minus;clean</option></term>
      <listitem>
       <para>
        Include SQL commands to clean (drop) databases before
        recreating them.  <command>DROP</command> commands for roles and
        tablespaces are added as well.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-E <replaceable class="parameter">encoding</replaceable></option></term>
      <term><option>-&minus;encoding=<replaceable class="parameter">encoding</replaceable></option></term>
      <listitem>
       <para>
        Create the dump in the specified character set encoding. By default,
        the dump is created in the database encoding.  (Another way to get the
        same result is to set the <envar>PGCLIENTENCODING</envar> environment
        variable to the desired dump encoding.)
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-f <replaceable class="parameter">filename</replaceable></option></term>
      <term><option>-&minus;file=<replaceable class="parameter">filename</replaceable></option></term>
      <listitem>
       <para>
        Send output to the specified file.  If this is omitted, the
        standard output is used.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-g</option></term>
      <term><option>-&minus;globals-only</option></term>
      <listitem>
       <para>
        Dump only global objects (roles and tablespaces), no databases.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-o</option></term>
      <term><option>-&minus;oids</option></term>
      <listitem>
       <para>
        Dump object identifiers (<acronym>OID</acronym>s) as part of the
        data for every table.  Use this option if your application references
        the <acronym>OID</acronym>
        columns in some way (e.g., in a foreign key constraint).
        Otherwise, this option should not be used.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-O</option></term>
      <term><option>-&minus;no-owner</option></term>
      <listitem>
       <para>
        Do not output commands to set
        ownership of objects to match the original database.
        By default, <application>pg_dumpall</application> issues
        <command>ALTER OWNER</command> or
        <command>SET SESSION AUTHORIZATION</command>
        statements to set ownership of created schema elements.
        These statements
        will fail when the script is run unless it is started by a superuser
        (or the same user that owns all of the objects in the script).
        To make a script that can be restored by any user, but will give
        that user ownership of all the objects, specify <option>-O</option>.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-r</option></term>
      <term><option>-&minus;roles-only</option></term>
      <listitem>
       <para>
        Dump only roles, no databases or tablespaces.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-s</option></term>
      <term><option>-&minus;schema-only</option></term>
      <listitem>
       <para>
        Dump only the object definitions (schema), not data.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-S <replaceable class="parameter">username</replaceable></option></term>
      <term><option>-&minus;superuser=<replaceable class="parameter">username</replaceable></option></term>
      <listitem>
       <para>
        Specify the superuser user name to use when disabling triggers.
        This is relevant only if <option>-&minus;disable-triggers</option> is used.
        (Usually, it's better to leave this out, and instead start the
        resulting script as superuser.)
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-t</option></term>
      <term><option>-&minus;tablespaces-only</option></term>
      <listitem>
       <para>
        Dump only tablespaces, no databases or roles.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-v</option></term>
      <term><option>-&minus;verbose</option></term>
      <listitem>
       <para>
        Specifies verbose mode.  This will cause
        <application>pg_dumpall</application> to output start/stop
        times to the dump file, and progress messages to standard error.
        It will also enable verbose output in <application>pg_dump</application>.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
       <term><option>-V</option></term>
       <term><option>-&minus;version</option></term>
       <listitem>
       <para>
       Print the <application>pg_dumpall</application> version and exit.
       </para>
       </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-x</option></term>
      <term><option>-&minus;no-privileges</option></term>
      <term><option>-&minus;no-acl</option></term>
      <listitem>
       <para>
        Prevent dumping of access privileges (grant/revoke commands).
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-&minus;binary-upgrade</option></term>
      <listitem>
       <para>
        This option is for use by in-place upgrade utilities.  Its use
        for other purposes is not recommended or supported.  The
        behavior of the option may change in future releases without
        notice.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-&minus;column-inserts</option></term>
      <term><option>-&minus;attribute-inserts</option></term>
      <listitem>
       <para>
        Dump data as <command>INSERT</command> commands with explicit
        column names (<literal>INSERT INTO
        <replaceable>table</replaceable>
        (<replaceable>column</replaceable>, ...) VALUES
        ...</literal>).  This will make restoration very slow; it is mainly
        useful for making dumps that can be loaded into
        non-<productname>PostgreSQL</productname> databases.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-&minus;disable-dollar-quoting</option></term>
      <listitem>
       <para>
        This option disables the use of dollar quoting for function bodies,
        and forces them to be quoted using SQL standard string syntax.
       </para>
     </listitem>
    </varlistentry>

     <varlistentry>
      <term><option>-&minus;disable-triggers</option></term>
      <listitem>
       <para>
        This option is relevant only when creating a data-only dump.
        It instructs <application>pg_dumpall</application> to include commands
        to temporarily disable triggers on the target tables while
        the data is reloaded.  Use this if you have referential
        integrity checks or other triggers on the tables that you
        do not want to invoke during data reload.
       </para>

       <para>
        Presently, the commands emitted for <option>-&minus;disable-triggers</option>
        must be done as superuser.  So, you should also specify
        a superuser name with <option>-S</option>, or preferably be careful to
        start the resulting script as a superuser.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-&minus;if-exists</option></term>
      <listitem>
       <para>
        Use conditional commands (i.e. add an <literal>IF EXISTS</literal>
        clause) to drop databases and other objects.  This option is not valid
        unless <option>-&minus;clean</option> is also specified.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-&minus;inserts</option></term>
      <listitem>
       <para>
        Dump data as <command>INSERT</command> commands (rather
        than <command>COPY</command>).  This will make restoration very slow;
        it is mainly useful for making dumps that can be loaded into
        non-<productname>PostgreSQL</productname> databases.  Note that
        the restore might fail altogether if you have rearranged column order.
        The <option>-&minus;column-inserts</option> option is safer, though even
        slower.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-&minus;load-via-partition-root</option></term>
      <listitem>
       <para>
        When dumping data for a table partition, make
        the <command>COPY</command> or <command>INSERT</command> statements
        target the root of the partitioning hierarchy that contains it, rather
        than the partition itself.  This causes the appropriate partition to
        be re-determined for each row when the data is loaded.  This may be
        useful when reloading data on a server where rows do not always fall
        into the same partitions as they did on the original server.  That
        could happen, for example, if the partitioning column is of type text
        and the two systems have different definitions of the collation used
        to sort the partitioning column.
       </para>

       <!-&minus; Currently, we don't need pg_dump's warning about parallelism here,
        since parallel restore from a pg_dumpall script is impossible.
       -&minus;>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-&minus;lock-wait-timeout=<replaceable class="parameter">timeout</replaceable></option></term>
      <listitem>
       <para>
        Do not wait forever to acquire shared table locks at the beginning of
        the dump. Instead, fail if unable to lock a table within the specified
        <replaceable class="parameter">timeout</replaceable>. The timeout may be
        specified in any of the formats accepted by <command>SET
        statement_timeout</command>.  Allowed values vary depending on the server
        version you are dumping from, but an integer number of milliseconds
        is accepted by all versions since 7.3.  This option is ignored when
        dumping from a pre-7.3 server.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-&minus;no-comments</option></term>
      <listitem>
       <para>
        Do not dump comments.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-&minus;no-publications</option></term>
      <listitem>
       <para>
        Do not dump publications.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-&minus;no-role-passwords</option></term>
      <listitem>
       <para>
        Do not dump passwords for roles.  When restored, roles will have a
        null password, and password authentication will always fail until the
        password is set.  Since password values aren't needed when this option
        is specified, the role information is read from the catalog
        view <structname>pg_roles</structname> instead
        of <structname>pg_authid</structname>.  Therefore, this option also
        helps if access to <structname>pg_authid</structname> is restricted by
        some security policy.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-&minus;no-security-labels</option></term>
      <listitem>
       <para>
        Do not dump security labels.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-&minus;no-subscriptions</option></term>
      <listitem>
       <para>
        Do not dump subscriptions.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-&minus;no-sync</option></term>
      <listitem>
       <para>
        By default, <command>pg_dumpall</command> will wait for all files
        to be written safely to disk.  This option causes
        <command>pg_dumpall</command> to return without waiting, which is
        faster, but means that a subsequent operating system crash can leave
        the dump corrupt.  Generally, this option is useful for testing
        but should not be used when dumping data from production installation.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-&minus;no-tablespaces</option></term>
      <listitem>
       <para>
        Do not output commands to create tablespaces nor select tablespaces
        for objects.
        With this option, all objects will be created in whichever
        tablespace is the default during restore.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-&minus;no-unlogged-table-data</option></term>
      <listitem>
       <para>
        Do not dump the contents of unlogged tables.  This option has no
        effect on whether or not the table definitions (schema) are dumped;
        it only suppresses dumping the table data.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-&minus;quote-all-identifiers</option></term>
      <listitem>
       <para>
        Force quoting of all identifiers.  This option is recommended when
        dumping a database from a server whose <productname>PostgreSQL</productname>
        major version is different from <application>pg_dumpall</application>'s, or when
        the output is intended to be loaded into a server of a different
        major version.  By default, <application>pg_dumpall</application> quotes only
        identifiers that are reserved words in its own major version.
        This sometimes results in compatibility issues when dealing with
        servers of other versions that may have slightly different sets
        of reserved words.  Using <option>-&minus;quote-all-identifiers</option> prevents
        such issues, at the price of a harder-to-read dump script.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-&minus;use-set-session-authorization</option></term>
      <listitem>
       <para>
        Output SQL-standard <command>SET SESSION AUTHORIZATION</command> commands
        instead of <command>ALTER OWNER</command> commands to determine object
        ownership.  This makes the dump more standards compatible, but
        depending on the history of the objects in the dump, might not restore
        properly.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
       <term><option>-?</option></term>
       <term><option>-&minus;help</option></term>
       <listitem>
       <para>
       Show help about <application>pg_dumpall</application> command line
       arguments, and exit.
       </para>
       </listitem>
     </varlistentry>

    </variablelist>
   </para>
____________________________________________________________________________-->
   <para>
    下列命令行选项用于控制输出的内容和格式。

    <variablelist>
     <varlistentry>
      <term><option>-a</option></term>
      <term><option>--data-only</option></term>
      <listitem>
       <para>
        只转储数据，不转储模式（数据定义）。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-c</option></term>
      <term><option>--clean</option></term>
      <listitem>
       <para>
        包括在重建数据库之前清除（移除）它们的 SQL 命令。角色和表空间的<command>DROP</command>命令也会被加入进来。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-E <replaceable class="parameter">encoding</replaceable></option></term>
      <term><option>--encoding=<replaceable class="parameter">encoding</replaceable></option></term>
      <listitem>
       <para>
        用指定的字符集编码创建转储。默认情况下，转储使用数据库的编码创建（另一种得到相同结果的方法是设置<envar>PGCLIENTENCODING</envar>环境变量为想要的转储编码）。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-f <replaceable class="parameter">filename</replaceable></option></term>
      <term><option>--file=<replaceable class="parameter">filename</replaceable></option></term>
      <listitem>
       <para>
        将输出发送到指定的文件中。如果省略，将使用标准输出。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-g</option></term>
      <term><option>--globals-only</option></term>
      <listitem>
       <para>
        只转储全局对象（角色和表空间），而不转储数据库。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-o</option></term>
      <term><option>--oids</option></term>
      <listitem>
       <para>
        将对象标识符（<acronym>OID</acronym>）转储为数据的一部分。如果你的应用以某种方式引用<acronym>OID</acronym>列（例如在外键约束中），请使用这个选项。否则不应该使用这个选项。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-O</option></term>
      <term><option>--no-owner</option></term>
      <listitem>
       <para>
        不输出用于设置对象所有权以符合原始数据库的命令。默认情况下，<application>pg_dumpall</application>发出<command>ALTER OWNER</command>或<command>SET SESSION AUTHORIZATION</command>语句来设置被创建的模式元素的所有权。除非脚本是由一个超级用户（或者是拥有脚本中所有对象的同一个用户）所运行，这些语句在脚本运行时会失败。要使得一个脚本能被任意用户恢复，但又不想给予该用户所有对象的所有权，可以指定<option>-O</option>。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-r</option></term>
      <term><option>--roles-only</option></term>
      <listitem>
       <para>
        只转储角色，不转储数据库和表空间。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-s</option></term>
      <term><option>--schema-only</option></term>
      <listitem>
       <para>
        只转储对象定义（模式），不转储数据。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-S <replaceable class="parameter">username</replaceable></option></term>
      <term><option>--superuser=<replaceable class="parameter">username</replaceable></option></term>
      <listitem>
       <para>
        指定要在禁用触发器时使用的超级用户的用户名。只有使用<option>--disable-triggers</option>时，这个选项才相关（通常，最好省去这个选项，而作为超级用户来启动结果脚本来取而代之）。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-t</option></term>
      <term><option>--tablespaces-only</option></term>
      <listitem>
       <para>
        只转储表空间，不转储数据库和角色。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-v</option></term>
      <term><option>--verbose</option></term>
      <listitem>
       <para>
        指定细节模式。这将导致<application>pg_dumpall</application>向标准错误输出详细的对象注释以及转储文件的开始/停止时间，还有进度消息。它也会启用<application>pg_dump</application>中的细节输出。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
       <term><option>-V</option></term>
       <term><option>--version</option></term>
       <listitem>
       <para>
       打印<application>pg_dumpall</application>版本并退出。
       </para>
       </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-x</option></term>
      <term><option>--no-privileges</option></term>
      <term><option>--no-acl</option></term>
      <listitem>
       <para>
        防止转储访问特权（授予/收回命令）。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>--binary-upgrade</option></term>
      <listitem>
       <para>
        这个选项用于就地升级功能。我们不推荐也不支持把它用于其他目的。这个选项在未来的发行中可能被改变而不做通知。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>--column-inserts</option></term>
      <term><option>--attribute-inserts</option></term>
      <listitem>
       <para>
        将数据转储为带有显式列名的<command>INSERT</command>命令（<literal>INSERT INTO <replaceable>table</replaceable>(<replaceable>column</replaceable>, ...) VALUES ...</literal>）。这将使得恢复过程非常慢，这主要用于使转储能够被载入到非<productname>PostgreSQL</productname>数据库中。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>--disable-dollar-quoting</option></term>
      <listitem>
       <para>
        这个选项禁止在函数体中使用美元符号引用，并且强制它们使用 SQL 标准字符串语法被引用。
       </para>
     </listitem>
    </varlistentry>

     <varlistentry>
      <term><option>--disable-triggers</option></term>
      <listitem>
       <para>
        只有在创建一个只转储数据的转储时，这个选项才相关。它指示<application>pg_dumpall</application>包括在数据被重新载入时能够临时禁用目标表上的触发器的命令。如果你在表上有引用完整性检查或其他触发器，并且你在数据重新载入期间不想调用它们，请使用这个选项。
       </para>

       <para>
        当前，为<option>--disable-triggers</option>发出的命令必须作为超级用户来执行。因此，你还应当使用<option>-S</option>指定一个超级用户名，或者宁可作为一个超级用户启动结果脚本。
       </para>
      </listitem>
     </varlistentry>
     
     <varlistentry>
      <term><option>--if-exists</option></term>
      <listitem>
       <para>
        时间条件性命令（即增加一个<literal>IF EXISTS</literal>子句）来清除数据库和其他对象。
        只有同时指定了<option>--clean</option>时，这个选项才可用。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>--inserts</option></term>
      <listitem>
       <para>
        将数据转储为<command>INSERT</command>命令（而不是<command>COPY</command>）。这将使得恢复非常慢，这主要用于使转储能够被载入到非<productname>PostgreSQL</productname>数据库中。注意如果你已经重新安排了列序，该恢复可能会一起失败。<option>--column-inserts</option>选项对于列序改变是安全的，但是会更慢。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>--load-via-partition-root</option></term>
      <listitem>
       <para>
        在为一个分区表转储数据时，让<command>COPY</command>语句或者<command>INSERT</command>语句把包含它的分区层次的根而不是分区自身作为目标。这导致在数据被装载时，会为每一个行重新确定合适的分区。如果在一台服务器上重新装载数据时会出现行并不是总是落入到和原始服务器上相同的分区中的情况，这个选项就很有用。例如，如果分区列是文本类型并且两个系统中用于排序分区列的排序规则有着不同的定义，就会发生这种情况。
       </para>

       <!-- Currently, we don't need pg_dump's warning about parallelism here,
        since parallel restore from a pg_dumpall script is impossible.
       -->
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>--lock-wait-timeout=<replaceable class="parameter">timeout</replaceable></option></term>
      <listitem>
       <para>
        在转储的开始从不等待共享表锁的获得。而是在指定的<replaceable class="parameter">timeout</replaceable>内不能锁定一个表时失败。超时时长可以用<command>SET statement_timeout</command>接受的任何格式指定（允许的值根据你从其转出的服务器版本变化，但是从 7.3 以来的所有版本都接受一个整数表示的毫秒数。如果从 7.3 以前的服务器转出，这个选项会被忽略。）。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>--no-comments</option></term>
      <listitem>
       <para>
        不转储注释。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>--no-publications</option></term>
      <listitem>
       <para>
        不转储publication。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>--no-role-passwords</option></term>
      <listitem>
       <para>
        不为角色转储口令。在恢复完后，角色的口令将是空口令，并且在设置口令之前口令认证都不会成功。由于指定这个选项时并不需要口令值，角色信息将从目录视图<structname>pg_roles</structname>而不是<structname>pg_authid</structname>中读出。因此，如果对<structname>pg_authid</structname>的访问被某条安全性策略所限制，那么这个选项也会有所帮助。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>--no-security-labels</option></term>
      <listitem>
       <para>
        不转储安全标签。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>--no-subscriptions</option></term>
      <listitem>
       <para>
        不转储subscription。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>--no-sync</option></term>
      <listitem>
       <para>
        默认情况下，<command>pg_dumpall</command>将等待所有文件被安全地写入到磁盘。这个选项会让<command>pg_dumpall</command>不做这种等待而返回，这样会更快，但是意味着后续的操作系统崩溃可能留下被损坏的转储。通常来说，这个选项对测试有用，但不应该在从生产安装中转储数据时使用。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>--no-tablespaces</option></term>
      <listitem>
       <para>
        不要输出选择表空间的命令。通过这个选项，在恢复期间所有的对象都会被创建在任何作为默认的表空间中。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>--no-unlogged-table-data</option></term>
      <listitem>
       <para>
        不转储非日志记录表的内容。这个选项对于表定义（模式）是否被转储没有影响，它只会限制转储表数据。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>--quote-all-identifiers</option></term>
      <listitem>
       <para>
        强制引用所有标识符。在从一个与<application>pg_dumpall</application>主版本不同的<productname>PostgreSQL</productname>服务器转储数据库时或者要将输出载入到一个不同主版本的服务器时，推荐使用这个选项。默认情况下，<application>pg_dumpall</application>只会对为其主版本中保留词的标识符加上引号。在与其他版本的具有不同保留词集合的服务器交互时，这有时会导致兼容性问题。使用<option>--quote-all-identifiers</option>可以阻止这类问题，但是代价是转储脚本会更加难读。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>--use-set-session-authorization</option></term>
      <listitem>
       <para>
        输出 SQL-标准的<command>SET SESSION AUTHORIZATION</command>命令取代<command>ALTER OWNER</command>命令来确定对象的所有关系。这让该转储更加兼容标准，但是取决于该转储中对象的历史，该转储可能无法正常恢复。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
       <term><option>-?</option></term>
       <term><option>--help</option></term>
       <listitem>
       <para>
       显示有关<application>pg_dumpall</application>命令行参数的帮助并退出。
       </para>
       </listitem>
     </varlistentry>

    </variablelist>
   </para>

<!--==========================orignal english content==========================
  <para>
   The following command-line options control the database connection parameters.

   <variablelist>
     <varlistentry>
      <term><option>-d <replaceable class="parameter">connstr</replaceable></option></term>
      <term><option>-&minus;dbname=<replaceable class="parameter">connstr</replaceable></option></term>
      <listitem>
       <para>
        Specifies parameters used to connect to the server, as a connection
        string. See <xref linkend="libpq-connstring"/> for more information.
       </para>
       <para>
        The option is called <literal>-&minus;dbname</literal> for consistency with other
        client applications, but because <application>pg_dumpall</application>
        needs to connect to many databases, the database name in the
        connection string will be ignored.  Use the <literal>-l</literal>
        option to specify the name of the database used for the initial
        connection, which will dump global objects and discover what other
        databases should be dumped.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-h <replaceable>host</replaceable></option></term>
      <term><option>-&minus;host=<replaceable>host</replaceable></option></term>
      <listitem>
       <para>
        Specifies the host name of the machine on which the database
        server is running.  If the value begins with a slash, it is
        used as the directory for the Unix domain socket.  The default
        is taken from the <envar>PGHOST</envar> environment variable,
        if set, else a Unix domain socket connection is attempted.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-l <replaceable>dbname</replaceable></option></term>
      <term><option>-&minus;database=<replaceable>dbname</replaceable></option></term>
      <listitem>
       <para>
         Specifies the name of the database to connect to for dumping global
         objects and discovering what other databases should be dumped. If
         not specified, the <literal>postgres</literal> database will be used,
         and if that does not exist, <literal>template1</literal> will be used.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-p <replaceable>port</replaceable></option></term>
      <term><option>-&minus;port=<replaceable>port</replaceable></option></term>
      <listitem>
       <para>
        Specifies the TCP port or local Unix domain socket file
        extension on which the server is listening for connections.
        Defaults to the <envar>PGPORT</envar> environment variable, if
        set, or a compiled-in default.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-U <replaceable>username</replaceable></option></term>
      <term><option>-&minus;username=<replaceable>username</replaceable></option></term>
      <listitem>
       <para>
        User name to connect as.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-w</option></term>
      <term><option>-&minus;no-password</option></term>
      <listitem>
       <para>
        Never issue a password prompt.  If the server requires
        password authentication and a password is not available by
        other means such as a <filename>.pgpass</filename> file, the
        connection attempt will fail.  This option can be useful in
        batch jobs and scripts where no user is present to enter a
        password.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-W</option></term>
      <term><option>-&minus;password</option></term>
      <listitem>
       <para>
        Force <application>pg_dumpall</application> to prompt for a
        password before connecting to a database.
       </para>

       <para>
        This option is never essential, since
        <application>pg_dumpall</application> will automatically prompt
        for a password if the server demands password authentication.
        However, <application>pg_dumpall</application> will waste a
        connection attempt finding out that the server wants a password.
        In some cases it is worth typing <option>-W</option> to avoid the extra
        connection attempt.
       </para>

       <para>
        Note that the password prompt will occur again for each database
        to be dumped.  Usually, it's better to set up a
        <filename>~/.pgpass</filename> file than to rely on manual password entry.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-&minus;role=<replaceable class="parameter">rolename</replaceable></option></term>
      <listitem>
       <para>
        Specifies a role name to be used to create the dump.
        This option causes <application>pg_dumpall</application> to issue a
        <command>SET ROLE</command> <replaceable class="parameter">rolename</replaceable>
        command after connecting to the database. It is useful when the
        authenticated user (specified by <option>-U</option>) lacks privileges
        needed by <application>pg_dumpall</application>, but can switch to a role with
        the required rights.  Some installations have a policy against
        logging in directly as a superuser, and use of this option allows
        dumps to be made without violating the policy.
       </para>
      </listitem>
     </varlistentry>
   </variablelist>
  </para>
____________________________________________________________________________-->
  <para>
   下列命令行选项控制数据库连接参数。

   <variablelist>
     <varlistentry>
      <term><option>-d <replaceable class="parameter">connstr</replaceable></option></term>
      <term><option>--dbname=<replaceable class="parameter">connstr</replaceable></option></term>
      <listitem>
       <para>
        以一个连接字符串的形式，指定用来连接到服务器的参数。详见<xref linkend="libpq-connstring"/>。
       </para>
       <para>
        这个选项被称为<literal>--dbname</literal>是为了和其他客户端应用一致，但是因为<application>pg_dumpall</application>需要连接多个数据库，连接字符串中的数据库名将被忽略。使用<literal>-l</literal>选项指定一个数据库，该数据库被用于初始连接，这将转储全局对象并且发现需要转储哪些其他数据库。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-h <replaceable>host</replaceable></option></term>
      <term><option>--host=<replaceable>host</replaceable></option></term>
      <listitem>
       <para>
        指定服务器正在运行的机器的主机名。如果该值开始于一个斜线，它被用作一个 Unix 域套接字的目录。默认是从<envar>PGHOST</envar>环境变量中取得（如果被设置），否则将尝试一次 Unix 域套接字连接。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-l <replaceable>dbname</replaceable></option></term>
      <term><option>--database=<replaceable>dbname</replaceable></option></term>
      <listitem>
       <para>
         指定要连接到哪个数据库转储全局对象以及发现要转储哪些其他数据库。如果没有指定，将会使用<literal>postgres</literal>数据库，如果<literal>postgres</literal>不存在，就使用 <literal>template1</literal>。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-p <replaceable>port</replaceable></option></term>
      <term><option>--port=<replaceable>port</replaceable></option></term>
      <listitem>
       <para>
        指定服务器正在监听连接的 TCP 端口或本地 Unix 域套接字文件扩展名。默认是放在<envar>PGPORT</envar>环境变量中（如果被设置），否则使用编译在程序中的默认值。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-U <replaceable>username</replaceable></option></term>
      <term><option>--username=<replaceable>username</replaceable></option></term>
      <listitem>
       <para>
        要作为哪个用户连接。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-w</option></term>
      <term><option>--no-password</option></term>
      <listitem>
       <para>
        从不发出一个口令提示。如果服务器要求口令认证并且没有其他方式提供口令（例如一个<filename>.pgpass</filename>文件），那儿连接尝试将失败。这个选项对于批处理任务和脚本有用，因为在其中没有一个用户来输入口令。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-W</option></term>
      <term><option>--password</option></term>
      <listitem>
       <para>
        强制<application>pg_dumpall</application>在连接到一个数据库之前提示要求一个口令。
       </para>

       <para>
        这个选项从来不是必须的，因为如果服务器要求口令认证，<application>pg_dumpall</application>将自动提示要求一个口令。但是，<application>pg_dumpall</application>将浪费一次连接尝试来发现服务器想要一个口令。在某些情况下，值得键入<option>-W</option>来避免额外的连接尝试。
       </para>

       <para>
        注意对每个要被转储的数据库，口令提示都会再次出现。通常，最好设置一个<filename>~/.pgpass</filename>文件来减少手工口令输入。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>--role=<replaceable class="parameter">rolename</replaceable></option></term>
      <listitem>
       <para>
        指定一个用来创建该转储的角色名。这个选项导致<application>pg_dump</application>在连接到数据库后发出一个<command>SET ROLE</command> <replaceable class="parameter">rolename</replaceable>命令。当已认证用户（由<option>-U</option>指定）缺少<application>pg_dump</application>所需的特权但是能够切换到一个具有所需权利的角色时，这个选项很有用。一些安装有针对直接作为超级用户登录的策略，使用这个选项可以让转储在不违反该策略的前提下完成。
       </para>
      </listitem>
     </varlistentry>
   </variablelist>
  </para>
 </refsect1>


 <refsect1>
<!--==========================orignal english content==========================
  <title>Environment</title>
____________________________________________________________________________-->
  <title>环境</title>

  <variablelist>
   <varlistentry>
<!--==========================orignal english content==========================
    <term><envar>PGHOST</envar></term>
____________________________________________________________________________-->
    <term><envar>PGHOST</envar></term>
<!--==========================orignal english content==========================
    <term><envar>PGOPTIONS</envar></term>
____________________________________________________________________________-->
    <term><envar>PGOPTIONS</envar></term>
<!--==========================orignal english content==========================
    <term><envar>PGPORT</envar></term>
____________________________________________________________________________-->
    <term><envar>PGPORT</envar></term>
<!--==========================orignal english content==========================
    <term><envar>PGUSER</envar></term>
____________________________________________________________________________-->
    <term><envar>PGUSER</envar></term>

    <listitem>
<!--==========================orignal english content==========================
     <para>
      Default connection parameters
     </para>
____________________________________________________________________________-->
     <para>
      默认连接参数
     </para>
    </listitem>
   </varlistentry>
  </variablelist>

<!--==========================orignal english content==========================
  <para>
   This utility, like most other <productname>PostgreSQL</productname> utilities,
   also uses the environment variables supported by <application>libpq</application>
   (see <xref linkend="libpq-envars"/>).
  </para>
____________________________________________________________________________-->
  <para>
   和大部分其他<productname>PostgreSQL</productname>工具相似，这个工具也使用<application>libpq</application>（见<xref linkend="libpq-envars"/>）支持的环境变量。
  </para>

 </refsect1>


 <refsect1>
<!--==========================orignal english content==========================
  <title>Notes</title>
____________________________________________________________________________-->
  <title>注解</title>

<!--==========================orignal english content==========================
  <para>
   Since <application>pg_dumpall</application> calls
   <application>pg_dump</application> internally, some diagnostic
   messages will refer to <application>pg_dump</application>.
  </para>
____________________________________________________________________________-->
  <para>
   因为<application>pg_dumpall</application>在内部调用<application>pg_dump</application>，所以， 一些诊断消息可以参考<application>pg_dump</application>。
  </para>

<!--==========================orignal english content==========================
  <para>
   The <option>-&minus;clean</option> option can be useful even when your
   intention is to restore the dump script into a fresh cluster.  Use of
   <option>-&minus;clean</option> authorizes the script to drop and re-create the
   built-in <literal>postgres</literal> and <literal>template1</literal>
   databases, ensuring that those databases will retain the same properties
   (for instance, locale and encoding) that they had in the source cluster.
   Without the option, those databases will retain their existing
   database-level properties, as well as any pre-existing contents.
  </para>
____________________________________________________________________________-->
  <para>
   即使当用户的目的是把转储脚本恢复到一个空的集簇中，<option>--clean</option>选项也有用武之地。<option>--clean</option>的使用让该脚本删除并且重建内建的<literal>postgres</literal>和<literal>template1</literal>数据库，确保这两个数据库保持与源集簇中相同的属性（例如locale和编码）。如果不用这个选项，这两个数据库将保持它们现有的数据库级属性以及任何已有的内容。
  </para>

<!--==========================orignal english content==========================
  <para>
   Once restored, it is wise to run <command>ANALYZE</command> on each
   database so the optimizer has useful statistics. You
   can also run <command>vacuumdb -a -z</command> to analyze all
   databases.
  </para>
____________________________________________________________________________-->
  <para>
   一旦恢复，建议在每个数据库上运行<command>ANALYZE</command>，这样优化器就可以得到有用的统计信息。你也可以运行<command>vacuumdb -a -z</command>来分析所有数据库。
  </para>

<!--==========================orignal english content==========================
  <para>
   The dump script should not be expected to run completely without errors.
   In particular, because the script will issue <command>CREATE ROLE</command>
   for every role existing in the source cluster, it is certain to get a
   <quote>role already exists</quote> error for the bootstrap superuser,
   unless the destination cluster was initialized with a different bootstrap
   superuser name.  This error is harmless and should be ignored.  Use of
   the <option>-&minus;clean</option> option is likely to produce additional
   harmless error messages about non-existent objects, although you can
   minimize those by adding <option>-&minus;if-exists</option>.
  </para>
____________________________________________________________________________-->
  <para>
   不应该预期转储脚本运行到结束都不出错。特别是由于脚本将为源集簇中已有的每一个角色发出<command>CREATE ROLE</command>语句，对于bootstrap超级用户当然会得到一个<quote>role already exists</quote>错误，除非目标集簇用一个不同的bootstrap超级用户名完成的初始化。这种错误是无害的并且应该被忽略。<option>--clean</option>选项的使用很可能会产生额外的有关于不存在对象的无害错误消息，不过可以通过加上<option>--if-exists</option>减少这类错误消息。
  </para>

<!--==========================orignal english content==========================
  <para>
   <application>pg_dumpall</application> requires all needed
   tablespace directories to exist before the restore;  otherwise,
   database creation will fail for databases in non-default
   locations.
  </para>
____________________________________________________________________________-->
  <para>
   <application>pg_dumpall</application>要求所有需要的表空间目录在进行恢复之前就必须存在；否则，数据库创建就会由于在非默认位置创建数据库而失败。
  </para>
 </refsect1>


 <refsect1 id="app-pg-dumpall-ex">
<!--==========================orignal english content==========================
  <title>Examples</title>
____________________________________________________________________________-->
  <title>例子</title>
<!--==========================orignal english content==========================
  <para>
   To dump all databases:

<screen>
<prompt>$</prompt> <userinput>pg_dumpall &gt; db.out</userinput>
</screen>
  </para>
____________________________________________________________________________-->
  <para>
   要转储所有数据库：

<screen>
<prompt>$</prompt> <userinput>pg_dumpall &gt; db.out</userinput>
</screen>
  </para>

<!--==========================orignal english content==========================
  <para>
   To reload database(s) from this file, you can use:
<screen>
<prompt>$</prompt> <userinput>psql -f db.out postgres</userinput>
</screen>
   It is not important to which database you connect here since the
   script file created by <application>pg_dumpall</application> will
   contain the appropriate commands to create and connect to the saved
   databases.  An exception is that if you specified <option>-&minus;clean</option>,
   you must connect to the <literal>postgres</literal> database initially;
   the script will attempt to drop other databases immediately, and that
   will fail for the database you are connected to.
  </para>
____________________________________________________________________________-->
  <para>
   要从这个文件重新载入数据库，你可以使用：
<screen>
<prompt>$</prompt> <userinput>psql -f db.out postgres</userinput>
</screen>
   这里你连接哪一个数据库并不重要，因为由<application>pg_dumpall</application>创建的脚本将包含合适的命令来创建和连接到被保存的数据库。一个例外是，如果指定了<option>--clean</option>，则开始时必须连接到<literal>postgres</literal>数据库，该脚本将立即尝试删除其他数据库，并且这种动作对于已连接上的这个数据库将会失败。
  </para>
 </refsect1>

 <refsect1>
<!--==========================orignal english content==========================
  <title>See Also</title>
____________________________________________________________________________-->
  <title>参见</title>

<!--==========================orignal english content==========================
  <para>
    Check <xref linkend="app-pgdump"/> for details on possible
    error conditions.
  </para>
____________________________________________________________________________-->
  <para>
    可能的错误情况请查看<xref linkend="app-pgdump"/>。
  </para>
 </refsect1>

</refentry>
