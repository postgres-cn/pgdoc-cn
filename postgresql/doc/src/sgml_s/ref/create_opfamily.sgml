<!--
doc/src/sgml/ref/create_opfamily.sgml
PostgreSQL documentation
-->

<refentry id="SQL-CREATEOPFAMILY">
<!--==========================orignal english content==========================
 <indexterm zone="sql-createopfamily">
  <primary>CREATE OPERATOR FAMILY</primary>
 </indexterm>
____________________________________________________________________________-->
 <indexterm zone="sql-createopfamily">
  <primary>CREATE OPERATOR FAMILY</primary>
 </indexterm>

<!--==========================orignal english content==========================
 <refmeta>
  <refentrytitle>CREATE OPERATOR FAMILY</refentrytitle>
  <manvolnum>7</manvolnum>
  <refmiscinfo>SQL - Language Statements</refmiscinfo>
 </refmeta>
____________________________________________________________________________-->
 <refmeta>
  <refentrytitle>CREATE OPERATOR FAMILY</refentrytitle>
  <manvolnum>7</manvolnum>
  <refmiscinfo>SQL - Language Statements</refmiscinfo>
 </refmeta>

<!--==========================orignal english content==========================
 <refnamediv>
  <refname>CREATE OPERATOR FAMILY</refname>
  <refpurpose>define a new operator family</refpurpose>
 </refnamediv>
____________________________________________________________________________-->
 <refnamediv>
  <refname>CREATE OPERATOR FAMILY</refname>
  <refpurpose>定义一个新的操作符族</refpurpose>
 </refnamediv>

 <refsynopsisdiv>
<!--==========================orignal english content==========================
<synopsis>
CREATE OPERATOR FAMILY <replaceable class="parameter">name</replaceable> USING <replaceable class="parameter">index_method</replaceable>
</synopsis>
____________________________________________________________________________-->
<synopsis>
CREATE OPERATOR FAMILY <replaceable class="parameter">name</replaceable> USING <replaceable class="parameter">index_method</replaceable>
</synopsis>
 </refsynopsisdiv>

 <refsect1>
<!--==========================orignal english content==========================
  <title>Description</title>
____________________________________________________________________________-->
  <title>描述</title>

<!--==========================orignal english content==========================
  <para>
   <command>CREATE OPERATOR FAMILY</command> creates a new operator family.
   An operator family defines a collection of related operator classes,
   and perhaps some additional operators and support functions that are
   compatible with these operator classes but not essential for the
   functioning of any individual index.  (Operators and functions that
   are essential to indexes should be grouped within the relevant operator
   class, rather than being <quote>loose</> in the operator family.
   Typically, single-data-type operators are bound to operator classes,
   while cross-data-type operators can be loose in an operator family
   containing operator classes for both data types.)
  </para>
____________________________________________________________________________-->
  <para>
   <command>CREATE OPERATOR FAMILY</command>创建一个新的
   操作符族。一个操作符族定义一个相关操作符类组成的集合，并且可能还
   包含一些额外的、与这些操作符类兼容但对于任何个体索引的功能不是至关
   重要的操作符和支持函数（对索引至关重要的操作符和函数应该被分组在
   相关的操作符类中，而不是<quote>松散地</quote>在操作符中。通常，单一
   数据类型操作符被限制在操作符类中，而跨数据类型操作符可以松散地存在
   于一个包含用于两种数据类型的操作符类的操作符族中）。
  </para>

<!--==========================orignal english content==========================
  <para>
   The new operator family is initially empty.  It should be populated
   by issuing subsequent <command>CREATE OPERATOR CLASS</command> commands
   to add contained operator classes, and optionally
   <command>ALTER OPERATOR FAMILY</command> commands to add <quote>loose</>
   operators and their corresponding support functions.
  </para>
____________________________________________________________________________-->
  <para>
   新的操作符族初始时为空。应该通过发出后续的
   <command>CREATE OPERATOR CLASS</command>命令来增加包含
   在其中的操作符类，还可以用可选的
   <command>ALTER OPERATOR FAMILY</command>命令来增加
   <quote>松散的</quote>操作符和它们对应的支持函数。
  </para>

<!--==========================orignal english content==========================
  <para>
   If a schema name is given then the operator family is created in the
   specified schema.  Otherwise it is created in the current schema.
   Two operator families in the same schema can have the same name only if they
   are for different index methods.
  </para>
____________________________________________________________________________-->
  <para>
   如果给出一个模式名称，该操作符族会被创建在指定的模式中。否则，
   它会被创建在当前模式中。只有当同一个模式中的两个操作符族是用于
   不同的索引方法时，它们才能拥有相同的名字。
  </para>

<!--==========================orignal english content==========================
  <para>
   The user who defines an operator family becomes its owner.  Presently,
   the creating user must be a superuser.  (This restriction is made because
   an erroneous operator family definition could confuse or even crash the
   server.)
  </para>
____________________________________________________________________________-->
  <para>
   定义一个操作符族的用户将成为它的拥有者。当前，创建用户必须是超级用户（
   做出这样的限制是因为错误的操作符族会让服务器混淆甚至崩溃）。
  </para>

<!--==========================orignal english content==========================
  <para>
   Refer to <xref linkend="xindex"> for further information.
  </para>
____________________________________________________________________________-->
  <para>
   进一步的信息可以参考<xref linkend="xindex"/>。
  </para>
 </refsect1>

 <refsect1>
<!--==========================orignal english content==========================
  <title>Parameters</title>
____________________________________________________________________________-->
  <title>参数</title>

  <variablelist>
   <varlistentry>
<!--==========================orignal english content==========================
    <term><replaceable class="parameter">name</replaceable></term>
____________________________________________________________________________-->
    <term><replaceable class="parameter">name</replaceable></term>
    <listitem>
<!--==========================orignal english content==========================
     <para>
      The name of the operator family to be created.  The name can be
      schema-qualified.
     </para>
____________________________________________________________________________-->
     <para>
      要创建的操作符族的名称。该名称可以被模式限定。
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
<!--==========================orignal english content==========================
    <term><replaceable class="parameter">index_method</replaceable></term>
____________________________________________________________________________-->
    <term><replaceable class="parameter">index_method</replaceable></term>
    <listitem>
<!--==========================orignal english content==========================
     <para>
      The name of the index method this operator family is for.
     </para>
____________________________________________________________________________-->
     <para>
      这个操作符族要用于的索引方法的名称。
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </refsect1>

 <refsect1>
<!--==========================orignal english content==========================
  <title>Compatibility</title>
____________________________________________________________________________-->
  <title>兼容性</title>

<!--==========================orignal english content==========================
  <para>
   <command>CREATE OPERATOR FAMILY</command> is a
   <productname>PostgreSQL</productname> extension.  There is no
   <command>CREATE OPERATOR FAMILY</command> statement in the SQL
   standard.
  </para>
____________________________________________________________________________-->
  <para>
   <command>CREATE OPERATOR FAMILY</command>是一种
   <productname>PostgreSQL</productname>扩展。在 SQL 标准中没有
   <command>CREATE OPERATOR FAMILY</command>语句。
  </para>
 </refsect1>

 <refsect1>
<!--==========================orignal english content==========================
  <title>See Also</title>
____________________________________________________________________________-->
  <title>另见</title>

  <simplelist type="inline">
   <member><xref linkend="sql-alteropfamily"/></member>
   <member><xref linkend="sql-dropopfamily"/></member>
   <member><xref linkend="sql-createopclass"/></member>
   <member><xref linkend="sql-alteropclass"/></member>
   <member><xref linkend="sql-dropopclass"/></member>
  </simplelist>
 </refsect1>
</refentry>
