<!--
doc/src/sgml/ref/alter_procedure.sgml
PostgreSQL documentation
-->

<refentry id="sql-alterprocedure">
<!--==========================orignal english content==========================
 <indexterm zone="sql-alterprocedure">
  <primary>ALTER PROCEDURE</primary>
 </indexterm>
____________________________________________________________________________-->
 <indexterm zone="sql-alterprocedure">
  <primary>ALTER PROCEDURE</primary>
 </indexterm>

<!--==========================orignal english content==========================
 <refmeta>
  <refentrytitle>ALTER PROCEDURE</refentrytitle>
  <manvolnum>7</manvolnum>
  <refmiscinfo>SQL - Language Statements</refmiscinfo>
 </refmeta>
____________________________________________________________________________-->
 <refmeta>
  <refentrytitle>ALTER PROCEDURE</refentrytitle>
  <manvolnum>7</manvolnum>
  <refmiscinfo>SQL - Language Statements</refmiscinfo>
 </refmeta>

<!--==========================orignal english content==========================
 <refnamediv>
  <refname>ALTER PROCEDURE</refname>
  <refpurpose>change the definition of a procedure</refpurpose>
 </refnamediv>
____________________________________________________________________________-->
 <refnamediv>
  <refname>ALTER PROCEDURE</refname>
  <refpurpose>change the definition of a procedure</refpurpose>
 </refnamediv>

 <refsynopsisdiv>
<!--==========================orignal english content==========================
<synopsis>
ALTER PROCEDURE <replaceable>name</replaceable> [ ( [ [ <replaceable class="parameter">argmode</replaceable> ] [ <replaceable class="parameter">argname</replaceable> ] <replaceable class="parameter">argtype</replaceable> [, ...] ] ) ]
    <replaceable class="parameter">action</replaceable> [ ... ] [ RESTRICT ]
ALTER PROCEDURE <replaceable>name</replaceable> [ ( [ [ <replaceable class="parameter">argmode</replaceable> ] [ <replaceable class="parameter">argname</replaceable> ] <replaceable class="parameter">argtype</replaceable> [, ...] ] ) ]
    RENAME TO <replaceable>new_name</replaceable>
ALTER PROCEDURE <replaceable>name</replaceable> [ ( [ [ <replaceable class="parameter">argmode</replaceable> ] [ <replaceable class="parameter">argname</replaceable> ] <replaceable class="parameter">argtype</replaceable> [, ...] ] ) ]
    OWNER TO { <replaceable>new_owner</replaceable> | CURRENT_USER | SESSION_USER }
ALTER PROCEDURE <replaceable>name</replaceable> [ ( [ [ <replaceable class="parameter">argmode</replaceable> ] [ <replaceable class="parameter">argname</replaceable> ] <replaceable class="parameter">argtype</replaceable> [, ...] ] ) ]
    SET SCHEMA <replaceable>new_schema</replaceable>
ALTER PROCEDURE <replaceable>name</replaceable> [ ( [ [ <replaceable class="parameter">argmode</replaceable> ] [ <replaceable class="parameter">argname</replaceable> ] <replaceable class="parameter">argtype</replaceable> [, ...] ] ) ]
    DEPENDS ON EXTENSION <replaceable>extension_name</replaceable>

<phrase>where <replaceable class="parameter">action</replaceable> is one of:</phrase>

    [ EXTERNAL ] SECURITY INVOKER | [ EXTERNAL ] SECURITY DEFINER
    SET <replaceable class="parameter">configuration_parameter</replaceable> { TO | = } { <replaceable class="parameter">value</replaceable> | DEFAULT }
    SET <replaceable class="parameter">configuration_parameter</replaceable> FROM CURRENT
    RESET <replaceable class="parameter">configuration_parameter</replaceable>
    RESET ALL
</synopsis>
____________________________________________________________________________-->
<synopsis>
ALTER PROCEDURE <replaceable>name</replaceable> [ ( [ [ <replaceable class="parameter">argmode</replaceable> ] [ <replaceable class="parameter">argname</replaceable> ] <replaceable class="parameter">argtype</replaceable> [, ...] ] ) ]
    <replaceable class="parameter">action</replaceable> [ ... ] [ RESTRICT ]
ALTER PROCEDURE <replaceable>name</replaceable> [ ( [ [ <replaceable class="parameter">argmode</replaceable> ] [ <replaceable class="parameter">argname</replaceable> ] <replaceable class="parameter">argtype</replaceable> [, ...] ] ) ]
    RENAME TO <replaceable>new_name</replaceable>
ALTER PROCEDURE <replaceable>name</replaceable> [ ( [ [ <replaceable class="parameter">argmode</replaceable> ] [ <replaceable class="parameter">argname</replaceable> ] <replaceable class="parameter">argtype</replaceable> [, ...] ] ) ]
    OWNER TO { <replaceable>new_owner</replaceable> | CURRENT_USER | SESSION_USER }
ALTER PROCEDURE <replaceable>name</replaceable> [ ( [ [ <replaceable class="parameter">argmode</replaceable> ] [ <replaceable class="parameter">argname</replaceable> ] <replaceable class="parameter">argtype</replaceable> [, ...] ] ) ]
    SET SCHEMA <replaceable>new_schema</replaceable>
ALTER PROCEDURE <replaceable>name</replaceable> [ ( [ [ <replaceable class="parameter">argmode</replaceable> ] [ <replaceable class="parameter">argname</replaceable> ] <replaceable class="parameter">argtype</replaceable> [, ...] ] ) ]
    DEPENDS ON EXTENSION <replaceable>extension_name</replaceable>

<phrase>其中<replaceable class="parameter">action</replaceable>是下列之一：</phrase>

    [ EXTERNAL ] SECURITY INVOKER | [ EXTERNAL ] SECURITY DEFINER
    SET <replaceable class="parameter">configuration_parameter</replaceable> { TO | = } { <replaceable class="parameter">value</replaceable> | DEFAULT }
    SET <replaceable class="parameter">configuration_parameter</replaceable> FROM CURRENT
    RESET <replaceable class="parameter">configuration_parameter</replaceable>
    RESET ALL
</synopsis>
 </refsynopsisdiv>

 <refsect1>
<!--==========================orignal english content==========================
  <title>Description</title>
____________________________________________________________________________-->
  <title>简介</title>

<!--==========================orignal english content==========================
  <para>
   <command>ALTER PROCEDURE</command> changes the definition of a
   procedure.
  </para>
____________________________________________________________________________-->
  <para>
   <command>ALTER PROCEDURE</command>更改一个过程的定义。
  </para>

<!--==========================orignal english content==========================
  <para>
   You must own the procedure to use <command>ALTER PROCEDURE</command>.
   To change a procedure's schema, you must also have <literal>CREATE</literal>
   privilege on the new schema.
   To alter the owner, you must also be a direct or indirect member of the new
   owning role, and that role must have <literal>CREATE</literal> privilege on
   the procedure's schema.  (These restrictions enforce that altering the owner
   doesn't do anything you couldn't do by dropping and recreating the procedure.
   However, a superuser can alter ownership of any procedure anyway.)
  </para>
____________________________________________________________________________-->
  <para>
   要使用<command>ALTER PROCEDURE</command>，你必须拥有该过程。要更改一个过程的方案，你还必须有新方案上的<literal>CREATE</literal>特权。要更改拥有者，你还必须是新拥有角色的直接或间接成员，并且那个角色在该过程的方案上拥有<literal>CREATE</literal>特权（这些限制强制更新拥有者无法做到通过删除和重建该过程无法做到的事情。不过，超级用户总是能够更改任何过程的拥有关系）。
  </para>
 </refsect1>

 <refsect1>
<!--==========================orignal english content==========================
  <title>Parameters</title>
____________________________________________________________________________-->
  <title>参数</title>

  <variablelist>
   <varlistentry>
<!--==========================orignal english content==========================
    <term><replaceable class="parameter">name</replaceable></term>
____________________________________________________________________________-->
    <term><replaceable class="parameter">name</replaceable></term>
    <listitem>
<!--==========================orignal english content==========================
     <para>
      The name (optionally schema-qualified) of an existing procedure.  If no
      argument list is specified, the name must be unique in its schema.
     </para>
____________________________________________________________________________-->
     <para>
      一个现有的过程的名字（可以被方案限定）。如果没有指定参数列表，这个名字必须在其方案中唯一。
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
<!--==========================orignal english content==========================
    <term><replaceable class="parameter">argmode</replaceable></term>
____________________________________________________________________________-->
    <term><replaceable class="parameter">argmode</replaceable></term>

    <listitem>
<!--==========================orignal english content==========================
     <para>
      The mode of an argument: <literal>IN</literal>  or <literal>VARIADIC</literal>.
      If omitted, the default is <literal>IN</literal>.
     </para>
____________________________________________________________________________-->
     <para>
      参数的模式：<literal>IN</literal>或<literal>VARIADIC</literal>。如果被省略，默认是<literal>IN</literal>。
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
<!--==========================orignal english content==========================
    <term><replaceable class="parameter">argname</replaceable></term>
____________________________________________________________________________-->
    <term><replaceable class="parameter">argname</replaceable></term>

    <listitem>
<!--==========================orignal english content==========================
     <para>
      The name of an argument.
      Note that <command>ALTER PROCEDURE</command> does not actually pay
      any attention to argument names, since only the argument data
      types are needed to determine the procedure's identity.
     </para>
____________________________________________________________________________-->
     <para>
      参数的名字。注意<command>ALTER PROCEDURE</command>实际上并不关心参数名，因为只需要参数的数据类型来确定过程的身份。
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
<!--==========================orignal english content==========================
    <term><replaceable class="parameter">argtype</replaceable></term>
____________________________________________________________________________-->
    <term><replaceable class="parameter">argtype</replaceable></term>

    <listitem>
<!--==========================orignal english content==========================
     <para>
      The data type(s) of the procedure's arguments (optionally
      schema-qualified), if any.
     </para>
____________________________________________________________________________-->
     <para>
      如果该过程有参数，这是参数的数据类型（可以被方案限定）。
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
<!--==========================orignal english content==========================
    <term><replaceable class="parameter">new_name</replaceable></term>
____________________________________________________________________________-->
    <term><replaceable class="parameter">new_name</replaceable></term>
    <listitem>
<!--==========================orignal english content==========================
     <para>
      The new name of the procedure.
     </para>
____________________________________________________________________________-->
     <para>
      该过程的新名字。
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
<!--==========================orignal english content==========================
    <term><replaceable class="parameter">new_owner</replaceable></term>
____________________________________________________________________________-->
    <term><replaceable class="parameter">new_owner</replaceable></term>
    <listitem>
<!--==========================orignal english content==========================
     <para>
      The new owner of the procedure.  Note that if the procedure is
      marked <literal>SECURITY DEFINER</literal>, it will subsequently
      execute as the new owner.
     </para>
____________________________________________________________________________-->
     <para>
      该过程的新拥有者。注意，如果这个过程被标记为<literal>SECURITY DEFINER</literal>，接下来它将被作为新拥有者执行。
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
<!--==========================orignal english content==========================
    <term><replaceable class="parameter">new_schema</replaceable></term>
____________________________________________________________________________-->
    <term><replaceable class="parameter">new_schema</replaceable></term>
    <listitem>
<!--==========================orignal english content==========================
     <para>
      The new schema for the procedure.
     </para>
____________________________________________________________________________-->
     <para>
      该过程的新方案。
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
<!--==========================orignal english content==========================
    <term><replaceable class="parameter">extension_name</replaceable></term>
____________________________________________________________________________-->
    <term><replaceable class="parameter">extension_name</replaceable></term>
    <listitem>
<!--==========================orignal english content==========================
     <para>
      The name of the extension that the procedure is to depend on.
     </para>
____________________________________________________________________________-->
     <para>
      该过程所依赖的扩展的名称。
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
<!--==========================orignal english content==========================
    <term><literal><optional> EXTERNAL </optional> SECURITY INVOKER</literal></term>
____________________________________________________________________________-->
    <term><literal><optional> EXTERNAL </optional> SECURITY INVOKER</literal></term>
<!--==========================orignal english content==========================
    <term><literal><optional> EXTERNAL </optional> SECURITY DEFINER</literal></term>
____________________________________________________________________________-->
    <term><literal><optional> EXTERNAL </optional> SECURITY DEFINER</literal></term>

    <listitem>
<!--==========================orignal english content==========================
     <para>
      Change whether the procedure is a security definer or not. The
      key word <literal>EXTERNAL</literal> is ignored for SQL
      conformance. See <xref linkend="sql-createprocedure"/> for more information about
      this capability.
     </para>
____________________________________________________________________________-->
     <para>
      更改该过程是否为一个安全性定义器。关键词<literal>EXTERNAL</literal>由于SQL符合性的原因被忽略。更多有关这个能力的信息请见<xref linkend="sql-createprocedure"/>。
     </para>
    </listitem>
   </varlistentry>

     <varlistentry>
<!--==========================orignal english content==========================
      <term><replaceable>configuration_parameter</replaceable></term>
____________________________________________________________________________-->
      <term><replaceable>configuration_parameter</replaceable></term>
<!--==========================orignal english content==========================
      <term><replaceable>value</replaceable></term>
____________________________________________________________________________-->
      <term><replaceable>value</replaceable></term>
      <listitem>
<!--==========================orignal english content==========================
       <para>
        Add or change the assignment to be made to a configuration parameter
        when the procedure is called.  If
        <replaceable>value</replaceable> is <literal>DEFAULT</literal>
        or, equivalently, <literal>RESET</literal> is used, the procedure-local
        setting is removed, so that the procedure executes with the value
        present in its environment.  Use <literal>RESET
        ALL</literal> to clear all procedure-local settings.
        <literal>SET FROM CURRENT</literal> saves the value of the parameter that
        is current when <command>ALTER PROCEDURE</command> is executed as the value
        to be applied when the procedure is entered.
       </para>
____________________________________________________________________________-->
       <para>
        增加或者更改在调用该过程时，要对一个配置参数做的赋值。如果<replaceable>value</replaceable>是<literal>DEFAULT</literal>或者等效的值，则会使用<literal>RESET</literal>，过程本地的设置会被移除，这样该过程的执行就会使用其所处环境中的值。使用<literal>RESET ALL</literal>可以清除所有的过程本地设置。<literal>SET FROM CURRENT</literal>会把<command>ALTER PROCEDURE</command>执行时该参数的当前值保存为进入该过程时要被应用的值。
       </para>

<!--==========================orignal english content==========================
       <para>
        See <xref linkend="sql-set"/> and
        <xref linkend="runtime-config"/>
        for more information about allowed parameter names and values.
       </para>
____________________________________________________________________________-->
       <para>
        关于允许的参数名和参数值的更多信息请见<xref linkend="sql-set"/>和<xref linkend="runtime-config"/>。
       </para>
      </listitem>
     </varlistentry>

   <varlistentry>
<!--==========================orignal english content==========================
    <term><literal>RESTRICT</literal></term>
____________________________________________________________________________-->
    <term><literal>RESTRICT</literal></term>

    <listitem>
<!--==========================orignal english content==========================
     <para>
      Ignored for conformance with the SQL standard.
     </para>
____________________________________________________________________________-->
     <para>
      为了符合SQL标准会被忽略。
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </refsect1>

 <refsect1>
<!--==========================orignal english content==========================
  <title>Examples</title>
____________________________________________________________________________-->
  <title>示例</title>

<!--==========================orignal english content==========================
  <para>
   To rename the procedure <literal>insert_data</literal> with two arguments
   of type <type>integer</type> to <literal>insert_record</literal>:
<programlisting>
ALTER PROCEDURE insert_data(integer, integer) RENAME TO insert_record;
</programlisting>
  </para>
____________________________________________________________________________-->
  <para>
   要重命名具有两个<type>integer</type>类型参数的过程<literal>insert_data</literal>为<literal>insert_record</literal>：
<programlisting>
ALTER PROCEDURE insert_data(integer, integer) RENAME TO insert_record;
</programlisting>
  </para>

<!--==========================orignal english content==========================
  <para>
   To change the owner of the procedure <literal>insert_data</literal> with
   two arguments of type <type>integer</type> to <literal>joe</literal>:
<programlisting>
ALTER PROCEDURE insert_data(integer, integer) OWNER TO joe;
</programlisting>
  </para>
____________________________________________________________________________-->
  <para>
   要把具有两个<type>integer</type>类型参数的过程<literal>insert_data</literal>的拥有者改为<literal>joe</literal>：
<programlisting>
ALTER PROCEDURE insert_data(integer, integer) OWNER TO joe;
</programlisting>
  </para>

<!--==========================orignal english content==========================
  <para>
   To change the schema of the procedure <literal>insert_data</literal> with
   two arguments of type <type>integer</type>
   to <literal>accounting</literal>:
<programlisting>
ALTER PROCEDURE insert_data(integer, integer) SET SCHEMA accounting;
</programlisting>
  </para>
____________________________________________________________________________-->
  <para>
   要重把具有两个<type>integer</type>类型参数的过程<literal>insert_data</literal>的方案改为<literal>accounting</literal>：
<programlisting>
ALTER PROCEDURE insert_data(integer, integer) SET SCHEMA accounting;
</programlisting>
  </para>

<!--==========================orignal english content==========================
  <para>
   To mark the procedure <literal>insert_data(integer, integer)</literal> as
   being dependent on the extension <literal>myext</literal>:
<programlisting>
ALTER PROCEDURE insert_data(integer, integer) DEPENDS ON EXTENSION myext;
</programlisting>
  </para>
____________________________________________________________________________-->
  <para>
   把过程<literal>insert_data(integer, integer)</literal>标记为依赖于扩展<literal>myext</literal>：
<programlisting>
ALTER PROCEDURE insert_data(integer, integer) DEPENDS ON EXTENSION myext;
</programlisting>
  </para>

<!--==========================orignal english content==========================
  <para>
   To adjust the search path that is automatically set for a procedure:
<programlisting>
ALTER PROCEDURE check_password(text) SET search_path = admin, pg_temp;
</programlisting>
  </para>
____________________________________________________________________________-->
  <para>
   要调整一个过程自动设置的搜索路径：
<programlisting>
ALTER PROCEDURE check_password(text) SET search_path = admin, pg_temp;
</programlisting>
  </para>

<!--==========================orignal english content==========================
  <para>
   To disable automatic setting of <varname>search_path</varname> for a procedure:
<programlisting>
ALTER PROCEDURE check_password(text) RESET search_path;
</programlisting>
   The procedure will now execute with whatever search path is used by its
   caller.
  </para>
____________________________________________________________________________-->
  <para>
   要为一个过程禁用<varname>search_path</varname>的自动设置：
<programlisting>
ALTER PROCEDURE check_password(text) RESET search_path;
</programlisting>
   现在这个过程将用其调用者所使用的任何搜索路径执行。
  </para>
 </refsect1>

 <refsect1>
<!--==========================orignal english content==========================
  <title>Compatibility</title>
____________________________________________________________________________-->
  <title>兼容性</title>

<!--==========================orignal english content==========================
  <para>
   This statement is partially compatible with the <command>ALTER
   PROCEDURE</command> statement in the SQL standard. The standard allows more
   properties of a procedure to be modified, but does not provide the
   ability to rename a procedure, make a procedure a security definer,
   attach configuration parameter values to a procedure,
   or change the owner, schema, or volatility of a procedure. The standard also
   requires the <literal>RESTRICT</literal> key word, which is optional in
   <productname>PostgreSQL</productname>.
  </para>
____________________________________________________________________________-->
  <para>
   这个语句与SQL标准中的<command>ALTER PROCEDURE</command>语句部分兼容。标注你允许修改一个过程的更多性质，但是不提供重命名过程、让过程成为安全性定义器、为过程附加配置参数值或者更改过程的拥有者、方案或者可变性的能力。标准还要求<literal>RESTRICT</literal>关键字，而它在<productname>PostgreSQL</productname>中是可选的。
  </para>
 </refsect1>

 <refsect1>
<!--==========================orignal english content==========================
  <title>See Also</title>
____________________________________________________________________________-->
  <title>另见</title>

  <simplelist type="inline">
   <member><xref linkend="sql-createprocedure"/></member>
   <member><xref linkend="sql-dropprocedure"/></member>
   <member><xref linkend="sql-alterfunction"/></member>
   <member><xref linkend="sql-alterroutine"/></member>
  </simplelist>
 </refsect1>
</refentry>
