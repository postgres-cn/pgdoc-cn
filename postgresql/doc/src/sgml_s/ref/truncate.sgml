<!--
doc/src/sgml/ref/truncate.sgml
PostgreSQL documentation
-->

<refentry id="SQL-TRUNCATE">
<!--==========================orignal english content==========================
 <indexterm zone="sql-truncate">
  <primary>TRUNCATE</primary>
 </indexterm>
____________________________________________________________________________-->
 <indexterm zone="sql-truncate">
  <primary>TRUNCATE</primary>
 </indexterm>

<!--==========================orignal english content==========================
 <refmeta>
  <refentrytitle>TRUNCATE</refentrytitle>
  <manvolnum>7</manvolnum>
  <refmiscinfo>SQL - Language Statements</refmiscinfo>
 </refmeta>
____________________________________________________________________________-->
 <refmeta>
  <refentrytitle>TRUNCATE</refentrytitle>
  <manvolnum>7</manvolnum>
  <refmiscinfo>SQL - Language Statements</refmiscinfo>
 </refmeta>

<!--==========================orignal english content==========================
 <refnamediv>
  <refname>TRUNCATE</refname>
  <refpurpose>empty a table or set of tables</refpurpose>
 </refnamediv>
____________________________________________________________________________-->
 <refnamediv>
  <refname>TRUNCATE</refname>
  <refpurpose>清空一个表或者一组表</refpurpose>
 </refnamediv>

 <refsynopsisdiv>
<!--==========================orignal english content==========================
<synopsis>
TRUNCATE [ TABLE ] [ ONLY ] <replaceable class="parameter">name</replaceable> [ * ] [, ... ]
    [ RESTART IDENTITY | CONTINUE IDENTITY ] [ CASCADE | RESTRICT ]
</synopsis>
____________________________________________________________________________-->
<synopsis>
TRUNCATE [ TABLE ] [ ONLY ] <replaceable class="parameter">name</replaceable> [ * ] [, ... ]
    [ RESTART IDENTITY | CONTINUE IDENTITY ] [ CASCADE | RESTRICT ]
</synopsis>
 </refsynopsisdiv>

 <refsect1>
<!--==========================orignal english content==========================
  <title>Description</title>
____________________________________________________________________________-->
  <title>描述</title>

<!--==========================orignal english content==========================
  <para>
   <command>TRUNCATE</command> quickly removes all rows from a set of
   tables. It has the same effect as an unqualified
   <command>DELETE</command> on each table, but since it does not actually
   scan the tables it is faster. Furthermore, it reclaims disk space
   immediately, rather than requiring a subsequent <command>VACUUM</command>
   operation. This is most useful on large tables.
  </para>
____________________________________________________________________________-->
  <para>
   <command>TRUNCATE</command>可以从一组表中快速地移除所有行。
   它具有和在每个表上执行无条件<command>DELETE</command>相同的
   效果，不过它会更快，因为它没有实际扫描表。此外，它会立刻回收磁盘空间，
   而不是要求一个后续的<command>VACUUM</command>操作。在大表上
   它最有用。
  </para>
 </refsect1>

 <refsect1>
<!--==========================orignal english content==========================
  <title>Parameters</title>
____________________________________________________________________________-->
  <title>参数</title>

  <variablelist>
   <varlistentry>
<!--==========================orignal english content==========================
    <term><replaceable class="parameter">name</replaceable></term>
____________________________________________________________________________-->
    <term><replaceable class="parameter">name</replaceable></term>
    <listitem>
<!--==========================orignal english content==========================
     <para>
      The name (optionally schema-qualified) of a table to truncate.
      If <literal>ONLY</> is specified before the table name, only that table
      is truncated.  If <literal>ONLY</> is not specified, the table and all
      its descendant tables (if any) are truncated.  Optionally, <literal>*</>
      can be specified after the table name to explicitly indicate that
      descendant tables are included.
     </para>
____________________________________________________________________________-->
     <para>
      要截断的表的名字（可以是模式限定的）。如果在表名前指定了
      <literal>ONLY</literal>，则只会截断该表。如果没有指定<literal>ONLY</literal>，
      该表及其所有后代表（如果有）都会被截断。可选地，可以在表名后指定
      <literal>*</literal>来显式地包括后代表。
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
<!--==========================orignal english content==========================
    <term><literal>RESTART IDENTITY</literal></term>
____________________________________________________________________________-->
    <term><literal>RESTART IDENTITY</literal></term>
    <listitem>
<!--==========================orignal english content==========================
     <para>
      Automatically restart sequences owned by columns of
      the truncated table(s).
     </para>
____________________________________________________________________________-->
     <para>
      自动重新开始被截断表的列所拥有的序列。
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
<!--==========================orignal english content==========================
    <term><literal>CONTINUE IDENTITY</literal></term>
____________________________________________________________________________-->
    <term><literal>CONTINUE IDENTITY</literal></term>
    <listitem>
<!--==========================orignal english content==========================
     <para>
      Do not change the values of sequences.  This is the default.
     </para>
____________________________________________________________________________-->
     <para>
      不更改序列值。这是默认值。
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
<!--==========================orignal english content==========================
    <term><literal>CASCADE</literal></term>
____________________________________________________________________________-->
    <term><literal>CASCADE</literal></term>
    <listitem>
<!--==========================orignal english content==========================
     <para>
      Automatically truncate all tables that have foreign-key references
      to any of the named tables, or to any tables added to the group
      due to <literal>CASCADE</literal>.
     </para>
____________________________________________________________________________-->
     <para>
      自动截断所有对任一所提及表有外键引用的表以及任何由于
      <literal>CASCADE</literal>被加入到组中的表。
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
<!--==========================orignal english content==========================
    <term><literal>RESTRICT</literal></term>
____________________________________________________________________________-->
    <term><literal>RESTRICT</literal></term>
    <listitem>
<!--==========================orignal english content==========================
     <para>
      Refuse to truncate if any of the tables have foreign-key references
      from tables that are not listed in the command.  This is the default.
     </para>
____________________________________________________________________________-->
     <para>
      如果任一表上具有来自命令中没有列出的表的外键引用，则拒绝截断。这是默认值。
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </refsect1>

 <refsect1>
<!--==========================orignal english content==========================
  <title>Notes</title>
____________________________________________________________________________-->
  <title>注解</title>

<!--==========================orignal english content==========================
  <para>
   You must have the <literal>TRUNCATE</literal> privilege on a table
   to truncate it.
  </para>
____________________________________________________________________________-->
  <para>
   要截断一个表，你必须具有其上的<literal>TRUNCATE</literal>特权。
  </para>

<!--==========================orignal english content==========================
  <para>
   <command>TRUNCATE</> acquires an <literal>ACCESS EXCLUSIVE</> lock on each
   table it operates on, which blocks all other concurrent operations
   on the table.  When <literal>RESTART IDENTITY</> is specified, any
   sequences that are to be restarted are likewise locked exclusively.
   If concurrent access to a table is required, then
   the <command>DELETE</> command should be used instead.
  </para>
____________________________________________________________________________-->
  <para>
   <command>TRUNCATE</command>在要操作的表上要求一个
   <literal>ACCESS EXCLUSIVE</literal>锁，这会阻塞所有其他在该表上的
   并发操作。当指定<literal>RESTART IDENTITY</literal>时，任何需要被
   重新开始的序列也会被排他地锁住。如果要求表上的并发访问，那么
   应该使用<command>DELETE</command>命令。
  </para>

<!--==========================orignal english content==========================
  <para>
   <command>TRUNCATE</> cannot be used on a table that has foreign-key
   references from other tables, unless all such tables are also truncated
   in the same command.  Checking validity in such cases would require table
   scans, and the whole point is not to do one.  The <literal>CASCADE</>
   option can be used to automatically include all dependent tables &mdash;
   but be very careful when using this option, or else you might lose data you
   did not intend to!
  </para>
____________________________________________________________________________-->
  <para>
   <command>TRUNCATE</command>不能被用在被其他表外键引用的表上，
   除非那些表也在同一个命令中被阶段。这些情况中的可行性检查将会
   要求表扫描，并且重点不是为了做扫描。<literal>CASCADE</literal>
   选项可以被用来自动地包括所有依赖表 &mdash; 但使用它时要非常
   小心，否则你可能丢失数据！
  </para>

<!--==========================orignal english content==========================
  <para>
   <command>TRUNCATE</> will not fire any <literal>ON DELETE</literal>
   triggers that might exist for the tables.  But it will fire
   <literal>ON TRUNCATE</literal> triggers.
   If <literal>ON TRUNCATE</> triggers are defined for any of
   the tables, then all <literal>BEFORE TRUNCATE</literal> triggers are
   fired before any truncation happens, and all <literal>AFTER
   TRUNCATE</literal> triggers are fired after the last truncation is
   performed and any sequences are reset.
   The triggers will fire in the order that the tables are
   to be processed (first those listed in the command, and then any
   that were added due to cascading).
  </para>
____________________________________________________________________________-->
  <para>
   <command>TRUNCATE</command>将不会引发表上可能存在的任何
   <literal>ON DELETE</literal>触发器。但是它将会引发
   <literal>ON TRUNCATE</literal>触发器。如果在这些表的任意一个
   上定义了<literal>ON TRUNCATE</literal>触发器，那么所有的
   <literal>BEFORE TRUNCATE</literal>触发器将在任何截断发生之前
   被引发，而所有<literal>AFTER TRUNCATE</literal>触发器将在最后
   一次截断完成并且所有序列被重置之后引发。触发器将以表被处理的顺
   序被引发（首先是那些被列在命令中的，然后是由于级联被加入的）。
  </para>

<!--==========================orignal english content==========================
   <para>
   <command>TRUNCATE</> is not MVCC-safe.  After truncation, the table will
   appear empty to concurrent transactions, if they are using a snapshot
   taken before the truncation occurred.
   See <xref linkend="mvcc-caveats"> for more details.
  </para>
____________________________________________________________________________-->
   <para>
    <command>TRUNCATE</command>不是 MVCC 安全的。截断之后，
    如果并发事务使用的是一个在截断发生前取得的快照，
    表将对这些并发事务呈现为空。详见<xref linkend="mvcc-caveats"/>。
   </para>

<!--==========================orignal english content==========================
  <para>
   <command>TRUNCATE</> is transaction-safe with respect to the data
   in the tables: the truncation will be safely rolled back if the surrounding
   transaction does not commit.
  </para>
____________________________________________________________________________-->
  <para>
   从表中数据的角度来说，<command>TRUNCATE</command>是事务安全的：
   如果所在的事务没有提交，阶段将会被安全地回滚。
  </para>

<!--==========================orignal english content==========================
  <para>
   When <literal>RESTART IDENTITY</> is specified, the implied
   <command>ALTER SEQUENCE RESTART</> operations are also done
   transactionally; that is, they will be rolled back if the surrounding
   transaction does not commit.  This is unlike the normal behavior of
   <command>ALTER SEQUENCE RESTART</>.  Be aware that if any additional
   sequence operations are done on the restarted sequences before the
   transaction rolls back, the effects of these operations on the sequences
   will be rolled back, but not their effects on <function>currval()</>;
   that is, after the transaction <function>currval()</> will continue to
   reflect the last sequence value obtained inside the failed transaction,
   even though the sequence itself may no longer be consistent with that.
   This is similar to the usual behavior of <function>currval()</> after
   a failed transaction.
  </para>
____________________________________________________________________________-->
  <para>
   在指定了<literal>RESTART IDENTITY</literal>时，隐含的
   <command>ALTER SEQUENCE RESTART</command>操作也会被事务性地完成。
   也就是说，如果所在事务没有提交，它们也将被回滚。这和
   <command>ALTER SEQUENCE RESTART</command>的通常行为不同。注意如果
   事务回滚前在被重启序列上还做了额外的序列操作，这些操作在序列上的效果
   也将被回滚，但是它们在<function>currval()</function>上的效果不会被回滚。也就
   是说，在事务之后，<function>currval()</function>将继续反映在失败事务内得到的
   最后一个序列值，即使序列本身可能已经不再与此一致。这和失败事务之后
   <function>currval()</function>的通常行为类似。
  </para>
  
<!--==========================orignal english content==========================
  <para>
   <command>TRUNCATE</> is not currently supported for foreign tables.
   This implies that if a specified table has any descendant tables that are
   foreign, the command will fail.
  </para>
____________________________________________________________________________-->
  <para>
   <command>TRUNCATE</command>当前不支持外部表。
   这表示如果一个指定的表具有任何外部的后代表，这个命令将会失败。
  </para>
 </refsect1>

 <refsect1>
<!--==========================orignal english content==========================
  <title>Examples</title>
____________________________________________________________________________-->
  <title>示例</title>

<!--==========================orignal english content==========================
  <para>
   Truncate the tables <literal>bigtable</literal> and
   <literal>fattable</literal>:

<programlisting>
TRUNCATE bigtable, fattable;
</programlisting>
  </para>
____________________________________________________________________________-->
  <para>
   截断表<literal>bigtable</literal>和
   <literal>fattable</literal>：

<programlisting>
TRUNCATE bigtable, fattable;
</programlisting>
  </para>

<!--==========================orignal english content==========================
  <para>
   The same, and also reset any associated sequence generators:

<programlisting>
TRUNCATE bigtable, fattable RESTART IDENTITY;
</programlisting>
  </para>
____________________________________________________________________________-->
  <para>
   做同样的事情，并且还重置任何相关联的序列发生器：

<programlisting>
TRUNCATE bigtable, fattable RESTART IDENTITY;
</programlisting>
  </para>

<!--==========================orignal english content==========================
  <para>
   Truncate the table <literal>othertable</literal>, and cascade to any tables
   that reference <literal>othertable</literal> via foreign-key
   constraints:

<programlisting>
TRUNCATE othertable CASCADE;
</programlisting></para>
____________________________________________________________________________-->
  <para>
   截断表<literal>othertable</literal>，并且级联地截断任何通过
   外键约束引用<literal>othertable</literal>的表：

<programlisting>
TRUNCATE othertable CASCADE;
</programlisting></para>
 </refsect1>

 <refsect1>
<!--==========================orignal english content==========================
  <title>Compatibility</title>
____________________________________________________________________________-->
  <title>兼容性</title>

<!--==========================orignal english content==========================
  <para>
   The SQL:2008 standard includes a <command>TRUNCATE</command> command
   with the syntax <literal>TRUNCATE TABLE
   <replaceable>tablename</replaceable></literal>.  The clauses
   <literal>CONTINUE IDENTITY</literal>/<literal>RESTART IDENTITY</literal>
   also appear in that standard, but have slightly different though related
   meanings.  Some of the concurrency behavior of this command is left
   implementation-defined by the standard, so the above notes should be
   considered and compared with other implementations if necessary.
  </para>
____________________________________________________________________________-->
  <para>
   SQL:2008 标准包括了一个<command>TRUNCATE</command>命令，
   语法是<literal>TRUNCATE TABLE
   <replaceable>tablename</replaceable></literal>。子句
   <literal>CONTINUE IDENTITY</literal>/<literal>RESTART IDENTITY</literal>
   也出现在了该标准中，但是含义有些不同。这个命令的一些并发行为被标准
   留给实现来定义，因此如果必要应该考虑上述注解并且与其他实现进行比较。
  </para>
 </refsect1>

 <refsect1>
<!--==========================orignal english content==========================
 <title>See Also</title>
____________________________________________________________________________-->
 <title>参见</title>

 <simplelist type="inline">
   <member><xref linkend="sql-delete"/></member>
  </simplelist>
 </refsect1>
 </refentry>
