<!--
doc/src/sgml/rel/alter_foreign_table.sgml
PostgreSQL documentation
-->

<refentry id="SQL-ALTERFOREIGNTABLE">
<!--==========================orignal english content==========================
 <indexterm zone="sql-alterforeigntable">
  <primary>ALTER FOREIGN TABLE</primary>
 </indexterm>
____________________________________________________________________________-->
 <indexterm zone="sql-alterforeigntable">
  <primary>ALTER FOREIGN TABLE</primary>
 </indexterm>

<!--==========================orignal english content==========================
 <refmeta>
  <refentrytitle>ALTER FOREIGN TABLE</refentrytitle>
  <manvolnum>7</manvolnum>
  <refmiscinfo>SQL - Language Statements</refmiscinfo>
 </refmeta>
____________________________________________________________________________-->
 <refmeta>
  <refentrytitle>ALTER FOREIGN TABLE</refentrytitle>
  <manvolnum>7</manvolnum>
  <refmiscinfo>SQL - Language Statements</refmiscinfo>
 </refmeta>

<!--==========================orignal english content==========================
 <refnamediv>
  <refname>ALTER FOREIGN TABLE</refname>
  <refpurpose>change the definition of a foreign table</refpurpose>
 </refnamediv>
____________________________________________________________________________-->
 <refnamediv>
  <refname>ALTER FOREIGN TABLE</refname>
  <refpurpose>更改一个外部表的定义</refpurpose>
 </refnamediv>

 <refsynopsisdiv>
<!--==========================orignal english content==========================
<synopsis>
ALTER FOREIGN TABLE [ IF EXISTS ] [ ONLY ] <replaceable class="parameter">name</replaceable> [ * ]
    <replaceable class="parameter">action</replaceable> [, ... ]
ALTER FOREIGN TABLE [ IF EXISTS ] [ ONLY ] <replaceable class="parameter">name</replaceable> [ * ]
    RENAME [ COLUMN ] <replaceable class="parameter">column_name</replaceable> TO <replaceable class="parameter">new_column_name</replaceable>
ALTER FOREIGN TABLE [ IF EXISTS ] <replaceable class="parameter">name</replaceable>
    RENAME TO <replaceable class="parameter">new_name</replaceable>
ALTER FOREIGN TABLE [ IF EXISTS ] <replaceable class="parameter">name</replaceable>
    SET SCHEMA <replaceable class="parameter">new_schema</replaceable>

<phrase>where <replaceable class="parameter">action</replaceable> is one of:</phrase>

    ADD [ COLUMN ] <replaceable class="parameter">column_name</replaceable> <replaceable class="parameter">data_type</replaceable> [ COLLATE <replaceable class="parameter">collation</replaceable> ] [ <replaceable class="parameter">column_constraint</replaceable> [ ... ] ]
    DROP [ COLUMN ] [ IF EXISTS ] <replaceable class="parameter">column_name</replaceable> [ RESTRICT | CASCADE ]
    ALTER [ COLUMN ] <replaceable class="parameter">column_name</replaceable> [ SET DATA ] TYPE <replaceable class="parameter">data_type</replaceable> [ COLLATE <replaceable class="parameter">collation</replaceable> ]
    ALTER [ COLUMN ] <replaceable class="parameter">column_name</replaceable> SET DEFAULT <replaceable class="parameter">expression</replaceable>
    ALTER [ COLUMN ] <replaceable class="parameter">column_name</replaceable> DROP DEFAULT
    ALTER [ COLUMN ] <replaceable class="parameter">column_name</replaceable> { SET | DROP } NOT NULL
    ALTER [ COLUMN ] <replaceable class="parameter">column_name</replaceable> SET STATISTICS <replaceable class="parameter">integer</replaceable>
    ALTER [ COLUMN ] <replaceable class="parameter">column_name</replaceable> SET ( <replaceable class="parameter">attribute_option</replaceable> = <replaceable class="parameter">value</replaceable> [, ... ] )
    ALTER [ COLUMN ] <replaceable class="parameter">column_name</replaceable> RESET ( <replaceable class="parameter">attribute_option</replaceable> [, ... ] )
    ALTER [ COLUMN ] <replaceable class="parameter">column_name</replaceable> SET STORAGE { PLAIN | EXTERNAL | EXTENDED | MAIN }
    ALTER [ COLUMN ] <replaceable class="parameter">column_name</replaceable> OPTIONS ( [ ADD | SET | DROP ] <replaceable class="parameter">option</replaceable> ['<replaceable class="parameter">value</replaceable>'] [, ... ])
    ADD <replaceable class="parameter">table_constraint</replaceable> [ NOT VALID ]
    VALIDATE CONSTRAINT <replaceable class="parameter">constraint_name</replaceable>
    DROP CONSTRAINT [ IF EXISTS ]  <replaceable class="parameter">constraint_name</replaceable> [ RESTRICT | CASCADE ]
    DISABLE TRIGGER [ <replaceable class="parameter">trigger_name</replaceable> | ALL | USER ]
    ENABLE TRIGGER [ <replaceable class="parameter">trigger_name</replaceable> | ALL | USER ]
    ENABLE REPLICA TRIGGER <replaceable class="parameter">trigger_name</replaceable>
    ENABLE ALWAYS TRIGGER <replaceable class="parameter">trigger_name</replaceable>
    SET WITH OIDS
    SET WITHOUT OIDS
    INHERIT <replaceable class="parameter">parent_table</replaceable>
    NO INHERIT <replaceable class="parameter">parent_table</replaceable>
    OWNER TO { <replaceable class="parameter">new_owner</replaceable> | CURRENT_USER | SESSION_USER }
    OPTIONS ( [ ADD | SET | DROP ] <replaceable class="parameter">option</replaceable> ['<replaceable class="parameter">value</replaceable>'] [, ... ])
</synopsis>
____________________________________________________________________________-->
<synopsis>
ALTER FOREIGN TABLE [ IF EXISTS ] [ ONLY ] <replaceable class="parameter">name</replaceable> [ * ]
    <replaceable class="parameter">action</replaceable> [, ... ]
ALTER FOREIGN TABLE [ IF EXISTS ] [ ONLY ] <replaceable class="parameter">name</replaceable> [ * ]
    RENAME [ COLUMN ] <replaceable class="parameter">column_name</replaceable> TO <replaceable class="parameter">new_column_name</replaceable>
ALTER FOREIGN TABLE [ IF EXISTS ] <replaceable class="parameter">name</replaceable>
    RENAME TO <replaceable class="parameter">new_name</replaceable>
ALTER FOREIGN TABLE [ IF EXISTS ] <replaceable class="parameter">name</replaceable>
    SET SCHEMA <replaceable class="parameter">new_schema</replaceable>

<phrase>其中 <replaceable class="parameter">action</replaceable> 是以下之一：</phrase>

    ADD [ COLUMN ] <replaceable class="parameter">column_name</replaceable> <replaceable class="parameter">data_type</replaceable> [ COLLATE <replaceable class="parameter">collation</replaceable> ] [ <replaceable class="parameter">column_constraint</replaceable> [ ... ] ]
    DROP [ COLUMN ] [ IF EXISTS ] <replaceable class="parameter">column_name</replaceable> [ RESTRICT | CASCADE ]
    ALTER [ COLUMN ] <replaceable class="parameter">column_name</replaceable> [ SET DATA ] TYPE <replaceable class="parameter">data_type</replaceable> [ COLLATE <replaceable class="parameter">collation</replaceable> ]
    ALTER [ COLUMN ] <replaceable class="parameter">column_name</replaceable> SET DEFAULT <replaceable class="parameter">expression</replaceable>
    ALTER [ COLUMN ] <replaceable class="parameter">column_name</replaceable> DROP DEFAULT
    ALTER [ COLUMN ] <replaceable class="parameter">column_name</replaceable> { SET | DROP } NOT NULL
    ALTER [ COLUMN ] <replaceable class="parameter">column_name</replaceable> SET STATISTICS <replaceable class="parameter">integer</replaceable>
    ALTER [ COLUMN ] <replaceable class="parameter">column_name</replaceable> SET ( <replaceable class="parameter">attribute_option</replaceable> = <replaceable class="parameter">value</replaceable> [, ... ] )
    ALTER [ COLUMN ] <replaceable class="parameter">column_name</replaceable> RESET ( <replaceable class="parameter">attribute_option</replaceable> [, ... ] )
    ALTER [ COLUMN ] <replaceable class="parameter">column_name</replaceable> SET STORAGE { PLAIN | EXTERNAL | EXTENDED | MAIN }
    ALTER [ COLUMN ] <replaceable class="parameter">column_name</replaceable> OPTIONS ( [ ADD | SET | DROP ] <replaceable class="parameter">option</replaceable> ['<replaceable class="parameter">value</replaceable>'] [, ... ])
    ADD <replaceable class="parameter">table_constraint</replaceable> [ NOT VALID ]
    VALIDATE CONSTRAINT <replaceable class="parameter">constraint_name</replaceable>
    DROP CONSTRAINT [ IF EXISTS ]  <replaceable class="parameter">constraint_name</replaceable> [ RESTRICT | CASCADE ]
    DISABLE TRIGGER [ <replaceable class="parameter">trigger_name</replaceable> | ALL | USER ]
    ENABLE TRIGGER [ <replaceable class="parameter">trigger_name</replaceable> | ALL | USER ]
    ENABLE REPLICA TRIGGER <replaceable class="parameter">trigger_name</replaceable>
    ENABLE ALWAYS TRIGGER <replaceable class="parameter">trigger_name</replaceable>
    SET WITH OIDS
    SET WITHOUT OIDS
    INHERIT <replaceable class="parameter">parent_table</replaceable>
    NO INHERIT <replaceable class="parameter">parent_table</replaceable>
    OWNER TO { <replaceable class="parameter">new_owner</replaceable> | CURRENT_USER | SESSION_USER }
    OPTIONS ( [ ADD | SET | DROP ] <replaceable class="parameter">option</replaceable> ['<replaceable class="parameter">value</replaceable>'] [, ... ])
</synopsis>
 </refsynopsisdiv>

 <refsect1>
<!--==========================orignal english content==========================
  <title>Description</title>
____________________________________________________________________________-->
  <title>描述</title>

<!--==========================orignal english content==========================
  <para>
   <command>ALTER FOREIGN TABLE</command> changes the definition of an
   existing foreign table.  There are several subforms:

  <variablelist>
   <varlistentry>
    <term><literal>ADD COLUMN</literal></term>
    <listitem>
     <para>
      This form adds a new column to the foreign table, using the same syntax as
      <xref linkend="SQL-CREATEFOREIGNTABLE">.
      Unlike the case when adding a column to a regular table, nothing happens
      to the underlying storage: this action simply declares that
      some new column is now accessible through the foreign table.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>DROP COLUMN [ IF EXISTS ]</literal></term>
    <listitem>
     <para>
      This form drops a column from a foreign table.
      You will need to say <literal>CASCADE</> if
      anything outside the table depends on the column; for example,
      views.
      If <literal>IF EXISTS</literal> is specified and the column
      does not exist, no error is thrown. In this case a notice
      is issued instead.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>SET DATA TYPE</literal></term>
    <listitem>
     <para>
      This form changes the type of a column of a foreign table.
      Again, this has no effect on any underlying storage: this action simply
      changes the type that <productname>PostgreSQL</> believes the column to
      have.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>SET</literal>/<literal>DROP DEFAULT</literal></term>
    <listitem>
     <para>
      These forms set or remove the default value for a column.
      Default values only apply in subsequent <command>INSERT</command>
      or <command>UPDATE</> commands; they do not cause rows already in the
      table to change.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>SET</literal>/<literal>DROP NOT NULL</literal></term>
    <listitem>
     <para>
      Mark a column as allowing, or not allowing, null values.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>SET STATISTICS</literal></term>
    <listitem>
     <para>
      This form
      sets the per-column statistics-gathering target for subsequent
      <xref linkend="sql-analyze"> operations.
      See the similar form of <xref linkend="sql-altertable">
      for more details.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>SET ( <replaceable class="parameter">attribute_option</replaceable> = <replaceable class="parameter">value</replaceable> [, ... ] )</literal></term>
    <term><literal>RESET ( <replaceable class="parameter">attribute_option</replaceable> [, ... ] )</literal></term>
    <listitem>
     <para>
      This form sets or resets per-attribute options.
      See the similar form of <xref linkend="sql-altertable">
      for more details.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term>
     <literal>SET STORAGE</literal>
    </term>
    <listitem>
     <para>
      This form sets the storage mode for a column.
      See the similar form of <xref linkend="sql-altertable">
      for more details.
      Note that the storage mode has no effect unless the table's
      foreign-data wrapper chooses to pay attention to it.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>ADD <replaceable class="parameter">table_constraint</replaceable> [ NOT VALID ]</literal></term>
    <listitem>
     <para>
      This form adds a new constraint to a foreign table, using the same
      syntax as <xref linkend="SQL-CREATEFOREIGNTABLE">.
      Currently only <literal>CHECK</> constraints are supported.
     </para>

     <para>
      Unlike the case when adding a constraint to a regular table, nothing is
      done to verify the constraint is correct; rather, this action simply
      declares that some new condition should be assumed to hold for all rows
      in the foreign table.  (See the discussion
      in <xref linkend="SQL-CREATEFOREIGNTABLE">.)
      If the constraint is marked <literal>NOT VALID</>, then it isn't
      assumed to hold, but is only recorded for possible future use.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>VALIDATE CONSTRAINT</literal></term>
    <listitem>
     <para>
      This form marks as valid a constraint that was previously marked
      as <literal>NOT VALID</literal>.  No action is taken to verify the
      constraint, but future queries will assume that it holds.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>DROP CONSTRAINT [ IF EXISTS ]</literal></term>
    <listitem>
     <para>
      This form drops the specified constraint on a foreign table.
      If <literal>IF EXISTS</literal> is specified and the constraint
      does not exist, no error is thrown.
      In this case a notice is issued instead.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>DISABLE</literal>/<literal>ENABLE [ REPLICA | ALWAYS ] TRIGGER</literal></term>
    <listitem>
     <para>
      These forms configure the firing of trigger(s) belonging to the foreign
      table.  See the similar form of <xref linkend="sql-altertable"> for more
      details.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>SET WITH OIDS</literal></term>
    <listitem>
     <para>
      This form adds an <literal>oid</literal> system column to the
      table (see <xref linkend="ddl-system-columns">).
      It does nothing if the table already has OIDs.
      Unless the table's foreign-data wrapper supports OIDs, this column
      will simply read as zeroes.
     </para>

     <para>
      Note that this is not equivalent to <literal>ADD COLUMN oid oid</>;
      that would add a normal column that happened to be named
      <literal>oid</>, not a system column.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>SET WITHOUT OIDS</literal></term>
    <listitem>
     <para>
      This form removes the <literal>oid</literal> system column from the
      table.  This is exactly equivalent to
      <literal>DROP COLUMN oid RESTRICT</literal>,
      except that it will not complain if there is already no
      <literal>oid</literal> column.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>INHERIT <replaceable class="parameter">parent_table</replaceable></literal></term>
    <listitem>
     <para>
      This form adds the target foreign table as a new child of the specified
      parent table.
      See the similar form of <xref linkend="sql-altertable">
      for more details.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>NO INHERIT <replaceable class="parameter">parent_table</replaceable></literal></term>
    <listitem>
     <para>
      This form removes the target foreign table from the list of children of
      the specified parent table.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>OWNER</literal></term>
    <listitem>
     <para>
      This form changes the owner of the foreign table to the
      specified user.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>OPTIONS ( [ ADD | SET | DROP ] <replaceable class="parameter">option</replaceable> ['<replaceable class="parameter">value</replaceable>'] [, ... ] )</literal></term>
    <listitem>
     <para>
      Change options for the foreign table or one of its columns.
      <literal>ADD</>, <literal>SET</>, and <literal>DROP</>
      specify the action to be performed.  <literal>ADD</> is assumed
      if no operation is explicitly specified.  Duplicate option names are not
      allowed (although it's OK for a table option and a column option to have
      the same name).  Option names and values are also validated using the
      foreign data wrapper library.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>RENAME</literal></term>
    <listitem>
     <para>
      The <literal>RENAME</literal> forms change the name of a foreign table
      or the name of an individual column in a foreign table.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>SET SCHEMA</literal></term>
    <listitem>
     <para>
      This form moves the foreign table into another schema.
     </para>
    </listitem>
   </varlistentry>

  </variablelist>
  </para>
____________________________________________________________________________-->
  <para>
   <command>ALTER FOREIGN TABLE</command>更改一个现有外部表的定义。
   有几种子形式：

  <variablelist>
   <varlistentry>
    <term><literal>ADD COLUMN</literal></term>
    <listitem>
     <para>
      这种形式使用与<xref linkend="SQL-CREATEFOREIGNTABLE"/>相同的语法把
      一个新的列增加到该外部表。和为常规表增加一列不同，这种形式并不影响底层
      的存储：这个动作只是简单地声明通过该外部表可以访问某个新的列而已。
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>DROP COLUMN [ IF EXISTS ]</literal></term>
    <listitem>
     <para>
      这种形式从一个外部表删掉一列。如果在该表外部有任何东西依赖于该列，
      你将需要写上<literal>CASCADE</literal>，典型的例子就是视图。如果指定了
      <literal>IF EXISTS</literal>并且该列不存在，将不会抛出错误。在这种
      情况下会转而发出一个提示。
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>SET DATA TYPE</literal></term>
    <listitem>
     <para>
      这种形式更改一个外部表的一列的类型。同样，这种形式并不影响底层
      的存储：这个动作只是简单地更改<productname>PostgreSQL</productname>
      相信该列所具有的类型。
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>SET</literal>/<literal>DROP DEFAULT</literal></term>
    <listitem>
     <para>
      这些形式设置或者移除一列的默认值。默认值只会应用于后续的
      <command>INSERT</command>或<command>UPDATE</command>命令，它们
      不会导致已经在表中的行被更改。
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>SET</literal>/<literal>DROP NOT NULL</literal></term>
    <listitem>
     <para>
      把一列标记为允许或者不允许空值。
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>SET STATISTICS</literal></term>
    <listitem>
     <para>
      这种形式为后续的<xref linkend="sql-analyze"/>操作设置针对每列
      的统计收集目标。详见<xref linkend="sql-altertable"/>的类似形式。
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>SET ( <replaceable class="parameter">attribute_option</replaceable> = <replaceable class="parameter">value</replaceable> [, ... ] )</literal></term>
    <term><literal>RESET ( <replaceable class="parameter">attribute_option</replaceable> [, ... ] )</literal></term>
    <listitem>
     <para>
      这种形式设置或重置针对每个属性的选项。详见<xref linkend="sql-altertable"/>
      的类似形式。
     </para>
    </listitem>
   </varlistentry>
   
   <varlistentry>
    <term>
     <literal>SET STORAGE</literal>
    </term>
    <listitem>
     <para>
      这种形式设置一个列的存储模式。详见
      <xref linkend="sql-altertable"/>中类似的模式。注意存储模式
      不会产生效果，除非该表的外部数据包装器选择处理它。
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>ADD <replaceable class="parameter">table_constraint</replaceable> [ NOT VALID ]</literal></term>
    <listitem>
     <para>
      这种形式为外部表增加一个新的约束，使用的语法和
      <xref linkend="SQL-CREATEFOREIGNTABLE"/>中相同。当前只
      支持<literal>CHECK</literal>约束。
     </para>

     <para>
      和向常规表增加约束的情况不同，为外部表增加约束时不会做任何事情来
      验证该约束是否正确。这个动作只是简单地声明了该外部表中所有的行都
      应该满足的某种新的条件（见
      <xref linkend="SQL-CREATEFOREIGNTABLE"/>中的讨论）。如果该
      约束被标记为<literal>NOT VALID</literal>，那么它不被假设为有效，而只是
      被记录下来以备未来使用。
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>VALIDATE CONSTRAINT</literal></term>
    <listitem>
     <para>
      这种形式把一个之前被标记为<literal>NOT VALID</literal>的约束标
      记为有效。不会做任何动作来验证该约束，但是未来的查询将会假定该
      约束是保持的。
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>DROP CONSTRAINT [ IF EXISTS ]</literal></term>
    <listitem>
     <para>
      这种形式删掉在一个外部表上的指定约束。如果指定了
      <literal>IF EXISTS</literal>但约束并不存在，则不会抛出错误。
      在这种情况下会发出一个提示。
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>DISABLE</literal>/<literal>ENABLE [ REPLICA | ALWAYS ] TRIGGER</literal></term>
    <listitem>
     <para>
      这些形式配置属于该外部表的触发器的触发情况。详见
      <xref linkend="sql-altertable"/>的类似形式。
     </para>
    </listitem>
   </varlistentry>
   
   <varlistentry>
    <term><literal>SET WITH OIDS</literal></term>
    <listitem>
     <para>
      这种形式为表增加一个<literal>oid</literal>系统列（见
      <xref linkend="ddl-system-columns"/>）。如果该表已经有 OID，则
      这种形式不会做任何事情。除非该表的外部数据包装器支持 OID，这个列
      将被简单地读作零。
     </para>

     <para>
      注意这和<literal>ADD COLUMN oid oid</literal>并不等效，后者将增加
      一个刚好名字为<literal>oid</literal>的普通列而不是一个系统列。
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>SET WITHOUT OIDS</literal></term>
    <listitem>
     <para>
      这种形式从表移除<literal>oid</literal>系统列。这正好
      等效于<literal>DROP COLUMN oid RESTRICT</literal>，
      不过如果表上已经没有<literal>oid</literal>时它不会做出
      提示或者报错。
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>INHERIT <replaceable class="parameter">parent_table</replaceable></literal></term>
    <listitem>
     <para>
      这种形式把目标外部表作为指定的父表的新后代。详见
      <xref linkend="sql-altertable"/>的类似的形式。
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>NO INHERIT <replaceable class="parameter">parent_table</replaceable></literal></term>
    <listitem>
     <para>
      这种形式把目标外部表从指定的父表的子女列表中移除。
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>OWNER</literal></term>
    <listitem>
     <para>
      这种形式把该外部表的拥有者改成指定的用户。
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>OPTIONS ( [ ADD | SET | DROP ] <replaceable class="parameter">option</replaceable> ['<replaceable class="parameter">value</replaceable>'] [, ... ] )</literal></term>
    <listitem>
     <para>
      更改该外部表或者其中一个列的选项。<literal>ADD</literal>、<literal>SET</literal>
      以及<literal>DROP</literal>指定要执行的动作。如果没有显式地指定操作，将假定
      为<literal>ADD</literal>。不允许重复的名称（不过一个表选项和一个列选项可以重
      名）。选项名称和值也会用外部数据包装器库来验证。
     </para>
    </listitem>
   </varlistentry>
   
   <varlistentry>
    <term><literal>RENAME</literal></term>
    <listitem>
     <para>
      <literal>RENAME</literal>形式更改外部表的名称或者外
      部表中一个列的名称。
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>SET SCHEMA</literal></term>
    <listitem>
     <para>
      这种形式把外部表移动到另一个模式中。
     </para>
    </listitem>
   </varlistentry>

  </variablelist>
  </para>

<!--==========================orignal english content==========================
  <para>
   All the actions except <literal>RENAME</literal> and <literal>SET SCHEMA</>
   can be combined into
   a list of multiple alterations to apply in parallel.  For example, it
   is possible to add several columns and/or alter the type of several
   columns in a single command.
  </para>
____________________________________________________________________________-->
  <para>
   所有除了<literal>RENAME</literal>和<literal>SET SCHEMA</literal>的
   动作都能被整合到一个多修改列表以便能被并行应用。例如，可以在一个
   命令中增加几个列并且/或者修改几个列的类型。
  </para>
  
<!--==========================orignal english content==========================
  <para>
   If the command is written as <literal>ALTER FOREIGN TABLE IF EXISTS ...</>
   and the foreign table does not exist, no error is thrown. A notice is
   issued in this case.
  </para>
____________________________________________________________________________-->
  <para>
   如果该命令被写作<literal>ALTER FOREIGN TABLE IF EXISTS ...</literal>并且
   该外部表不存在，则不会抛出错误。这种情况下会发出一个提示。
  </para>

<!--==========================orignal english content==========================
  <para>
   You must own the table to use <command>ALTER FOREIGN TABLE</>.
   To change the schema of a foreign table, you must also have
   <literal>CREATE</literal> privilege on the new schema.
   To alter the owner, you must also be a direct or indirect member of the new
   owning role, and that role must have <literal>CREATE</literal> privilege on
   the table's schema.  (These restrictions enforce that altering the owner
   doesn't do anything you couldn't do by dropping and recreating the table.
   However, a superuser can alter ownership of any table anyway.)
   To add a column or alter a column type, you must also
   have <literal>USAGE</literal> privilege on the data type.
  </para>
____________________________________________________________________________-->
  <para>
   你必须拥有该表以使用<command>ALTER FOREIGN TABLE</command>。要更改一个
   外部表的模式，你必须还拥有新模式上的<literal>CREATE</literal>特权。要
   更改拥有者，你还必须是新拥有角色的一个直接或者间接成员，并且该角色必须
   具有在该表的模式上的<literal>CREATE</literal>特权（这些限制强制修改拥有
   者不能做一些通过删除和重建该表做不到的事情。不过，一个超级用户怎么都能
   更改任何表的所有权）。要增加一列或者修改一个列的类型，你还必须具有该数
   据类型上的<literal>USAGE</literal>特权。
  </para>
 </refsect1>

 <refsect1>
<!--==========================orignal english content==========================
  <title>Parameters</title>
____________________________________________________________________________-->
  <title>参数</title>

    <variablelist>

     <varlistentry>
<!--==========================orignal english content==========================
      <term><replaceable class="parameter">name</replaceable></term>
____________________________________________________________________________-->
      <term><replaceable class="parameter">name</replaceable></term>
      <listitem>
<!--==========================orignal english content==========================
       <para>
        The name (possibly schema-qualified) of an existing foreign table to
        alter. If <literal>ONLY</> is specified before the table name, only
        that table is altered. If <literal>ONLY</> is not specified, the table
        and all its descendant tables (if any) are altered.  Optionally,
        <literal>*</> can be specified after the table name to explicitly
        indicate that descendant tables are included.
       </para>
____________________________________________________________________________-->
       <para>
        一个要修改的现有外部表的名称（可以被模式限定）。如果在表名前指定了
        <literal>ONLY</literal>，则只有该表被修改。如果没有指定<literal>ONLY</literal>，
        该表和它所有的后代表（如果有）都会被修改。可选地，在表名后面指定
        <literal>*</literal>可以显式地表示将后代表包括在内。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
<!--==========================orignal english content==========================
      <term><replaceable class="parameter">column_name</replaceable></term>
____________________________________________________________________________-->
      <term><replaceable class="parameter">column_name</replaceable></term>
      <listitem>
<!--==========================orignal english content==========================
       <para>
        Name of a new or existing column.
       </para>
____________________________________________________________________________-->
       <para>
        一个新的或者现有列的名称。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
<!--==========================orignal english content==========================
      <term><replaceable class="parameter">new_column_name</replaceable></term>
____________________________________________________________________________-->
      <term><replaceable class="parameter">new_column_name</replaceable></term>
      <listitem>
<!--==========================orignal english content==========================
       <para>
        New name for an existing column.
       </para>
____________________________________________________________________________-->
       <para>
        一个现有列的新名称。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
<!--==========================orignal english content==========================
      <term><replaceable class="parameter">new_name</replaceable></term>
____________________________________________________________________________-->
      <term><replaceable class="parameter">new_name</replaceable></term>
      <listitem>
<!--==========================orignal english content==========================
       <para>
        New name for the table.
       </para>
____________________________________________________________________________-->
       <para>
        该表的新名称。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
<!--==========================orignal english content==========================
      <term><replaceable class="parameter">data_type</replaceable></term>
____________________________________________________________________________-->
      <term><replaceable class="parameter">data_type</replaceable></term>
      <listitem>
<!--==========================orignal english content==========================
       <para>
        Data type of the new column, or new data type for an existing
        column.
       </para>
____________________________________________________________________________-->
       <para>
        新列的数据类型或者一个现有列的新数据类型。
       </para>
      </listitem>
     </varlistentry>
     
     <varlistentry>
<!--==========================orignal english content==========================
      <term><replaceable class="parameter">table_constraint</replaceable></term>
____________________________________________________________________________-->
      <term><replaceable class="parameter">table_constraint</replaceable></term>
      <listitem>
<!--==========================orignal english content==========================
       <para>
        New table constraint for the foreign table.
       </para>
____________________________________________________________________________-->
       <para>
        New table constraint for the foreign table.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
<!--==========================orignal english content==========================
      <term><replaceable class="parameter">constraint_name</replaceable></term>
____________________________________________________________________________-->
      <term><replaceable class="parameter">constraint_name</replaceable></term>
      <listitem>
<!--==========================orignal english content==========================
       <para>
        Name of an existing constraint to drop.
       </para>
____________________________________________________________________________-->
       <para>
        Name of an existing constraint to drop.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
<!--==========================orignal english content==========================
      <term><literal>CASCADE</literal></term>
____________________________________________________________________________-->
      <term><literal>CASCADE</literal></term>
      <listitem>
<!--==========================orignal english content==========================
       <para>
        Automatically drop objects that depend on the dropped column
        or constraint (for example, views referencing the column),
        and in turn all objects that depend on those objects
        (see <xref linkend="ddl-depend">).
       </para>
____________________________________________________________________________-->
       <para>
        自动删除依赖于被删除列或约束的对象（例如，引用该列的视图），
        并且接着删除依赖于那些对象的
        所有对象（见<xref linkend="ddl-depend"/>）。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
<!--==========================orignal english content==========================
      <term><literal>RESTRICT</literal></term>
____________________________________________________________________________-->
      <term><literal>RESTRICT</literal></term>
      <listitem>
<!--==========================orignal english content==========================
       <para>
        Refuse to drop the column or constraint if there are any dependent
        objects. This is the default behavior.
       </para>
____________________________________________________________________________-->
       <para>
        如果有任何依赖对象就拒绝删除该列或约束。这是默认行为。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
<!--==========================orignal english content==========================
      <term><replaceable class="parameter">trigger_name</replaceable></term>
____________________________________________________________________________-->
      <term><replaceable class="parameter">trigger_name</replaceable></term>
      <listitem>
<!--==========================orignal english content==========================
       <para>
        Name of a single trigger to disable or enable.
       </para>
____________________________________________________________________________-->
       <para>
        要禁用或启用的一个触发器的名称。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
<!--==========================orignal english content==========================
      <term><literal>ALL</literal></term>
____________________________________________________________________________-->
      <term><literal>ALL</literal></term>
      <listitem>
<!--==========================orignal english content==========================
       <para>
        Disable or enable all triggers belonging to the foreign table.  (This
        requires superuser privilege if any of the triggers are internally
        generated triggers.  The core system does not add such triggers to
        foreign tables, but add-on code could do so.)
       </para>
____________________________________________________________________________-->
       <para>
        禁用或者启用所有属于该外部表的触发器（如果任何触发器是内部生成
        的触发器，这都要求超级用户特权。核心系统不会向外部表增加这类触发
        器，但是附加代码会这样做。）。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
<!--==========================orignal english content==========================
      <term><literal>USER</literal></term>
____________________________________________________________________________-->
      <term><literal>USER</literal></term>
      <listitem>
<!--==========================orignal english content==========================
       <para>
        Disable or enable all triggers belonging to the foreign table except
        for internally generated triggers.
       </para>
____________________________________________________________________________-->
       <para>
        禁用或者启用属于该外部表的除了内部生成的触发器之外的所有触发器。
       </para>
      </listitem>
     </varlistentry>
     
     <varlistentry>
<!--==========================orignal english content==========================
      <term><replaceable class="parameter">parent_table</replaceable></term>
____________________________________________________________________________-->
      <term><replaceable class="parameter">parent_table</replaceable></term>
      <listitem>
<!--==========================orignal english content==========================
       <para>
        A parent table to associate or de-associate with this foreign table.
       </para>
____________________________________________________________________________-->
       <para>
        要与这个外部表关联或者解除关联的父表。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
<!--==========================orignal english content==========================
      <term><replaceable class="parameter">new_owner</replaceable></term>
____________________________________________________________________________-->
      <term><replaceable class="parameter">new_owner</replaceable></term>
      <listitem>
<!--==========================orignal english content==========================
       <para>
        The user name of the new owner of the table.
       </para>
____________________________________________________________________________-->
       <para>
        该表的新拥有者的用户名。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
<!--==========================orignal english content==========================
      <term><replaceable class="parameter">new_schema</replaceable></term>
____________________________________________________________________________-->
      <term><replaceable class="parameter">new_schema</replaceable></term>
      <listitem>
<!--==========================orignal english content==========================
       <para>
        The name of the schema to which the table will be moved.
       </para>
____________________________________________________________________________-->
       <para>
        该表要被移动到其中的模式的名称。
       </para>
      </listitem>
     </varlistentry>
    </variablelist>
 </refsect1>

 <refsect1>
<!--==========================orignal english content==========================
  <title>Notes</title>
____________________________________________________________________________-->
  <title>注解</title>

<!--==========================orignal english content==========================
   <para>
    The key word <literal>COLUMN</literal> is noise and can be omitted.
   </para>
____________________________________________________________________________-->
   <para>
    关键词<literal>COLUMN</literal>是噪声词并且可以被忽略。
   </para>

<!--==========================orignal english content==========================
   <para>
    Consistency with the foreign server is not checked when a column is added
    or removed with <literal>ADD COLUMN</literal> or
    <literal>DROP COLUMN</literal>, a <literal>NOT NULL</>
    or <literal>CHECK</> constraint is added, or a column type is changed
    with <literal>SET DATA TYPE</>.  It is the user's responsibility to ensure
    that the table definition matches the remote side.
   </para>
____________________________________________________________________________-->
   <para>
    当使用<literal>ADD COLUMN</literal>或
    <literal>DROP COLUMN</literal>增加或移除一列、增加一个<literal>NOT NULL</literal>
    或者<literal>CHECK</literal>
    约束或者用<literal>SET DATA TYPE</literal>更改一个列类型时，不会检查与外部服务器的一
    致性。确保该表定义匹配远端是用户的责任。
   </para>

<!--==========================orignal english content==========================
   <para>
    Refer to <xref linkend="sql-createforeigntable"> for a further description of valid
    parameters.
   </para>
____________________________________________________________________________-->
   <para>
    关于有效参数的进一步描述可参考<xref linkend="sql-createforeigntable"/>。
   </para>
 </refsect1>

 <refsect1>
<!--==========================orignal english content==========================
  <title>Examples</title>
____________________________________________________________________________-->
  <title>示例</title>

<!--==========================orignal english content==========================
  <para>
   To mark a column as not-null:
<programlisting>
ALTER FOREIGN TABLE distributors ALTER COLUMN street SET NOT NULL;
</programlisting>
  </para>
____________________________________________________________________________-->
  <para>
   要把一列标记为非空：
<programlisting>
ALTER FOREIGN TABLE distributors ALTER COLUMN street SET NOT NULL;
</programlisting>
  </para>

<!--==========================orignal english content==========================
  <para>
   To change options of a foreign table:
<programlisting>
ALTER FOREIGN TABLE myschema.distributors OPTIONS (ADD opt1 'value', SET opt2 'value2', DROP opt3 'value3');
</programlisting></para>
____________________________________________________________________________-->
  <para>
   要更改一个外部表的选项：
<programlisting>
ALTER FOREIGN TABLE myschema.distributors OPTIONS (ADD opt1 'value', SET opt2 'value2', DROP opt3 'value3');
</programlisting></para>

 </refsect1>

 <refsect1>
<!--==========================orignal english content==========================
  <title>Compatibility</title>
____________________________________________________________________________-->
  <title>兼容性</title>

<!--==========================orignal english content==========================
  <para>
   The forms <literal>ADD</literal>, <literal>DROP</>,
   and <literal>SET DATA TYPE</literal>
   conform with the SQL standard.  The other forms are
   <productname>PostgreSQL</productname> extensions of the SQL standard.
   Also, the ability to specify more than one manipulation in a single
   <command>ALTER FOREIGN TABLE</> command is an extension.
  </para>
____________________________________________________________________________-->
  <para>
   形式<literal>ADD</literal>、<literal>DROP</literal>以及
   <literal>SET DATA TYPE</literal>符合 SQL 标准。其他形式是 SQL 标准的
   <productname>PostgreSQL</productname>扩展。在一个
   <command>ALTER FOREIGN TABLE</command>命令中指定多于一个操作也是一种扩展。
  </para>

<!--==========================orignal english content==========================
  <para>
   <command>ALTER FOREIGN TABLE DROP COLUMN</> can be used to drop the only
   column of a foreign table, leaving a zero-column table.  This is an
   extension of SQL, which disallows zero-column foreign tables.
  </para>
____________________________________________________________________________-->
  <para>
   <command>ALTER FOREIGN TABLE DROP COLUMN</command>可以被用来删除
   一个外部表的唯一一列，从而留下一个没有列的表。这是一种 SQL 的扩展，它
   允许没有列的外部表。
  </para>
 </refsect1>
 
 <refsect1>
<!--==========================orignal english content==========================
  <title>See Also</title>
____________________________________________________________________________-->
  <title>另见</title>

  <simplelist type="inline">
   <member><xref linkend="sql-createforeigntable"/></member>
   <member><xref linkend="sql-dropforeigntable"/></member>
  </simplelist>
 </refsect1>
</refentry>
