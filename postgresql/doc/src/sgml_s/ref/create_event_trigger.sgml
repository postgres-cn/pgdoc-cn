<!--
doc/src/sgml/ref/create_event_trigger.sgml
PostgreSQL documentation
-->

<refentry id="sql-createeventtrigger">
<!--==========================orignal english content==========================
 <indexterm zone="sql-createeventtrigger">
  <primary>CREATE EVENT TRIGGER</primary>
 </indexterm>
____________________________________________________________________________-->
 <indexterm zone="sql-createeventtrigger">
  <primary>CREATE EVENT TRIGGER</primary>
 </indexterm>

<!--==========================orignal english content==========================
 <refmeta>
  <refentrytitle>CREATE EVENT TRIGGER</refentrytitle>
  <manvolnum>7</manvolnum>
  <refmiscinfo>SQL - Language Statements</refmiscinfo>
 </refmeta>
____________________________________________________________________________-->
 <refmeta>
  <refentrytitle>CREATE EVENT TRIGGER</refentrytitle>
  <manvolnum>7</manvolnum>
  <refmiscinfo>SQL - Language Statements</refmiscinfo>
 </refmeta>

<!--==========================orignal english content==========================
 <refnamediv>
  <refname>CREATE EVENT TRIGGER</refname>
  <refpurpose>define a new event trigger</refpurpose>
 </refnamediv>
____________________________________________________________________________-->
 <refnamediv>
  <refname>CREATE EVENT TRIGGER</refname>
  <refpurpose>定义一个新的事件触发器</refpurpose>
 </refnamediv>

 <refsynopsisdiv>
<!--==========================orignal english content==========================
<synopsis>
CREATE EVENT TRIGGER <replaceable class="parameter">name</replaceable>
    ON <replaceable class="parameter">event</replaceable>
    [ WHEN <replaceable class="parameter">filter_variable</replaceable> IN (filter_value [, ... ]) [ AND ... ] ]
    EXECUTE { FUNCTION | PROCEDURE } <replaceable class="parameter">function_name</replaceable>()
</synopsis>
____________________________________________________________________________-->
<synopsis>
CREATE EVENT TRIGGER <replaceable class="parameter">name</replaceable>
    ON <replaceable class="parameter">event</replaceable>
    [ WHEN <replaceable class="parameter">filter_variable</replaceable> IN (filter_value [, ... ]) [ AND ... ] ]
    EXECUTE { FUNCTION | PROCEDURE } <replaceable class="parameter">function_name</replaceable>()
</synopsis>
 </refsynopsisdiv>

 <refsect1>
<!--==========================orignal english content==========================
  <title>Description</title>
____________________________________________________________________________-->
  <title>描述</title>

<!--==========================orignal english content==========================
  <para>
   <command>CREATE EVENT TRIGGER</command> creates a new event trigger.
   Whenever the designated event occurs and the <literal>WHEN</literal> condition
   associated with the trigger, if any, is satisfied, the trigger function
   will be executed.  For a general introduction to event triggers, see
   <xref linkend="event-triggers"/>.  The user who creates an event trigger
   becomes its owner.
  </para>
____________________________________________________________________________-->
  <para>
   <command>CREATE EVENT TRIGGER</command>创建一个新的事件触发器。
   只要指定的事件发生并且与该触发器相关的<literal>WHEN</literal>条件（如果有）被
   满足，该触发器的函数将被执行。关于事件触发器的一般性介绍可见
   <xref linkend="event-triggers"/>。创建事件触发器的用户会成为它的拥有者。
  </para>
 </refsect1>

 <refsect1>
<!--==========================orignal english content==========================
  <title>Parameters</title>
____________________________________________________________________________-->
  <title>参数</title>

  <variablelist>
   <varlistentry>
<!--==========================orignal english content==========================
    <term><replaceable class="parameter">name</replaceable></term>
____________________________________________________________________________-->
    <term><replaceable class="parameter">name</replaceable></term>
    <listitem>
<!--==========================orignal english content==========================
     <para>
      The name to give the new trigger.  This name must be unique within
      the database.
     </para>
____________________________________________________________________________-->
     <para>
      给新触发器的名称。在该数据库中这个名称必须唯一。
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
<!--==========================orignal english content==========================
    <term><replaceable class="parameter">event</replaceable></term>
____________________________________________________________________________-->
    <term><replaceable class="parameter">event</replaceable></term>
    <listitem>
<!--==========================orignal english content==========================
     <para>
      The name of the event that triggers a call to the given function.
      See <xref linkend="event-trigger-definition"/> for more information
      on event names.
     </para>
____________________________________________________________________________-->
     <para>
      会触发对给定函数调用的事件名称。更多事件名称的信息请见
      <xref linkend="event-trigger-definition"/>。
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
<!--==========================orignal english content==========================
    <term><replaceable class="parameter">filter_variable</replaceable></term>
____________________________________________________________________________-->
    <term><replaceable class="parameter">filter_variable</replaceable></term>
    <listitem>
<!--==========================orignal english content==========================
     <para>
      The name of a variable used to filter events.  This makes it possible
      to restrict the firing of the trigger to a subset of the cases in which
      it is supported.  Currently the only supported
      <replaceable class="parameter">filter_variable</replaceable>
      is <literal>TAG</literal>.
     </para>
____________________________________________________________________________-->
     <para>
      用来过滤事件的变量名称。这可以用来限制触发器只为它支持的那一部分
      情况引发。当前唯一支持的
      <replaceable class="parameter">filter_variable</replaceable>
      是<literal>TAG</literal>。
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
<!--==========================orignal english content==========================
    <term><replaceable class="parameter">filter_value</replaceable></term>
____________________________________________________________________________-->
    <term><replaceable class="parameter">filter_value</replaceable></term>
    <listitem>
<!--==========================orignal english content==========================
     <para>
      A list of values for the
      associated <replaceable class="parameter">filter_variable</replaceable>
      for which the trigger should fire.  For <literal>TAG</literal>, this means a
      list of command tags (e.g. <literal>'DROP FUNCTION'</literal>).
     </para>
____________________________________________________________________________-->
     <para>
      与该触发器要为其引发的
      <replaceable class="parameter">filter_variable</replaceable>相关联
      的一个值列表。对于<literal>TAG</literal>，这表示一个命令标签列表（例如
      <literal>'DROP FUNCTION'</literal>）。
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
<!--==========================orignal english content==========================
    <term><replaceable class="parameter">function_name</replaceable></term>
____________________________________________________________________________-->
    <term><replaceable class="parameter">function_name</replaceable></term>
    <listitem>
<!--==========================orignal english content==========================
     <para>
      A user-supplied function that is declared as taking no argument and
      returning type <literal>event_trigger</literal>.
     </para>
____________________________________________________________________________-->
     <para>
      一个用户提供的函数，它被声明为没有参数并且返回类型
      <literal>event_trigger</literal>。
     </para>

<!--==========================orignal english content==========================
     <para>
      In the syntax of <literal>CREATE EVENT TRIGGER</literal>, the keywords
      <literal>FUNCTION</literal> and <literal>PROCEDURE</literal> are
      equivalent, but the referenced function must in any case be a function,
      not a procedure.  The use of the keyword <literal>PROCEDURE</literal>
      here is historical and deprecated.
     </para>
____________________________________________________________________________-->
     <para>
      ===In the syntax of <literal>CREATE EVENT TRIGGER</literal>, the keywords
      <literal>FUNCTION</literal> and <literal>PROCEDURE</literal> are
      equivalent, but the referenced function must in any case be a function,
      not a procedure.  The use of the keyword <literal>PROCEDURE</literal>
      here is historical and deprecated.
     </para>
    </listitem>
   </varlistentry>

  </variablelist>
 </refsect1>

 <refsect1 id="sql-createeventtrigger-notes">
<!--==========================orignal english content==========================
  <title>Notes</title>
____________________________________________________________________________-->
  <title>注解</title>

<!--==========================orignal english content==========================
  <para>
   Only superusers can create event triggers.
  </para>
____________________________________________________________________________-->
  <para>
   只有超级用户能创建事件触发器。
  </para>

<!--==========================orignal english content==========================
  <para>
   Event triggers are disabled in single-user mode (see <xref
   linkend="app-postgres"/>).  If an erroneous event trigger disables the
   database so much that you can't even drop the trigger, restart in
   single-user mode and you'll be able to do that.
  </para>
____________________________________________________________________________-->
  <para>
   在单用户模式（见<xref linkend="app-postgres"/>）中事件触发器被禁用。
   如果一个错误的事件触发器禁用了数据库让你甚至无法删除它，可以重启到
   单用户模式，这样你就能删除它。
  </para>
 </refsect1>

 <refsect1 id="sql-createeventtrigger-examples">
<!--==========================orignal english content==========================
  <title>Examples</title>
____________________________________________________________________________-->
  <title>示例</title>

<!--==========================orignal english content==========================
  <para>
   Forbid the execution of any <link linkend="ddl">DDL</link> command:

<programlisting>
CREATE OR REPLACE FUNCTION abort_any_command()
  RETURNS event_trigger
 LANGUAGE plpgsql
  AS $$
BEGIN
  RAISE EXCEPTION 'command % is disabled', tg_tag;
END;
$$;

CREATE EVENT TRIGGER abort_ddl ON ddl_command_start
   EXECUTE FUNCTION abort_any_command();
</programlisting></para>
____________________________________________________________________________-->
  <para>
   禁止执行任何<link linkend="ddl">DDL</link>命令：

<programlisting>
CREATE OR REPLACE FUNCTION abort_any_command()
  RETURNS event_trigger
 LANGUAGE plpgsql
  AS $$
BEGIN
  RAISE EXCEPTION 'command % is disabled', tg_tag;
END;
$$;

CREATE EVENT TRIGGER abort_ddl ON ddl_command_start
   EXECUTE FUNCTION abort_any_command();
</programlisting></para>
 </refsect1>

 <refsect1 id="sql-createeventtrigger-compatibility">
<!--==========================orignal english content==========================
  <title>Compatibility</title>
____________________________________________________________________________-->
  <title>兼容性</title>

<!--==========================orignal english content==========================
  <para>
   There is no <command>CREATE EVENT TRIGGER</command> statement in the
   SQL standard.
  </para>
____________________________________________________________________________-->
  <para>
   在 SQL 标准中没有
   <command>CREATE EVENT TRIGGER</command>语句。
  </para>

 </refsect1>

 <refsect1>
<!--==========================orignal english content==========================
  <title>See Also</title>
____________________________________________________________________________-->
  <title>另见</title>

  <simplelist type="inline">
   <member><xref linkend="sql-altereventtrigger"/></member>
   <member><xref linkend="sql-dropeventtrigger"/></member>
   <member><xref linkend="sql-createfunction"/></member>
  </simplelist>
 </refsect1>
</refentry>
