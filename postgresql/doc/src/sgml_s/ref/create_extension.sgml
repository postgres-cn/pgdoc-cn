<!--
doc/src/sgml/ref/create_extension.sgml
PostgreSQL documentation
-->

<refentry id="SQL-CREATEEXTENSION">
<!--==========================orignal english content==========================
 <indexterm zone="sql-createextension">
  <primary>CREATE EXTENSION</primary>
 </indexterm>
____________________________________________________________________________-->
 <indexterm zone="sql-createextension">
  <primary>CREATE EXTENSION</primary>
 </indexterm>

<!--==========================orignal english content==========================
 <refmeta>
  <refentrytitle>CREATE EXTENSION</refentrytitle>
  <manvolnum>7</manvolnum>
  <refmiscinfo>SQL - Language Statements</refmiscinfo>
 </refmeta>
____________________________________________________________________________-->
 <refmeta>
  <refentrytitle>CREATE EXTENSION</refentrytitle>
  <manvolnum>7</manvolnum>
  <refmiscinfo>SQL - Language Statements</refmiscinfo>
 </refmeta>

<!--==========================orignal english content==========================
 <refnamediv>
  <refname>CREATE EXTENSION</refname>
  <refpurpose>install an extension</refpurpose>
 </refnamediv>
____________________________________________________________________________-->
 <refnamediv>
  <refname>CREATE EXTENSION</refname>
  <refpurpose>安装一个扩展</refpurpose>
 </refnamediv>

 <refsynopsisdiv>
<!--==========================orignal english content==========================
<synopsis>
CREATE EXTENSION [ IF NOT EXISTS ] <replaceable class="parameter">extension_name</replaceable>
    [ WITH ] [ SCHEMA <replaceable class="parameter">schema_name</replaceable> ]
             [ VERSION <replaceable class="parameter">version</replaceable> ]
             [ FROM <replaceable class="parameter">old_version</replaceable> ]
             [ CASCADE ]
</synopsis>
____________________________________________________________________________-->
<synopsis>
CREATE EXTENSION [ IF NOT EXISTS ] <replaceable class="parameter">extension_name</replaceable>
    [ WITH ] [ SCHEMA <replaceable class="parameter">schema_name</replaceable> ]
             [ VERSION <replaceable class="parameter">version</replaceable> ]
             [ FROM <replaceable class="parameter">old_version</replaceable> ]
             [ CASCADE ]
</synopsis>
 </refsynopsisdiv>

 <refsect1>
<!--==========================orignal english content==========================
  <title>Description</title>
____________________________________________________________________________-->
  <title>描述</title>

<!--==========================orignal english content==========================
  <para>
   <command>CREATE EXTENSION</command> loads a new extension into the current
   database.  There must not be an extension of the same name already loaded.
  </para>
____________________________________________________________________________-->
  <para>
   <command>CREATE EXTENSION</command>把一个新的扩展载入到
   当前数据库中。不能有同名扩展已经被载入。
  </para>

<!--==========================orignal english content==========================
  <para>
   Loading an extension essentially amounts to running the extension's script
   file.  The script will typically create new <acronym>SQL</> objects such as
   functions, data types, operators and index support methods.
   <command>CREATE EXTENSION</command> additionally records the identities
   of all the created objects, so that they can be dropped again if
   <command>DROP EXTENSION</command> is issued.
  </para>
____________________________________________________________________________-->
  <para>
   载入一个扩展本质上是运行该扩展的脚本文件。该脚本通常将创建新的
   <acronym>SQL</acronym>对象，例如函数、数据类型、操作符以及索引支持
   方法。<command>CREATE EXTENSION</command>会额外地记录
   所有被创建对象的标识，这样发出
   <command>DROP EXTENSION</command>时可以删除它们。
  </para>

<!--==========================orignal english content==========================
  <para>
   Loading an extension requires the same privileges that would be
   required to create its component objects.  For most extensions this
   means superuser or database owner privileges are needed.
   The user who runs <command>CREATE EXTENSION</command> becomes the
   owner of the extension for purposes of later privilege checks, as well
   as the owner of any objects created by the extension's script.
  </para>
____________________________________________________________________________-->
  <para>
   载入一个扩展要求创建其组件对象所要求的特权。对于大部分扩展这意味
   这需要超级用户或者数据库拥有者的特权。为了以后特权检察的目的，运行
   <command>CREATE EXTENSION</command>的用户会成为该扩展的
   拥有者以及由该扩展的脚本创建的任何对象的拥有者。
  </para>

 </refsect1>

 <refsect1>
<!--==========================orignal english content==========================
  <title>Parameters</title>
____________________________________________________________________________-->
  <title>参数</title>

    <variablelist>
     <varlistentry>
<!--==========================orignal english content==========================
      <term><literal>IF NOT EXISTS</></term>
____________________________________________________________________________-->
      <term><literal>IF NOT EXISTS</literal></term>
      <listitem>
<!--==========================orignal english content==========================
       <para>
        Do not throw an error if an extension with the same name already
        exists.  A notice is issued in this case.  Note that there is no
        guarantee that the existing extension is anything like the one that
        would have been created from the currently-available script file.
       </para>
____________________________________________________________________________-->
       <para>
        已有同名扩展存在时不要抛出错误。这种情况下会发出一个提示。
        注意，不保证现有的扩展与将要从当前可用的脚本文件创建的脚本
        有任何相似。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
<!--==========================orignal english content==========================
      <term><replaceable class="parameter">extension_name</replaceable></term>
____________________________________________________________________________-->
      <term><replaceable class="parameter">extension_name</replaceable></term>
      <listitem>
<!--==========================orignal english content==========================
       <para>
        The name of the extension to be
        installed. <productname>PostgreSQL</productname> will create the
        extension using details from the file
        <literal>SHAREDIR/extension/</literal><replaceable class="parameter">extension_name</replaceable><literal>.control</literal>.
       </para>
____________________________________________________________________________-->
       <para>
        要安装的扩展的名称。<productname>PostgreSQL</productname>
        将使用文件
        <literal>SHAREDIR/extension/</literal><replaceable class="parameter">extension_name</replaceable><literal>.control</literal>
        中的指令来创建该扩展。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
<!--==========================orignal english content==========================
      <term><replaceable class="parameter">schema_name</replaceable></term>
____________________________________________________________________________-->
      <term><replaceable class="parameter">schema_name</replaceable></term>
      <listitem>
<!--==========================orignal english content==========================
       <para>
        The name of the schema in which to install the extension's
        objects, given that the extension allows its contents to be
        relocated.  The named schema must already exist.
        If not specified, and the extension's control file does not specify a
        schema either, the current default object creation schema is used.
       </para>
____________________________________________________________________________-->
       <para>
        假定该扩展允许其内容被重定位，这是要在其中安装该扩展的对象的
        模式名称。被提到的模式必须已经存在。如果没有指定并且该扩展的
        控制文件也没有指定一个模式，将使用当前的默认对象创建模式。
       </para>
       
<!--==========================orignal english content==========================
       <para>
        If the extension specifies a <literal>schema</> parameter in its
        control file, then that schema cannot be overridden with
        a <literal>SCHEMA</> clause.  Normally, an error will be raised if
        a <literal>SCHEMA</> clause is given and it conflicts with the
        extension's <literal>schema</> parameter.  However, if
        the <literal>CASCADE</> clause is also given,
        then <replaceable class="parameter">schema_name</replaceable> is
        ignored when it conflicts.  The
        given <replaceable class="parameter">schema_name</replaceable> will be
        used for installation of any needed extensions that do not
        specify <literal>schema</> in their control files.
       </para>
____________________________________________________________________________-->
       <para>
        如果该扩展在其控制文件中指定了一个<literal>schema</literal>参数，
        那么不能用<literal>SCHEMA</literal>子句覆盖该模式。通常，如果
        给出了一个<literal>SCHEMA</literal>子句并且它与扩展的
        <literal>schema</literal>参数冲突，则会发生错误。不过，如果也给
        出了<literal>CASCADE</literal>子句，则schema冲突时会忽略
        <replaceable class="parameter">schema_name</replaceable>。
        给定的<replaceable class="parameter">schema_name</replaceable>
        将被用来安装任何需要的并且没有在其控制文件中指定
        <literal>schema</literal>的扩展。
       </para>
       
<!--==========================orignal english content==========================
       <para>
        Remember that the extension itself is not considered to be within any
        schema: extensions have unqualified names that must be unique
        database-wide.  But objects belonging to the extension can be within
        schemas.
       </para>
____________________________________________________________________________-->
       <para>
        记住扩展本身被认为不在任何模式中：扩展具有无限定的名称，并且
        要在整个数据库范围内唯一。但是属于扩展的对象可以在模式中。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
<!--==========================orignal english content==========================
      <term><replaceable class="parameter">version</replaceable></term>
____________________________________________________________________________-->
      <term><replaceable class="parameter">version</replaceable></term>
      <listitem>
<!--==========================orignal english content==========================
       <para>
        The version of the extension to install.  This can be written as
        either an identifier or a string literal.  The default version is
        whatever is specified in the extension's control file.
       </para>
____________________________________________________________________________-->
       <para>
        要安装的扩展的版本。这可以写成一个标识符或者一个字符串。
        默认版本在该扩展的控制文件中指定。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
<!--==========================orignal english content==========================
      <term><replaceable class="parameter">old_version</replaceable></term>
____________________________________________________________________________-->
      <term><replaceable class="parameter">old_version</replaceable></term>
      <listitem>
<!--==========================orignal english content==========================
       <para>
        <literal>FROM</> <replaceable class="parameter">old_version</>
        must be specified when, and only when, you are attempting to install
        an extension that replaces an <quote>old style</> module that is just
        a collection of objects not packaged into an extension.  This option
        causes <command>CREATE EXTENSION</> to run an alternative installation
        script that absorbs the existing objects into the extension, instead
        of creating new objects.  Be careful that <literal>SCHEMA</> specifies
        the schema containing these pre-existing objects.
       </para>
____________________________________________________________________________-->
       <para>
        当且仅当尝试要安装一个扩展来替代一个<quote>老式</quote>
        的模块（它只是一组没有被打包成扩展的对象的集合）时，
        才必须指定
        <literal>FROM</literal> <replaceable class="parameter">old_version</replaceable>。
        这个选项导致<command>CREATE EXTENSION</command>运行
        另一个安装脚本把现有的对象吸收到该扩展中，而不是创建
        新对象。当心<literal>SCHEMA</literal>指定的是包含已经存在
        对象的模式。
       </para>

<!--==========================orignal english content==========================
       <para>
        The value to use for <replaceable
        class="parameter">old_version</replaceable> is determined by the
        extension's author, and might vary if there is more than one version
        of the old-style module that can be upgraded into an extension.
        For the standard additional modules supplied with pre-9.1
        <productname>PostgreSQL</productname>, use <literal>unpackaged</>
        for <replaceable class="parameter">old_version</replaceable> when
        updating a module to extension style.
       </para>
____________________________________________________________________________-->
       <para>
        用于<replaceable
        class="parameter">old_version</replaceable>的值由扩展的作者决定，
        且如果有多于一种版本的老式模块可以被升级到扩展，该值还可能变化。
        对于 9.1 之前的<productname>PostgreSQL</productname>提供的
        标准附加模块，在升级模块到扩展风格时要为
        <replaceable class="parameter">old_version</replaceable>使用
        <literal>unpackaged</literal>。
       </para>
      </listitem>
     </varlistentry>
     
     <varlistentry>
<!--==========================orignal english content==========================
      <term><literal>CASCADE</></term>
____________________________________________________________________________-->
      <term><literal>CASCADE</literal></term>
      <listitem>
<!--==========================orignal english content==========================
       <para>
        Automatically install any extensions that this extension depends on
        that are not already installed.  Their dependencies are likewise
        automatically installed, recursively.  The <literal>SCHEMA</> clause,
        if given, applies to all extensions that get installed this way.
        Other options of the statement are not applied to
        automatically-installed extensions; in particular, their default
        versions are always selected.
       </para>
____________________________________________________________________________-->
       <para>
        自动安装这个扩展所依赖的任何还未安装的扩展。它们的依赖也会同样
        被自动安装。如果给出<literal>SCHEMA</literal>子句，它会应用于这种方式
        下安装的所有扩展。这个语句的其他选项不会被应用于自动安装的扩展。
        特别地，这些自动安装的扩展的默认版本将被选中。
       </para>
      </listitem>
     </varlistentry>
  </variablelist>
 </refsect1>

 <refsect1>
<!--==========================orignal english content==========================
  <title>Notes</title>
____________________________________________________________________________-->
  <title>注解</title>

<!--==========================orignal english content==========================
  <para>
   Before you can use <command>CREATE EXTENSION</> to load an extension
   into a database, the extension's supporting files must be installed.
   Information about installing the extensions supplied with
   <productname>PostgreSQL</productname> can be found in
   <link linkend="contrib">Additional Supplied Modules</link>.
  </para>
____________________________________________________________________________-->
  <para>
   在使用<command>CREATE EXTENSION</command>载入扩展到数据库中之前，
   必须先安装好该扩展的支持文件。关于安装
   <productname>PostgreSQL</productname>提供的扩展的信息可以在
   <link linkend="contrib">额外提供的模块</link>中找到。
  </para>

<!--==========================orignal english content==========================
  <para>
   The extensions currently available for loading can be identified from the
   <link linkend="view-pg-available-extensions"><structname>pg_available_extensions</structname></link>
   or
   <link linkend="view-pg-available-extension-versions"><structname>pg_available_extension_versions</structname></link>
   system views.
  </para>
____________________________________________________________________________-->
  <para>
   当前可以用于载入的扩展可以在系统视图
   <link linkend="view-pg-available-extensions"><structname>pg_available_extensions</structname></link>
   或者
   <link linkend="view-pg-available-extension-versions"><structname>pg_available_extension_versions</structname></link>
   中看到。
  </para>

<!--==========================orignal english content==========================
  <para>
   For information about writing new extensions, see
   <xref linkend="extend-extensions">.
  </para>
____________________________________________________________________________-->
  <para>
   更多有关编写新扩展的内容请见<xref linkend="extend-extensions"/>。
  </para>
 </refsect1>

 <refsect1>
<!--==========================orignal english content==========================
  <title>Examples</title>
____________________________________________________________________________-->
  <title>示例</title>

<!--==========================orignal english content==========================
  <para>
   Install the <link linkend="hstore">hstore</link> extension into the
   current database:
<programlisting>
CREATE EXTENSION hstore;
</programlisting>
  </para>
____________________________________________________________________________-->
  <para>
   安装<link linkend="hstore">hstore</link>扩展到当前数据库中：
<programlisting>
CREATE EXTENSION hstore;
</programlisting>
  </para>

<!--==========================orignal english content==========================
  <para>
   Update a pre-9.1 installation of <literal>hstore</> into
   extension style:
<programlisting>
CREATE EXTENSION hstore SCHEMA public FROM unpackaged;
</programlisting>
   Be careful to specify the schema in which you installed the existing
   <literal>hstore</> objects.
  </para>
____________________________________________________________________________-->
  <para>
   升级一个 9.1 之前的<literal>hstore</literal>安装成为扩展：
<programlisting>
CREATE EXTENSION hstore SCHEMA public FROM unpackaged;
</programlisting>
   要小心地指定安装现有<literal>hstore</literal>对象的模式。
  </para>
 </refsect1>

 <refsect1>
<!--==========================orignal english content==========================
  <title>Compatibility</title>
____________________________________________________________________________-->
  <title>兼容性</title>

<!--==========================orignal english content==========================
  <para>
   <command>CREATE EXTENSION</command> is a <productname>PostgreSQL</>
   extension.
  </para>
____________________________________________________________________________-->
  <para>
   <command>CREATE EXTENSION</command>是一种
   <productname>PostgreSQL</productname>扩展。
  </para>
 </refsect1>

 <refsect1>
<!--==========================orignal english content==========================
  <title>See Also</title>
____________________________________________________________________________-->
  <title>另见</title>

  <simplelist type="inline">
   <member><xref linkend="sql-alterextension"/></member>
   <member><xref linkend="sql-dropextension"/></member>
  </simplelist>
 </refsect1>

</refentry>
