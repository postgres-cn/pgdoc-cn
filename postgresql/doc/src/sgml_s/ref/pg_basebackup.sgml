<!--
doc/src/sgml/ref/pg_basebackup.sgml
PostgreSQL documentation
-->

<refentry id="app-pgbasebackup">
<!--==========================orignal english content==========================
 <indexterm zone="app-pgbasebackup">
  <primary>pg_basebackup</primary>
 </indexterm>
____________________________________________________________________________-->
 <indexterm zone="app-pgbasebackup">
  <primary>pg_basebackup</primary>
 </indexterm>
 
<!--==========================orignal english content==========================
 <refmeta>
  <refentrytitle>pg_basebackup</refentrytitle>
  <manvolnum>1</manvolnum>
  <refmiscinfo>Application</refmiscinfo>
 </refmeta>
____________________________________________________________________________-->
 <refmeta>
  <refentrytitle>pg_basebackup</refentrytitle>
  <manvolnum>1</manvolnum>
  <refmiscinfo>Application</refmiscinfo>
 </refmeta>

<!--==========================orignal english content==========================
 <refnamediv>
  <refname>pg_basebackup</refname>
  <refpurpose>take a base backup of a <productname>PostgreSQL</productname> cluster</refpurpose>
 </refnamediv>
____________________________________________________________________________-->
 <refnamediv>
  <refname>pg_basebackup</refname>
  <refpurpose>获得一个<productname>PostgreSQL</productname>集簇的一个基础备份</refpurpose>
 </refnamediv>

 <refsynopsisdiv>
<!--==========================orignal english content==========================
  <cmdsynopsis>
   <command>pg_basebackup</command>
   <arg rep="repeat"><replaceable>option</replaceable></arg>
  </cmdsynopsis>
____________________________________________________________________________-->
  <cmdsynopsis>
   <command>pg_basebackup</command>
   <arg rep="repeat"><replaceable>option</replaceable></arg>
  </cmdsynopsis>
 </refsynopsisdiv>

 <refsect1>
<!--==========================orignal english content==========================
  <title>
   Description
  </title>
____________________________________________________________________________-->
  <title>
   描述
  </title>
<!--==========================orignal english content==========================
  <para>
   <application>pg_basebackup</application> is used to take base backups of
   a running <productname>PostgreSQL</productname> database cluster. These
   are taken without affecting other clients to the database, and can be used
   both for point-in-time recovery (see <xref linkend="continuous-archiving"/>)
   and as the starting point for a log shipping or streaming replication standby
   servers (see <xref linkend="warm-standby"/>).
  </para>
____________________________________________________________________________-->
  <para>
   <application>pg_basebackup</application>被用于获得一个正在运行的<productname>PostgreSQL</productname>数据库集簇的基础备份。获得这些备份不会影响连接到该数据库的其他客户端，并且可以被用于时间点恢复（见<xref linkend="continuous-archiving"/>）以及用作一个日志传送或流复制后备服务器的开始点（见<xref linkend="warm-standby"/>）。
  </para>

<!--==========================orignal english content==========================
  <para>
   <application>pg_basebackup</application> makes a binary copy of the database
   cluster files, while making sure the system is put in and
   out of backup mode automatically. Backups are always taken of the entire
   database cluster; it is not possible to back up individual databases or
   database objects. For individual database backups, a tool such as
   <xref linkend="app-pgdump"/> must be used.
  </para>
____________________________________________________________________________-->
  <para>
   <application>pg_basebackup</application>建立数据库集簇文件的一份二进制副本，同时保证系统进入和退出备份模式。备份总是从整个数据库集簇获得，不可能备份单个数据库或数据库对象。关于个体数据库备份，必须使用一个像<xref linkend="app-pgdump"/>的工具。
  </para>

<!--==========================orignal english content==========================
  <para>
   The backup is made over a regular <productname>PostgreSQL</productname>
   connection, and uses the replication protocol. The connection must be made
   with a superuser or a user having <literal>REPLICATION</literal>
   permissions (see <xref linkend="role-attributes"/>),
   and <filename>pg_hba.conf</filename> must explicitly permit the replication
   connection. The server must also be configured
   with <xref linkend="guc-max-wal-senders"/> set high enough to leave at least
   one session available for the backup and one for WAL streaming (if used).
  </para>
____________________________________________________________________________-->
  <para>
   备份通过一个常规<productname>PostgreSQL</productname>连接制作，并且使用复制协议。该连接必须由一个超级用户或者一个具有<literal>REPLICATION</literal>权限（<xref linkend="role-attributes"/>）的用户建立，并且<filename>pg_hba.conf</filename>必须显式地允许该复制连接。该服务器还必须被配置，使<xref linkend="guc-max-wal-senders"/>设置得足够高以留出至少一个会话用于备份以及一个用于WAL流（如果使用流）。
  </para>

<!--==========================orignal english content==========================
  <para>
   There can be multiple <command>pg_basebackup</command>s running at the same time, but it is
   better from a performance point of view to take only one backup, and copy
   the result.
  </para>
____________________________________________________________________________-->
  <para>
   在同一时间可以有多个<command>pg_basebackup</command>运行，但是从性能的角度来说最好只做一个备份并且复制结果。
  </para>

<!--==========================orignal english content==========================
  <para>
   <application>pg_basebackup</application> can make a base backup from
   not only the master but also the standby. To take a backup from the standby,
   set up the standby so that it can accept replication connections (that is, set
   <varname>max_wal_senders</varname> and <xref linkend="guc-hot-standby"/>,
   and configure <link linkend="auth-pg-hba-conf">host-based authentication</link>).
   You will also need to enable <xref linkend="guc-full-page-writes"/> on the master.
  </para>
____________________________________________________________________________-->
  <para>
   <application>pg_basebackup</application>不仅能从主控机也能从后备机创建一个基础备份。要从后备机获得一个备份，设置后备机让它能接受复制连接（也就是，设置<varname>max_wal_senders</varname>和<xref linkend="guc-hot-standby"/>，并且配置<link linkend="auth-pg-hba-conf">基于主机的认证</link>）。你将也需要在主控机上启用<xref linkend="guc-full-page-writes"/>。
  </para>

<!--==========================orignal english content==========================
  <para>
   Note that there are some limitations in an online backup from the standby:

   <itemizedlist>
    <listitem>
     <para>
      The backup history file is not created in the database cluster backed up.
     </para>
    </listitem>
    <listitem>
     <para>
      If you are using <literal>-X none</literal>, there is no guarantee that all
      WAL files required for the backup are archived at the end of backup.
     </para>
    </listitem>
    <listitem>
     <para>
      If the standby is promoted to the master during online backup, the backup fails.
     </para>
    </listitem>
    <listitem>
     <para>
      All WAL records required for the backup must contain sufficient full-page writes,
      which requires you to enable <varname>full_page_writes</varname> on the master and
      not to use a tool like <application>pg_compresslog</application> as
      <varname>archive_command</varname> to remove full-page writes from WAL files.
     </para>
    </listitem>
   </itemizedlist>
  </para>
____________________________________________________________________________-->
  <para>
   注意在来自后备机的在线备份中有一些限制：

   <itemizedlist>
    <listitem>
     <para>
      不会在被备份的数据库集簇中创建备份历史文件。
     </para>
    </listitem>
    <listitem>
     <para>
      如果正在使用<literal>-X none</literal>，不保证备份所需的所有 WAL 文件在备份结束时被归档。
     </para>
    </listitem>
    <listitem>
     <para>
      如果在在线备份期间后备机被提升为主控机，备份会失败。
     </para>
    </listitem>
    <listitem>
     <para>
      备份所需的所有 WAL 记录必须包含足够的全页写，这要求你在主控机上启用<varname>full_page_writes</varname>并且不使用一个类似<application>pg_compresslog</application>的工具以<varname>archive_command</varname>从 WAL 文件中移除全页写。
     </para>
    </listitem>
   </itemizedlist>
  </para>
 </refsect1>

 <refsect1>
<!--==========================orignal english content==========================
  <title>Options</title>
____________________________________________________________________________-->
  <title>选项</title>

<!--==========================orignal english content==========================
   <para>
    The following command-line options control the location and format of the
    output.

    <variablelist>
     <varlistentry>
      <term><option>-D <replaceable class="parameter">directory</replaceable></option></term>
      <term><option>-&minus;pgdata=<replaceable class="parameter">directory</replaceable></option></term>
      <listitem>
       <para>
        Directory to write the output to.
        <application>pg_basebackup</application> will create the directory and
        any parent directories if necessary.  The directory may already exist,
        but it is an error if the directory already exists and is not empty.
       </para>
       <para>
        When the backup is in tar mode, and the directory is specified as
        <literal>-</literal> (dash), the tar file will be written to
        <literal>stdout</literal>.
       </para>
       <para>
        This option is required.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-F <replaceable class="parameter">format</replaceable></option></term>
      <term><option>-&minus;format=<replaceable class="parameter">format</replaceable></option></term>
      <listitem>
       <para>
        Selects the format for the output. <replaceable>format</replaceable>
        can be one of the following:

        <variablelist>
         <varlistentry>
          <term><literal>p</literal></term>
          <term><literal>plain</literal></term>
          <listitem>
           <para>
            Write the output as plain files, with the same layout as the
            current data directory and tablespaces. When the cluster has
            no additional tablespaces, the whole database will be placed in
            the target directory. If the cluster contains additional
            tablespaces, the main data directory will be placed in the
            target directory, but all other tablespaces will be placed
            in the same absolute path as they have on the server.
           </para>
           <para>
            This is the default format.
           </para>
          </listitem>
         </varlistentry>

         <varlistentry>
          <term><literal>t</literal></term>
          <term><literal>tar</literal></term>
          <listitem>
           <para>
            Write the output as tar files in the target directory. The main
            data directory will be written to a file named
            <filename>base.tar</filename>, and all other tablespaces will
            be named after the tablespace OID.
            </para>
           <para>
            If the value <literal>-</literal> (dash) is specified as
            target directory, the tar contents will be written to
            standard output, suitable for piping to for example
            <productname>gzip</productname>. This is only possible if
            the cluster has no additional tablespaces and WAL
            streaming is not used.
           </para>
           </listitem>
         </varlistentry>
        </variablelist></para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-r <replaceable class="parameter">rate</replaceable></option></term>
      <term><option>-&minus;max-rate=<replaceable class="parameter">rate</replaceable></option></term>
      <listitem>
       <para>
        The maximum transfer rate of data transferred from the server.  Values are
        in kilobytes per second.  Use a suffix of <literal>M</literal> to indicate megabytes
        per second.  A suffix of <literal>k</literal> is also accepted, and has no effect.
        Valid values are between 32 kilobytes per second and 1024 megabytes per second.
       </para>
       <para>
        The purpose is to limit the impact of <application>pg_basebackup</application>
        on the running server.
       </para>
       <para>
        This option always affects transfer of the data directory. Transfer of
        WAL files is only affected if the collection method is <literal>fetch</literal>.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-R</option></term>
      <term><option>-&minus;write-recovery-conf</option></term>
      <listitem>

       <para>
        Write a minimal <filename>recovery.conf</filename> in the output
        directory (or into the base archive file when using tar format) to
        ease setting up a standby server.
        The <filename>recovery.conf</filename> file will record the connection
        settings and, if specified, the replication slot
        that <application>pg_basebackup</application> is using, so that the
        streaming replication will use the same settings later on.
       </para>

      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-T <replaceable class="parameter">olddir</replaceable>=<replaceable class="parameter">newdir</replaceable></option></term>
      <term><option>-&minus;tablespace-mapping=<replaceable class="parameter">olddir</replaceable>=<replaceable class="parameter">newdir</replaceable></option></term>
      <listitem>
       <para>
        Relocate the tablespace in directory <replaceable>olddir</replaceable>
        to <replaceable>newdir</replaceable> during the backup.  To be
        effective, <replaceable>olddir</replaceable> must exactly match the
        path specification of the tablespace as it is currently defined.  (But
        it is not an error if there is no tablespace
        in <replaceable>olddir</replaceable> contained in the backup.)
        Both <replaceable>olddir</replaceable>
        and <replaceable>newdir</replaceable> must be absolute paths.  If a
        path happens to contain a <literal>=</literal> sign, escape it with a
        backslash.  This option can be specified multiple times for multiple
        tablespaces.  See examples below.
       </para>

       <para>
        If a tablespace is relocated in this way, the symbolic links inside
        the main data directory are updated to point to the new location.  So
        the new data directory is ready to be used for a new server instance
        with all tablespaces in the updated locations.
        </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-&minus;waldir=<replaceable class="parameter">waldir</replaceable></option></term>
      <listitem>
       <para>
        Specifies the location for the write-ahead log directory.
        <replaceable>waldir</replaceable> must be an absolute path.
        The write-ahead log directory can only be specified when
        the backup is in plain mode.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-X <replaceable class="parameter">method</replaceable></option></term>
      <term><option>-&minus;wal-method=<replaceable class="parameter">method</replaceable></option></term>
      <listitem>
       <para>
        Includes the required write-ahead log files (WAL files) in the
        backup. This will include all write-ahead logs generated during
        the backup. Unless the method <literal>none</literal> is specified,
        it is possible to start a postmaster directly in the extracted
        directory without the need to consult the log archive, thus
        making this a completely standalone backup.
       </para>
       <para>
        The following methods for collecting the write-ahead logs are
        supported:

        <variablelist>
         <varlistentry>
          <term><literal>n</literal></term>
          <term><literal>none</literal></term>
          <listitem>
           <para>
            Don't include write-ahead log in the backup.
           </para>
          </listitem>
         </varlistentry>

         <varlistentry>
          <term><literal>f</literal></term>
          <term><literal>fetch</literal></term>
          <listitem>
           <para>
            The write-ahead log files are collected at the end of the backup.
            Therefore, it is necessary for the
            <xref linkend="guc-wal-keep-segments"/> parameter to be set high
             enough that the log is not removed before the end of the backup.
             If the log has been rotated when it's time to transfer it, the
             backup will fail and be unusable.
           </para>
           <para>
            When tar format mode is used, the write-ahead log files will be
            written to the <filename>base.tar</filename> file.
           </para>
          </listitem>
         </varlistentry>

         <varlistentry>
          <term><literal>s</literal></term>
          <term><literal>stream</literal></term>
          <listitem>
           <para>
            Stream the write-ahead log while the backup is created. This will
            open a second connection to the server and start streaming the
            write-ahead log in parallel while running the backup. Therefore,
            it will use up two connections configured by the
            <xref linkend="guc-max-wal-senders"/> parameter. As long as the
             client can keep up with write-ahead log received, using this mode
             requires no extra write-ahead logs to be saved on the master.
           </para>
           <para>
            When tar format mode is used, the write-ahead log files will be
            written to a separate file named <filename>pg_wal.tar</filename> 
            (if the server is a version earlier than 10, the file will be named
            <filename>pg_xlog.tar</filename>).
           </para>
           <para>
            This value is the default.
           </para>
          </listitem>
         </varlistentry>
        </variablelist>
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-z</option></term>
      <term><option>-&minus;gzip</option></term>
      <listitem>
       <para>
        Enables gzip compression of tar file output, with the default
        compression level. Compression is only available when using
        the tar format, and the suffix <filename>.gz</filename> will
        automatically be added to all tar filenames.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-Z <replaceable class="parameter">level</replaceable></option></term>
      <term><option>-&minus;compress=<replaceable class="parameter">level</replaceable></option></term>
      <listitem>
       <para>
        Enables gzip compression of tar file output, and specifies the
        compression level (0 through 9, 0 being no compression and 9 being best
        compression). Compression is only available when using the tar
        format, and the suffix <filename>.gz</filename> will
        automatically be added to all tar filenames.
       </para>
      </listitem>
     </varlistentry>
    </variablelist>
   </para>
____________________________________________________________________________-->
   <para>
    下列命令行选项控制输出的位置和格式。

    <variablelist>
     <varlistentry>
      <term><option>-D <replaceable class="parameter">directory</replaceable></option></term>
      <term><option>--pgdata=<replaceable class="parameter">directory</replaceable></option></term>
      <listitem>
       <para>
        将输出写到哪个目录。如果必要，<application>pg_basebackup</application>将创建该目录及任何父目录。该目录可能已经存在，但是如果该目录已经存在并且非空就是一个错误。
       </para>
       <para>
        当备份处于 tar 模式中并且目录被指定为<literal>-</literal>（破折号）时，tar 文件将被写到<literal>stdout</literal>。
       </para>
       <para>
        这个选项是必需的。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-F <replaceable class="parameter">format</replaceable></option></term>
      <term><option>--format=<replaceable class="parameter">format</replaceable></option></term>
      <listitem>
       <para>
        为输出选择格式。<replaceable>format</replaceable>可以是下列之一：

        <variablelist>
         <varlistentry>
          <term><literal>p</literal></term>
          <term><literal>plain</literal></term>
          <listitem>
           <para>
            把输出写成平面文件，使用和当前数据目录和表空间相同的布局。当集簇没有额外表空间时，整个数据库将被放在目标目录中。如果集簇包含额外的表空间，主数据目录将被放置在目标目录中，但是所有其他表空间将被放在它们位于服务器上的相同的绝对路径中。
           </para>
           <para>
            这是默认格式。
           </para>
          </listitem>
         </varlistentry>

         <varlistentry>
          <term><literal>t</literal></term>
          <term><literal>tar</literal></term>
          <listitem>
           <para>
            将输出写成目标目录中的 tar 文件。主数据目录将被写入到一个名为<filename>base.tar</filename>的文件中，并且其他表空间将被以其 OID 命名。
            </para>
           <para>
            如果值<literal>-</literal>（破折号）被指定为目标目录，tar 内容将被写到标准输出，适合于管道输出到其他程序，例如<productname>gzip</productname>。只有当集簇没有额外表空间并且没有使用WAL流时这才是可能的。
           </para>
           </listitem>
         </varlistentry>
        </variablelist></para>
      </listitem>
     </varlistentry>
     
     <varlistentry>
      <term><option>-r <replaceable class="parameter">rate</replaceable></option></term>
      <term><option>--max-rate=<replaceable class="parameter">rate</replaceable></option></term>
      <listitem>
       <para>
        从该服务器传输数据的最大传输率。值的单位是千字节每秒。加上一个后缀<literal>M</literal>表示兆字节每秒。也接受后缀<literal>k</literal>，但是没有效果。合法的值在 32 千字节每秒到 1024 兆字节每秒之间。
       </para>
       <para>
        其目标是限制在运行服务器上的<application>pg_basebackup</application>产生的影响。
       </para>
       <para>
        这个选项总是会影响数据目录的传输。如果收集方法是<literal>fetch</literal>时，只有 WAL 文件受到影响。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-R</option></term>
      <term><option>--write-recovery-conf</option></term>
      <listitem>

       <para>
        在输出目录中（或者当使用 tar 格式时再基础归档文件中）写一个最小的<filename>recovery.conf</filename>来简化设置一个后备服务器。<filename>recovery.conf</filename>文件将记录连接设置（如果有）以及<application>pg_basebackup</application>所使用的复制槽，这样流复制后面就会使用相同的设置。
       </para>

      </listitem>
     </varlistentry>
     
     <varlistentry>
      <term><option>-T <replaceable class="parameter">olddir</replaceable>=<replaceable class="parameter">newdir</replaceable></option></term>
      <term><option>--tablespace-mapping=<replaceable class="parameter">olddir</replaceable>=<replaceable class="parameter">newdir</replaceable></option></term>
      <listitem>
       <para>
        在备份期间将目录<replaceable>olddir</replaceable>中的表空间重定位到<replaceable>newdir</replaceable>中。为使之有效，<replaceable>olddir</replaceable>必须正好匹配表空间所在的路径（但如果备份中没有包含<replaceable>olddir</replaceable>中的表空间也不是错误）。<replaceable>olddir</replaceable>和<replaceable>newdir</replaceable>必须是绝对路径。如果一个路径凑巧包含了一个<literal>=</literal>符号，可用反斜线对它转义。对于多个表空间可以多次使用这个选项。例子见下文。
       </para>

       <para>
        如果以这种方法重定位一个表空间，主数据目录中的符号链接会被更新成指向新位置。因此新数据目录已经可以被一个所有表空间位于更新后位置的新服务器实例使用。
        </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>--waldir=<replaceable class="parameter">waldir</replaceable></option></term>
      <listitem>
       <para>
        指定用于预写式日志目录的位置。<replaceable>waldir</replaceable>必须是绝对路径。只有当备份是平面文件模式时才能指定事务日志目录。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-X <replaceable class="parameter">method</replaceable></option></term>
      <term><option>--wal-method=<replaceable class="parameter">method</replaceable></option></term>
      <listitem>
       <para>
        在备份中包括所需的预写式日志文件（WAL文件）。这包括所有在备份期间产生的预写式日志。除非指定了方法<literal>none</literal>，可以直接在提取出的目录中启动postmaster而无需参考日志归档，所以这样得到的是一种完整的独立备份。
       </para>
       <para>
        支持下列收集预写式日志的方法：

        <variablelist>
         <varlistentry>
          <term><literal>n</literal></term>
          <term><literal>none</literal></term>
          <listitem>
           <para>
            不要在备份中包括预写式日志。
           </para>
          </listitem>
         </varlistentry>
         <varlistentry>
          <term><literal>f</literal></term>
          <term><literal>fetch</literal></term>
          <listitem>
           <para>
            在备份末尾收集预写式日志文件。因此，有必要把<xref linkend="guc-wal-keep-segments"/>参数设置得足够高，这样在备份末尾之前日志不会被移除。如果在要传输日志时它已经被轮转，备份将失败并且是不可用的。
           </para>
           <para>
            如果使用tar格式，预写式日志文件将被写入到<filename>base.tar</filename>文件。
           </para>
          </listitem>
         </varlistentry>

         <varlistentry>
          <term><literal>s</literal></term>
          <term><literal>stream</literal></term>
          <listitem>
           <para>
            在备份被创建时流传送预写式日志。这将开启一个到服务器的第二连接并且在运行备份时并行开始流传输预写式日志。因此，它将使用最多两个由<xref linkend="guc-max-wal-senders"/>参数配置的连接。只要客户端能保持接收预写式日志，使用这种模式不需要在主控机上保存额外的预写式日志。
           </para>
           <para>
            如果使用tar格式，预写式日志文件被写入到一个单独的名为<filename>pg_wal.tar</filename>的文件（如果服务器的版本超过10，该文件将被命名为<filename>pg_wal.tar</filename>）。
           </para>
           <para>
            这个值是默认值。
           </para>
          </listitem>
         </varlistentry>
        </variablelist>
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-z</option></term>
      <term><option>--gzip</option></term>
      <listitem>
       <para>
        启用对 tar 文件输出的 gzip 压缩，使用默认的压缩级别。只有使用 tar 格式时压缩才可用，并且会在所有tar文件名后面自动加上后缀<filename>.gz</filename>。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-Z <replaceable class="parameter">level</replaceable></option></term>
      <term><option>--compress=<replaceable class="parameter">level</replaceable></option></term>
      <listitem>
       <para>
        启用对 tar 文件输出的 gzip 压缩，并且制定压缩机别（0 到 9，0 是不压缩，9 是最佳压缩）。只有使用 tar 格式时压缩才可用，并且会在所有tar文件名后面自动加上后缀<filename>.gz</filename>。
       </para>
      </listitem>
     </varlistentry>
    </variablelist>
   </para>
<!--==========================orignal english content==========================
   <para>
    The following command-line options control the generation of the
    backup and the running of the program.

    <variablelist>
     <varlistentry>
      <term><option>-c <replaceable class="parameter">fast|spread</replaceable></option></term>
      <term><option>-&minus;checkpoint=<replaceable class="parameter">fast|spread</replaceable></option></term>
      <listitem>
       <para>
        Sets checkpoint mode to fast (immediate) or spread (default) (see <xref linkend="backup-lowlevel-base-backup"/>).
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-C</option></term>
      <term><option>-&minus;create-slot</option></term>
      <listitem>
       <para>
        This option causes creation of a replication slot named by the
        <literal>-&minus;slot</literal> option before starting the backup.
        An error is raised if the slot already exists.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-l <replaceable class="parameter">label</replaceable></option></term>
      <term><option>-&minus;label=<replaceable class="parameter">label</replaceable></option></term>
      <listitem>
       <para>
        Sets the label for the backup. If none is specified, a default value of
        <quote><literal>pg_basebackup base backup</literal></quote> will be used.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-n</option></term>
      <term><option>-&minus;no-clean</option></term>
      <listitem>
       <para>
        By default, when <command>pg_basebackup</command> aborts with an
        error, it removes any directories it might have created before
        discovering that it cannot finish the job (for example, data directory
        and write-ahead log directory). This option inhibits tidying-up and is
        thus useful for debugging.
       </para>

       <para>
        Note that tablespace directories are not cleaned up either way.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-N</option></term>
      <term><option>-&minus;no-sync</option></term>
      <listitem>
       <para>
        By default, <command>pg_basebackup</command> will wait for all files
        to be written safely to disk.  This option causes
        <command>pg_basebackup</command> to return without waiting, which is
        faster, but means that a subsequent operating system crash can leave
        the base backup corrupt.  Generally, this option is useful for testing
        but should not be used when creating a production installation.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-P</option></term>
      <term><option>-&minus;progress</option></term>
      <listitem>
       <para>
        Enables progress reporting. Turning this on will deliver an approximate
        progress report during the backup. Since the database may change during
        the backup, this is only an approximation and may not end at exactly
        <literal>100%</literal>. In particular, when WAL log is included in the
        backup, the total amount of data cannot be estimated in advance, and
        in this case the estimated target size will increase once it passes the
        total estimate without WAL.
       </para>
       <para>
        When this is enabled, the backup will start by enumerating the size of
        the entire database, and then go back and send the actual contents.
        This may make the backup take slightly longer, and in particular it
        will take longer before the first data is sent.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-S <replaceable>slotname</replaceable></option></term>
      <term><option>-&minus;slot=<replaceable class="parameter">slotname</replaceable></option></term>
      <listitem>
       <para>
        This option can only be used together with <literal>-X
        stream</literal>.  It causes the WAL streaming to use the specified
        replication slot.  If the base backup is intended to be used as a
        streaming replication standby using replication slots, it should then
        use the same replication slot name
        in <filename>recovery.conf</filename>.  That way, it is ensured that
        the server does not remove any necessary WAL data in the time between
        the end of the base backup and the start of streaming replication.
       </para>
       <para>
        The specified replication slot has to exist unless the
        option <option>-C</option> is also used.
       </para>
       <para>
        If this option is not specified and the server supports temporary
        replication slots (version 10 and later), then a temporary replication
        slot is automatically used for WAL streaming.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-v</option></term>
      <term><option>-&minus;verbose</option></term>
      <listitem>
       <para>
        Enables verbose mode. Will output some extra steps during startup and
        shutdown, as well as show the exact file name that is currently being
        processed if progress reporting is also enabled.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-&minus;no-slot</option></term>
      <listitem>
       <para>
        This option prevents the creation of a temporary replication slot
        during the backup even if it's supported by the server.
       </para>
       <para>
        Temporary replication slots are created by default if no slot name
        is given with the option <option>-S</option> when using log streaming.
       </para>
       <para>
        The main purpose of this option is to allow taking a base backup when
        the server is out of free replication slots.  Using replication slots
        is almost always preferred, because it prevents needed WAL from being
        removed by the server during the backup.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-&minus;no-verify-checksums</option></term>
      <listitem>
       <para>
        Disables verification of checksums, if they are enabled on the server
        the base backup is taken from.
       </para>
       <para>
        By default, checksums are verified and checksum failures will result
        in a non-zero exit status. However, the base backup will not be
        removed in such a case, as if the <option>-&minus;no-clean</option> option
        had been used.
       </para>
      </listitem>
     </varlistentry>
    </variablelist>
   </para>
____________________________________________________________________________-->
   <para>
    下列命令行选项控制备份的生成和程序的运行。

    <variablelist>
     <varlistentry>
      <term><option>-c <replaceable class="parameter">fast|spread</replaceable></option></term>
      <term><option>--checkpoint=<replaceable class="parameter">fast|spread</replaceable></option></term>
      <listitem>
       <para>
        将检查点模式设置为 fast（立刻）或 spread（默认）（见<xref linkend="backup-lowlevel-base-backup"/>）。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-C</option></term>
      <term><option>--create-slot</option></term>
      <listitem>
       <para>
        这个选项会导致在开始备份前创建一个由<literal>--slot</literal>选项指定名称的复制槽。如果槽已经存在则会发生错误。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-l <replaceable class="parameter">label</replaceable></option></term>
      <term><option>--label=<replaceable class="parameter">label</replaceable></option></term>
      <listitem>
       <para>
        为备份设置标签。如果没有指定，将使用一个默认值<quote><literal>pg_basebackup base backup</literal></quote>。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-n</option></term>
      <term><option>--no-clean</option></term>
      <listitem>
       <para>
        默认情况下，当<command>pg_basebackup</command>因为一个错误而中止时，它会把它意识到无法完成该工作之前已经创建的目录（例如数据目录和预写式日志目录）都移除。这个选项可以禁止这种清洗，因此可以用于调试。
       </para>

       <para>
        注意不管哪一种方式都不会清除表空间目录。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-N</option></term>
      <term><option>--no-sync</option></term>
      <listitem>
       <para>
        默认情况下，<command>pg_basebackup</command>将等待所有文件被安全地写到磁盘上。这个选项导致<command>pg_basebackup</command>不做这种等待就返回，这样会更快一些，但是也意味着后续发生的操作系统崩溃可能会使得这个基础备份损坏。通常这个选项对测试比较有用，在创建生产安装时不应该使用。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-P</option></term>
      <term><option>--progress</option></term>
      <listitem>
       <para>
        启用进度报告。启用这个选项将在备份期间发表一个大致的进度报告。由于数据库可能在备份期间改变，这仅仅是一种近似并且可能不会刚好在<literal>100%</literal>结束。特别地，当 WAL 日志被包括在备份中时，总数据量无法预先估计，并且在这种情况中估计的目标尺寸会在它经过不带 WAL 的总估计后增加。
       </para>
       <para>
        当这个选项被启用时，备份开始时会列举整个数据库的尺寸，并且接着回头开始发送实际的内容。这可能使备份需要多花一点点时间，并且它在发送第一个数据之前花费的时间更长。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-S <replaceable>slotname</replaceable></option></term>
      <term><option>--slot=<replaceable class="parameter">slotname</replaceable></option></term>
      <listitem>
       <para>
        这个选项仅能与<literal>-X stream</literal>一起使用。它导致WAL流使用指定的复制槽。如果该基础备份的目的是被用作一台使用复制槽的流复制后备，则它应该使用与<filename>recovery.conf</filename>中相同的复制槽名称。通过这种方式，可以确保服务器不会移除位于该基础备份结束与流复制开始之间产生的任何所需的WAL数据。
       </para>
       <para>
        指定的复制槽必须已经存在，除非同时使用了选项<option>-C</option>。
       </para>
       <para>
        如果这个选项没有被指定并且服务器支持临时复制槽（版本10以后），则会自动使用一个临时复制槽来进行WAL流。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-v</option></term>
      <term><option>--verbose</option></term>
      <listitem>
       <para>
        启用冗长模式。将在启动和关闭期间输出一些额外步骤，并且如果进度报告也被启用，还会显示当前正在被处理的确切文件名。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>--no-slot</option></term>
      <listitem>
       <para>
        如果服务器支持临时复制槽，这个选项防止备份期间创建临时复制槽。
       </para>
       <para>
        在使用日志流时，如果没有用选项<option>-S</option>指定槽名称，则默认会创建临时复制槽。
       </para>
       <para>
        这个选项的主要目的是允许在服务器没有空闲复制槽可用时制作基础备份。使用复制槽几乎总是最好的方式，因为它能防止备份期间所需的WAL被删除。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>--no-verify-checksums</option></term>
      <listitem>
       <para>
        如果在取基础备份的服务器上启用了校验码验证，则禁用校验码验证。
       </para>
       <para>
        默认情况下，校验码会被验证并且校验码失败将会导致一种非零的退出状态。不过，基础备份在这种情况下将不会被移除，就好像使用了<option>--no-clean</option>选项一样。
       </para>
      </listitem>
     </varlistentry>
    </variablelist>
   </para>

<!--==========================orignal english content==========================
   <para>
    The following command-line options control the database connection parameters.

    <variablelist>
     <varlistentry>
      <term><option>-d <replaceable class="parameter">connstr</replaceable></option></term>
      <term><option>-&minus;dbname=<replaceable class="parameter">connstr</replaceable></option></term>
      <listitem>
       <para>
        Specifies parameters used to connect to the server, as a connection
        string. See <xref linkend="libpq-connstring"/> for more information.
       </para>
       <para>
        The option is called <literal>-&minus;dbname</literal> for consistency with other
        client applications, but because <application>pg_basebackup</application>
        doesn't connect to any particular database in the cluster, database
        name in the connection string will be ignored.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-h <replaceable class="parameter">host</replaceable></option></term>
      <term><option>-&minus;host=<replaceable class="parameter">host</replaceable></option></term>
      <listitem>
       <para>
        Specifies the host name of the machine on which the server is
        running.  If the value begins with a slash, it is used as the
        directory for the Unix domain socket. The default is taken
        from the <envar>PGHOST</envar> environment variable, if set,
        else a Unix domain socket connection is attempted.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-p <replaceable class="parameter">port</replaceable></option></term>
      <term><option>-&minus;port=<replaceable class="parameter">port</replaceable></option></term>
      <listitem>
       <para>
        Specifies the TCP port or local Unix domain socket file
        extension on which the server is listening for connections.
        Defaults to the <envar>PGPORT</envar> environment variable, if
        set, or a compiled-in default.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-s <replaceable class="parameter">interval</replaceable></option></term>
      <term><option>-&minus;status-interval=<replaceable class="parameter">interval</replaceable></option></term>
      <listitem>
       <para>
        Specifies the number of seconds between status packets sent back to the
        server. This allows for easier monitoring of the progress from server.
        A value of zero disables the periodic status updates completely,
        although an update will still be sent when requested by the server, to
        avoid timeout disconnect. The default value is 10 seconds.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-U <replaceable>username</replaceable></option></term>
      <term><option>-&minus;username=<replaceable class="parameter">username</replaceable></option></term>
      <listitem>
       <para>
        User name to connect as.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-w</option></term>
      <term><option>-&minus;no-password</option></term>
      <listitem>
       <para>
        Never issue a password prompt.  If the server requires
        password authentication and a password is not available by
        other means such as a <filename>.pgpass</filename> file, the
        connection attempt will fail.  This option can be useful in
        batch jobs and scripts where no user is present to enter a
        password.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-W</option></term>
      <term><option>-&minus;password</option></term>
      <listitem>
       <para>
        Force <application>pg_basebackup</application> to prompt for a
        password before connecting to a database.
       </para>

       <para>
        This option is never essential, since
        <application>pg_basebackup</application> will automatically prompt
        for a password if the server demands password authentication.
        However, <application>pg_basebackup</application> will waste a
        connection attempt finding out that the server wants a password.
        In some cases it is worth typing <option>-W</option> to avoid the extra
        connection attempt.
       </para>
      </listitem>
     </varlistentry>
    </variablelist>
   </para>
____________________________________________________________________________-->
   <para>
    下列命令行选项控制数据库连接参数。

    <variablelist>
     <varlistentry>
      <term><option>-d <replaceable class="parameter">connstr</replaceable></option></term>
      <term><option>--dbname=<replaceable class="parameter">connstr</replaceable></option></term>
      <listitem>
       <para>
        以一个连接字符串的形式指定用于连接到服务器的参数。详见<xref linkend="libpq-connstring"/>。
       </para>
       <para>
        为了和其他客户端应用一致，该选项被称为<literal>--dbname</literal>。但是因为<application>pg_basebackup</application>并不连接到集簇中的任何特定数据库，连接字符串中的数据库名将被忽略。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-h <replaceable class="parameter">host</replaceable></option></term>
      <term><option>--host=<replaceable class="parameter">host</replaceable></option></term>
      <listitem>
       <para>
        指定运行服务器的机器的主机名。如果该值以一个斜线开始，它被用作 Unix 域套接字的目录。默认值取自<envar>PGHOST</envar>环境变量（如果设置），否则会尝试一个 Unix 域套接字连接。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-p <replaceable class="parameter">port</replaceable></option></term>
      <term><option>--port=<replaceable class="parameter">port</replaceable></option></term>
      <listitem>
       <para>
        指定服务器正在监听连接的 TCP 端口或本地 Unix 域套接字文件扩展。默认用<envar>PGPORT</envar>环境变量中的值（如果设置），或者一个编译在程序中的默认值。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-s <replaceable class="parameter">interval</replaceable></option></term>
      <term><option>--status-interval=<replaceable class="parameter">interval</replaceable></option></term>
      <listitem>
       <para>
        指定发送回服务器的状态包之间的秒数。这允许我们更容易地监控服务器的进度。一个零值完全禁用这种周期性的状态更新，不过当服务器需要时还是会有一个更新会被发送来避免超时导致的断开连接。默认值是 10 秒。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-U <replaceable>username</replaceable></option></term>
      <term><option>--username=<replaceable class="parameter">username</replaceable></option></term>
      <listitem>
       <para>
        要作为哪个用户连接。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-w</option></term>
      <term><option>--no-password</option></term>
      <listitem>
       <para>
        从不发出一个口令提示。如果服务器要求口令认证并且没有其他方式提供口令（例如一个<filename>.pgpass</filename>文件），那儿连接尝试将失败。这个选项对于批处理任务和脚本有用，因为在其中没有一个用户来输入口令。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-W</option></term>
      <term><option>--password</option></term>
      <listitem>
       <para>
        强制<application>pg_basebackup</application>在连接到一个数据库之前提示要求一个口令。
       </para>

       <para>
        这个选项不是必不可少的，因为如果服务器要求口令认证，<application>pg_basebackup</application>将自动提示要求一个口令。但是，<application>pg_basebackup</application>将浪费一次连接尝试来发现服务器想要一个口令。在某些情况下值得用<option>-W</option>来避免额外的连接尝试。
       </para>
      </listitem>
     </varlistentry>
    </variablelist>
   </para>

<!--==========================orignal english content==========================
   <para>
    Other options are also available:

    <variablelist>
     <varlistentry>
       <term><option>-V</option></term>
       <term><option>-&minus;version</option></term>
       <listitem>
       <para>
       Print the <application>pg_basebackup</application> version and exit.
       </para>
       </listitem>
     </varlistentry>

     <varlistentry>
       <term><option>-?</option></term>
       <term><option>-&minus;help</option></term>
       <listitem>
       <para>
       Show help about <application>pg_basebackup</application> command line
       arguments, and exit.
       </para>
       </listitem>
     </varlistentry>

    </variablelist>
   </para>
____________________________________________________________________________-->
   <para>
    其他选项也可用：

    <variablelist>
     <varlistentry>
       <term><option>-V</option></term>
       <term><option>--version</option></term>
       <listitem>
       <para>
       打印<application>pg_basebackup</application>版本并退出。
       </para>
       </listitem>
     </varlistentry>

     <varlistentry>
       <term><option>-?</option></term>
       <term><option>--help</option></term>
       <listitem>
       <para>
       显示有关<application>pg_basebackup</application>命令行参数的帮助并退出。
       </para>
       </listitem>
     </varlistentry>

    </variablelist>
   </para>

 </refsect1>

 <refsect1>
<!--==========================orignal english content==========================
  <title>Environment</title>
____________________________________________________________________________-->
  <title>环境</title>

<!--==========================orignal english content==========================
  <para>
   This utility, like most other <productname>PostgreSQL</productname> utilities,
   uses the environment variables supported by <application>libpq</application>
   (see <xref linkend="libpq-envars"/>).
  </para>
____________________________________________________________________________-->
  <para>
   和大部分其他<productname>PostgreSQL</productname>工具相似，这个工具也使用<application>libpq</application>（见<xref linkend="libpq-envars"/>）支持的环境变量。
  </para>

 </refsect1>

 <refsect1>
<!--==========================orignal english content==========================
  <title>Notes</title>
____________________________________________________________________________-->
  <title>注解</title>

<!--==========================orignal english content==========================
  <para>
   At the beginning of the backup, a checkpoint needs to be written on the
   server the backup is taken from.  Especially if the option
   <literal>-&minus;checkpoint=fast</literal> is not used, this can take some time
   during which <application>pg_basebackup</application> will be appear
   to be idle.
  </para>
____________________________________________________________________________-->
  <para>
   在备份的开始时，需要向从中拿去备份的服务器写一个检查点。尤其在没有使用选项<literal>--checkpoint=fast</literal>时，这可能需要一点时间，在其间<application>pg_basebackup</application>看起来处于闲置状态。
  </para>

<!--==========================orignal english content==========================
  <para>
   The backup will include all files in the data directory and tablespaces,
   including the configuration files and any additional files placed in the
   directory by third parties, except certain temporary files managed by
   PostgreSQL.  But only regular files and directories are copied, except that
   symbolic links used for tablespaces are preserved.  Symbolic links pointing
   to certain directories known to PostgreSQL are copied as empty directories.
   Other symbolic links and special device files are skipped.
   See <xref linkend="protocol-replication"/> for the precise details.
  </para>
____________________________________________________________________________-->
  <para>
   备份将包括数据目录和表空间中的所有文件，包括配置文件以及由第三方放在该目录中的任何额外文件，不过由PostgreSQL管理的特定临时文件除外。但只有常规文件和目录会被拷贝，但用于表空间的符号链接会被保留。指向PostgreSQL已知的特定目录的符号链接被拷贝为空目录。其他符号链接和特殊设备文件会被跳过。准确的细节请参考<xref linkend="protocol-replication"/>。
  </para>

<!--==========================orignal english content==========================
  <para>
   Tablespaces will in plain format by default be backed up to the same path
   they have on the server, unless the
   option <literal>-&minus;tablespace-mapping</literal> is used.  Without
   this option, running a plain format base backup on the same host as the
   server will not work if tablespaces are in use, because the backup would
   have to be written to the same directory locations as the original
   tablespaces.
  </para>
____________________________________________________________________________-->
  <para>
   表空间默认将以普通格式备份到与它们在服务器上相同的路径中，除非使用了<literal>--tablespace-mapping</literal>选项。如果没有这个选项并且表空间正在使用，在同一台服务器上进行普通格式的基础备份将无法工作，因为备份必须要写入到与原始表空间相同的目录位置。
  </para>
  
<!--==========================orignal english content==========================
  <para>
   When tar format mode is used, it is the user's responsibility to unpack each
   tar file before starting the PostgreSQL server. If there are additional tablespaces, the
   tar files for them need to be unpacked in the correct locations. In this
   case the symbolic links for those tablespaces will be created by the server
   according to the contents of the <filename>tablespace_map</filename> file that is
   included in the <filename>base.tar</filename> file.
  </para>
____________________________________________________________________________-->
  <para>
   在使用 tar 格式模式时，用户应负责在启动 PostgreSQL 服务器前解压每一个 tar 文件。如果有额外的表空间，用于它们的 tar 文件需要被解压到正确的位置。在这种情况下，服务器将根据包含在<filename>base.tar</filename>文件中的<filename>tablespace_map</filename>文件的内容为那些表空间创建符号链接。
  </para>

<!--==========================orignal english content==========================
  <para>
   <application>pg_basebackup</application> works with servers of the same
   or an older major version, down to 9.1. However, WAL streaming mode (<literal>-X
   stream</literal>) only works with server version 9.3 and later, and tar format mode
   (<literal>-&minus;format=tar</literal>) of the current version only works with server version 9.5
   or later.
  </para>
____________________________________________________________________________-->
  <para>
   <application>pg_basebackup</application>可以和具有相同或较低主版本的服务器一起工作，最低是 9.1。但是，WAL 流模式（<literal>-X 流</literal>）只能和版本为 9.3 及以上版本的服务器一起工作。当前版本的 tar 格式模式（<literal>--format=tar</literal>）只能用于版本 9.5 及以上的服务器。
  </para>

<!--==========================orignal english content==========================
  <para>
   <application>pg_basebackup</application> will preserve group permissions in
   both the <literal>plain</literal> and <literal>tar</literal> formats if group
   permissions are enabled on the source cluster.
  </para>
____________________________________________________________________________-->
  <para>
   如果在源集簇上启用了组权限，在<literal>plain</literal>以及<literal>tar</literal>模式中<application>pg_basebackup</application>将保留组权限。
  </para>
 </refsect1>

 <refsect1>
<!--==========================orignal english content==========================
  <title>Examples</title>
____________________________________________________________________________-->
  <title>例子</title>

<!--==========================orignal english content==========================
  <para>
   To create a base backup of the server at <literal>mydbserver</literal>
   and store it in the local directory
   <filename>/usr/local/pgsql/data</filename>:
<screen>
<prompt>$</prompt> <userinput>pg_basebackup -h mydbserver -D /usr/local/pgsql/data</userinput>
</screen>
  </para>
____________________________________________________________________________-->
  <para>
   要创建服务器<literal>mydbserver</literal>的一个基础备份并将它存储在本地目录<filename>/usr/local/pgsql/data</filename>中：
<screen>
<prompt>$</prompt> <userinput>pg_basebackup -h mydbserver -D /usr/local/pgsql/data</userinput>
</screen>
  </para>

<!--==========================orignal english content==========================
  <para>
   To create a backup of the local server with one compressed
   tar file for each tablespace, and store it in the directory
   <filename>backup</filename>, showing a progress report while running:
<screen>
<prompt>$</prompt> <userinput>pg_basebackup -D backup -Ft -z -P</userinput>
</screen>
  </para>
____________________________________________________________________________-->
  <para>
   要创建本地服务器的一个备份，为其中每一个表空间产生一个压缩过的 tar 文件，并且将它存储在目录<filename>backup</filename>中，在运行期间显示一个进度报告：
<screen>
<prompt>$</prompt> <userinput>pg_basebackup -D backup -Ft -z -P</userinput>
</screen>
  </para>

<!--==========================orignal english content==========================
  <para>
   To create a backup of a single-tablespace local database and compress
   this with <productname>bzip2</productname>:
<screen>
<prompt>$</prompt> <userinput>pg_basebackup -D - -Ft -X fetch | bzip2 &gt; backup.tar.bz2</userinput>
</screen>
   (This command will fail if there are multiple tablespaces in the
   database.)
  </para>
____________________________________________________________________________-->
  <para>
   要创建一个单一表空间本地数据库的备份并且使用<productname>bzip2</productname>压缩它：
<screen>
<prompt>$</prompt> <userinput>pg_basebackup -D - -Ft -X fetch | bzip2 &gt; backup.tar.bz2</userinput>
</screen>
   （如果在该数据库中有多个表空间，这个命令将失败）。
  </para>
  
<!--==========================orignal english content==========================
  <para>
   To create a backup of a local database where the tablespace in
   <filename>/opt/ts</filename> is relocated
   to <filename>./backup/ts</filename>:
<screen>
<prompt>$</prompt> <userinput>pg_basebackup -D backup/data -T /opt/ts=$(pwd)/backup/ts</userinput>
</screen>
  </para>
____________________________________________________________________________-->
  <para>
   要创建一个本地数据库的备份，其中<filename>/opt/ts</filename>中的表空间被重定位到<filename>./backup/ts</filename>：
<screen>
<prompt>$</prompt> <userinput>pg_basebackup -D backup/data -T /opt/ts=$(pwd)/backup/ts</userinput>
</screen>
  </para>
 </refsect1>

 <refsect1>
<!--==========================orignal english content==========================
  <title>See Also</title>
____________________________________________________________________________-->
  <title>参见</title>

  <simplelist type="inline">
   <member><xref linkend="app-pgdump"/></member>
  </simplelist>
 </refsect1>

</refentry>
