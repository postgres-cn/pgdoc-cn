<!--
doc/src/sgml/ref/security_label.sgml
PostgreSQL documentation
-->

<refentry id="SQL-SECURITY-LABEL">
<!--==========================orignal english content==========================
 <indexterm zone="sql-security-label">
  <primary>SECURITY LABEL</primary>
 </indexterm>
____________________________________________________________________________-->
 <indexterm zone="sql-security-label">
  <primary>SECURITY LABEL</primary>
 </indexterm>

<!--==========================orignal english content==========================
 <refmeta>
  <refentrytitle>SECURITY LABEL</refentrytitle>
  <manvolnum>7</manvolnum>
  <refmiscinfo>SQL - Language Statements</refmiscinfo>
 </refmeta>
____________________________________________________________________________-->
 <refmeta>
  <refentrytitle>SECURITY LABEL</refentrytitle>
  <manvolnum>7</manvolnum>
  <refmiscinfo>SQL - Language Statements</refmiscinfo>
 </refmeta>

<!--==========================orignal english content==========================
 <refnamediv>
  <refname>SECURITY LABEL</refname>
  <refpurpose>define or change a security label applied to an object</refpurpose>
 </refnamediv>
____________________________________________________________________________-->
 <refnamediv>
  <refname>SECURITY LABEL</refname>
  <refpurpose>定义或更改应用到一个对象的安全标签</refpurpose>
 </refnamediv>

 <refsynopsisdiv>
<!--==========================orignal english content==========================
<synopsis>
SECURITY LABEL [ FOR <replaceable class="parameter">provider</replaceable> ] ON
{
  TABLE <replaceable class="parameter">object_name</replaceable> |
  COLUMN <replaceable class="parameter">table_name</replaceable>.<replaceable class="parameter">column_name</replaceable> |
  AGGREGATE <replaceable class="parameter">aggregate_name</replaceable> ( <replaceable>aggregate_signature</replaceable> ) |
  DATABASE <replaceable class="parameter">object_name</replaceable> |
  DOMAIN <replaceable class="parameter">object_name</replaceable> |
  EVENT TRIGGER <replaceable class="parameter">object_name</replaceable> |
  FOREIGN TABLE <replaceable class="parameter">object_name</replaceable>
  FUNCTION <replaceable class="parameter">function_name</replaceable> [ ( [ [ <replaceable class="parameter">argmode</replaceable> ] [ <replaceable class="parameter">argname</replaceable> ] <replaceable class="parameter">argtype</replaceable> [, ...] ] ) ] |
  LARGE OBJECT <replaceable class="parameter">large_object_oid</replaceable> |
  MATERIALIZED VIEW <replaceable class="parameter">object_name</replaceable> |
  [ PROCEDURAL ] LANGUAGE <replaceable class="parameter">object_name</replaceable> |
  PUBLICATION <replaceable class="parameter">object_name</replaceable> |
  ROLE <replaceable class="parameter">object_name</replaceable> |
  SCHEMA <replaceable class="parameter">object_name</replaceable> |
  SEQUENCE <replaceable class="parameter">object_name</replaceable> |
  SUBSCRIPTION <replaceable class="parameter">object_name</replaceable> |
  TABLESPACE <replaceable class="parameter">object_name</replaceable> |
  TYPE <replaceable class="parameter">object_name</replaceable> |
  VIEW <replaceable class="parameter">object_name</replaceable>
} IS '<replaceable class="parameter">label</replaceable>'

<phrase>where <replaceable>aggregate_signature</replaceable> is:</phrase>

* |
[ <replaceable>argmode</replaceable> ] [ <replaceable>argname</replaceable> ] <replaceable>argtype</replaceable> [ , ... ] |
[ [ <replaceable>argmode</replaceable> ] [ <replaceable>argname</replaceable> ] <replaceable>argtype</replaceable> [ , ... ] ] ORDER BY [ <replaceable>argmode</replaceable> ] [ <replaceable>argname</replaceable> ] <replaceable>argtype</replaceable> [ , ... ]
</synopsis>
____________________________________________________________________________-->
<synopsis>
SECURITY LABEL [ FOR <replaceable class="parameter">provider</replaceable> ] ON
{
  TABLE <replaceable class="parameter">object_name</replaceable> |
  COLUMN <replaceable class="parameter">table_name</replaceable>.<replaceable class="parameter">column_name</replaceable> |
  AGGREGATE <replaceable class="parameter">aggregate_name</replaceable> ( <replaceable>aggregate_signature</replaceable> ) |
  DATABASE <replaceable class="parameter">object_name</replaceable> |
  DOMAIN <replaceable class="parameter">object_name</replaceable> |
  EVENT TRIGGER <replaceable class="parameter">object_name</replaceable> |
  FOREIGN TABLE <replaceable class="parameter">object_name</replaceable>
  FUNCTION <replaceable class="parameter">function_name</replaceable> [ ( [ [ <replaceable class="parameter">argmode</replaceable> ] [ <replaceable class="parameter">argname</replaceable> ] <replaceable class="parameter">argtype</replaceable> [, ...] ] ) ] |
  LARGE OBJECT <replaceable class="parameter">large_object_oid</replaceable> |
  MATERIALIZED VIEW <replaceable class="parameter">object_name</replaceable> |
  [ PROCEDURAL ] LANGUAGE <replaceable class="parameter">object_name</replaceable> |
  PUBLICATION <replaceable class="parameter">object_name</replaceable> |
  ROLE <replaceable class="parameter">object_name</replaceable> |
  SCHEMA <replaceable class="parameter">object_name</replaceable> |
  SEQUENCE <replaceable class="parameter">object_name</replaceable> |
  SUBSCRIPTION <replaceable class="parameter">object_name</replaceable> |
  TABLESPACE <replaceable class="parameter">object_name</replaceable> |
  TYPE <replaceable class="parameter">object_name</replaceable> |
  VIEW <replaceable class="parameter">object_name</replaceable>
} IS '<replaceable class="parameter">label</replaceable>'

<phrase>其中 <replaceable>aggregate_signature</replaceable> 是：</phrase>

* |
[ <replaceable>argmode</replaceable> ] [ <replaceable>argname</replaceable> ] <replaceable>argtype</replaceable> [ , ... ] |
[ [ <replaceable>argmode</replaceable> ] [ <replaceable>argname</replaceable> ] <replaceable>argtype</replaceable> [ , ... ] ] ORDER BY [ <replaceable>argmode</replaceable> ] [ <replaceable>argname</replaceable> ] <replaceable>argtype</replaceable> [ , ... ]
</synopsis>
 </refsynopsisdiv>

 <refsect1>
<!--==========================orignal english content==========================
  <title>Description</title>
____________________________________________________________________________-->
  <title>描述</title>

<!--==========================orignal english content==========================
  <para>
   <command>SECURITY LABEL</command> applies a security label to a database
   object.  An arbitrary number of security labels, one per label provider, can
   be associated with a given database object.  Label providers are loadable
   modules which register themselves by using the function
   <function>register_label_provider</>.
  </para>
____________________________________________________________________________-->
  <para>
   <command>SECURITY LABEL</command>对一个数据库对象应用一个安全
   标签。可以把任意数量的安全标签（每个标签提供者对应一个）关联到一个给定
   的数据库对象。标签提供者是使用函数<function>register_label_provider</function>
   注册自己的可装载模块。
  </para>

  <note>
<!--==========================orignal english content==========================
    <para>
      <function>register_label_provider</> is not an SQL function; it can
      only be called from C code loaded into the backend.
    </para>
____________________________________________________________________________-->
    <para>
      <function>register_label_provider</function>不是一个 SQL 函数，它只能在被载入
      到后端的 C 代码中调用。
    </para>
  </note>

<!--==========================orignal english content==========================
  <para>
   The label provider determines whether a given label is valid and whether
   it is permissible to assign that label to a given object.  The meaning of a
   given label is likewise at the discretion of the label provider.
   <productname>PostgreSQL</> places no restrictions on whether or how a
   label provider must interpret security labels; it merely provides a
   mechanism for storing them.  In practice, this facility is intended to allow
   integration with label-based mandatory access control (MAC) systems such as
   <productname>SE-Linux</>.  Such systems make all access control decisions
   based on object labels, rather than traditional discretionary access control
   (DAC) concepts such as users and groups.
  </para>
____________________________________________________________________________-->
  <para>
   标签提供者决定一个给定标签是否合法并且它是否可以被分配该标签给一个给定
   对象。一个给定标签的含义也同样由标签提供者判断。
   <productname>PostgreSQL</productname>没有对一个标签提供者是否必须或者如何解释
   安全标签做出限定，它仅仅只是提供了一种机制来存储它们。实际上，这个功能是
   为了允许与基于标签的强制访问控制（MAC）系统集成（例如
   <productname>SE-Linux</productname>）。这类系统会基于对象标签而不是传统的自主
   访问控制（DAC）概念（例如用户和组）做出所有访问控制决定。
  </para>
 </refsect1>

 <refsect1>
<!--==========================orignal english content==========================
  <title>Parameters</title>
____________________________________________________________________________-->
  <title>参数</title>

  <variablelist>
   <varlistentry>
<!--==========================orignal english content==========================
    <term><replaceable class="parameter">object_name</replaceable></term>
____________________________________________________________________________-->
    <term><replaceable class="parameter">object_name</replaceable></term>
<!--==========================orignal english content==========================
    <term><replaceable class="parameter">table_name.column_name</replaceable></term>
____________________________________________________________________________-->
    <term><replaceable class="parameter">table_name.column_name</replaceable></term>
<!--==========================orignal english content==========================
    <term><replaceable class="parameter">aggregate_name</replaceable></term>
____________________________________________________________________________-->
    <term><replaceable class="parameter">aggregate_name</replaceable></term>
<!--==========================orignal english content==========================
    <term><replaceable class="parameter">function_name</replaceable></term>
____________________________________________________________________________-->
    <term><replaceable class="parameter">function_name</replaceable></term>
    <listitem>
<!--==========================orignal english content==========================
     <para>
      The name of the object to be labeled.  Names of tables,
      aggregates, domains, foreign tables, functions, sequences, types, and
      views can be schema-qualified.
     </para>
____________________________________________________________________________-->
     <para>
      要被贴上标签的对象的名称。表、聚集、域、外部表、函数、序列、类型和视图
      的名称可以是模式限定的。
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
<!--==========================orignal english content==========================
    <term><replaceable class="parameter">provider</replaceable></term>
____________________________________________________________________________-->
    <term><replaceable class="parameter">provider</replaceable></term>
    <listitem>
<!--==========================orignal english content==========================
     <para>
      The name of the provider with which this label is to be associated.  The
      named provider must be loaded and must consent to the proposed labeling
      operation.  If exactly one provider is loaded, the provider name may be
      omitted for brevity.
     </para>
____________________________________________________________________________-->
     <para>
      这个标签相关联的提供者的名称。所提到的提供者必须已被载入并且必须赞同所提出
      的标签操作。如果正好只载入了一个提供者，可以出于简洁的需要忽略提供者的名称。
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
<!--==========================orignal english content==========================
    <term><replaceable class="parameter">argmode</replaceable></term>
____________________________________________________________________________-->
    <term><replaceable class="parameter">argmode</replaceable></term>

    <listitem>
<!--==========================orignal english content==========================
     <para>
      The mode of a function or aggregate
      argument: <literal>IN</>, <literal>OUT</>,
      <literal>INOUT</>, or <literal>VARIADIC</>.
      If omitted, the default is <literal>IN</>.
      Note that <command>SECURITY LABEL</command> does not actually
      pay any attention to <literal>OUT</> arguments, since only the input
      arguments are needed to determine the function's identity.
      So it is sufficient to list the <literal>IN</>, <literal>INOUT</>,
      and <literal>VARIADIC</> arguments.
     </para>
____________________________________________________________________________-->
     <para>
      一个函数或者聚集参数的模式：<literal>IN</literal>、<literal>OUT</literal>、
      <literal>INOUT</literal>或者<literal>VARIADIC</literal>。如果被忽略，默认值会是
      <literal>IN</literal>。注意<command>SECURITY LABEL</command>并不真正
      关心<literal>OUT</literal>参数，因为判断函数的身份时只需要输入参数。因此列出
      <literal>IN</literal>、<literal>INOUT</literal>和<literal>VARIADIC</literal>参数足矣。
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
<!--==========================orignal english content==========================
    <term><replaceable class="parameter">argname</replaceable></term>
____________________________________________________________________________-->
    <term><replaceable class="parameter">argname</replaceable></term>

    <listitem>
<!--==========================orignal english content==========================
     <para>
      The name of a function or aggregate argument.
      Note that <command>SECURITY LABEL</command> does not actually
      pay any attention to argument names, since only the argument data
      types are needed to determine the function's identity.
     </para>
____________________________________________________________________________-->
     <para>
      一个函数或者聚集参数的名称。注意<command>SECURITY LABEL</command>
      并不真正关心参数的名称，因为判断函数的身份时只需要参数的数据类型。
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
<!--==========================orignal english content==========================
    <term><replaceable class="parameter">argtype</replaceable></term>
____________________________________________________________________________-->
    <term><replaceable class="parameter">argtype</replaceable></term>

    <listitem>
<!--==========================orignal english content==========================
     <para>
      The data type of a function or aggregate argument.
     </para>
____________________________________________________________________________-->
     <para>
      一个函数或聚集参数的数据类型。
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
<!--==========================orignal english content==========================
    <term><replaceable class="parameter">large_object_oid</replaceable></term>
____________________________________________________________________________-->
    <term><replaceable class="parameter">large_object_oid</replaceable></term>
    <listitem>
<!--==========================orignal english content==========================
     <para>
      The OID of the large object.
     </para>
____________________________________________________________________________-->
     <para>
      大对象的 OID。
     </para>
    </listitem>
   </varlistentry>

    <varlistentry>
<!--==========================orignal english content==========================
     <term><literal>PROCEDURAL</literal></term>
____________________________________________________________________________-->
     <term><literal>PROCEDURAL</literal></term>

     <listitem>
<!--==========================orignal english content==========================
      <para>
       This is a noise word.
      </para>
____________________________________________________________________________-->
      <para>
       这是一个噪声词。
      </para>
     </listitem>
    </varlistentry>

   <varlistentry>
<!--==========================orignal english content==========================
    <term><replaceable class="parameter">label</replaceable></term>
____________________________________________________________________________-->
    <term><replaceable class="parameter">label</replaceable></term>
    <listitem>
<!--==========================orignal english content==========================
     <para>
      The new security label, written as a string literal; or <literal>NULL</>
      to drop the security label.
     </para>
____________________________________________________________________________-->
     <para>
      写成一个字符串文本的新安全标签。如果写成<literal>NULL</literal>表示删除
      原有的安全标签。
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </refsect1>

 <refsect1>
<!--==========================orignal english content==========================
  <title>Examples</title>
____________________________________________________________________________-->
  <title>示例</title>

<!--==========================orignal english content==========================
  <para>
   The following example shows how the security label of a table might
   be changed.

<programlisting>
SECURITY LABEL FOR selinux ON TABLE mytable IS 'system_u:object_r:sepgsql_table_t:s0';
</programlisting></para>
____________________________________________________________________________-->
  <para>
   下面的例子展示了如何更改一个表的安全标签。

<programlisting>
SECURITY LABEL FOR selinux ON TABLE mytable IS 'system_u:object_r:sepgsql_table_t:s0';
</programlisting></para>
 </refsect1>

 <refsect1>
<!--==========================orignal english content==========================
  <title>Compatibility</title>
____________________________________________________________________________-->
  <title>兼容性</title>
<!--==========================orignal english content==========================
  <para>
   There is no <command>SECURITY LABEL</command> command in the SQL standard.
  </para>
____________________________________________________________________________-->
  <para>
   在 SQL 标准中没有<command>SECURITY LABEL</command>命令。
  </para>
 </refsect1>

 <refsect1>
<!--==========================orignal english content==========================
  <title>See Also</title>
____________________________________________________________________________-->
  <title>另见</title>
  <simplelist type="inline">
   <member><xref linkend="sepgsql"/></member>
   <member><filename>src/test/modules/dummy_seclabel</filename></member>
  </simplelist>
 </refsect1>
</refentry>
