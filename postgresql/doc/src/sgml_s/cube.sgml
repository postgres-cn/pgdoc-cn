<!-- doc/src/sgml/cube.sgml -->

<sect1 id="cube" xreflabel="cube">
<!--==========================orignal english content==========================
 <title>cube</title>
____________________________________________________________________________-->
 <title>cube</title>

<!--==========================orignal english content==========================
 <indexterm zone="cube">
  <primary>cube (extension)</primary>
 </indexterm>
____________________________________________________________________________-->
 <indexterm zone="cube">
  <primary>cube（扩展）</primary>
 </indexterm>

<!--==========================orignal english content==========================
 <para>
  This module implements a data type <type>cube</> for
  representing multidimensional cubes.
 </para>
____________________________________________________________________________-->
 <para>
  这个模块实现了一种数据类型<type>cube</type>来表示多维立方体。
 </para>

 <sect2>
<!--==========================orignal english content==========================
  <title>Syntax</title>
____________________________________________________________________________-->
  <title>语法</title>

<!--==========================orignal english content==========================
  <para>
   <xref linkend="cube-repr-table"> shows the valid external
   representations for the <type>cube</>
   type.  <replaceable>x</>, <replaceable>y</>, etc. denote
   floating-point numbers.
  </para>
____________________________________________________________________________-->
  <para>
   <xref linkend="cube-repr-table"/>展示了<type>cube</type>类型有效的外部表示。<replaceable>x</replaceable>、<replaceable>y</replaceable>等表示浮点数。
  </para>

  <table id="cube-repr-table">
<!--==========================orignal english content==========================
   <title>Cube External Representations</title>
____________________________________________________________________________-->
   <title>立方体外部表示</title>
   <tgroup cols="2">
    <thead>
<!--==========================orignal english content==========================
     <row>
      <entry>External Syntax</entry>
      <entry>Meaning</entry>
     </row>
____________________________________________________________________________-->
     <row>
      <entry>外部语法</entry>
      <entry>含义</entry>
     </row>
    </thead>
    
    <tbody>
<!--==========================orignal english content==========================
     <row>
      <entry><literal><replaceable>x</></literal></entry>
      <entry>A one-dimensional point
       (or, zero-length one-dimensional interval)
      </entry>
     </row>
____________________________________________________________________________-->
     <row>
      <entry><literal><replaceable>x</replaceable></literal></entry>
      <entry>一个一维点（或者长度为零的一维区间）
      </entry>
     </row>
<!--==========================orignal english content==========================
     <row>
      <entry><literal>(<replaceable>x</>)</literal></entry>
      <entry>Same as above</entry>
     </row>
____________________________________________________________________________-->
     <row>
      <entry><literal>(<replaceable>x</replaceable>)</literal></entry>
      <entry>同上</entry>
     </row>
<!--==========================orignal english content==========================
     <row>
      <entry><literal><replaceable>x1</>,<replaceable>x2</>,...,<replaceable>xn</></literal></entry>
      <entry>A point in n-dimensional space, represented internally as a
      zero-volume cube
      </entry>
     </row>
____________________________________________________________________________-->
     <row>
      <entry><literal><replaceable>x1</replaceable>,<replaceable>x2</replaceable>,...,<replaceable>xn</replaceable></literal></entry>
      <entry>n-维空间中的一个点，内部表示为一个零容积立方体
      </entry>
     </row>
<!--==========================orignal english content==========================
     <row>
      <entry><literal>(<replaceable>x1</>,<replaceable>x2</>,...,<replaceable>xn</>)</literal></entry>
      <entry>Same as above</entry>
     </row>
____________________________________________________________________________-->
     <row>
      <entry><literal>(<replaceable>x1</replaceable>,<replaceable>x2</replaceable>,...,<replaceable>xn</replaceable>)</literal></entry>
      <entry>同上</entry>
     </row>
<!--==========================orignal english content==========================
     <row>
      <entry><literal>(<replaceable>x</>),(<replaceable>y</>)</literal></entry>
      <entry>A one-dimensional interval starting at <replaceable>x</> and ending at <replaceable>y</> or vice versa; the
       order does not matter
      </entry>
     </row>
____________________________________________________________________________-->
     <row>
      <entry><literal>(<replaceable>x</replaceable>),(<replaceable>y</replaceable>)</literal></entry>
      <entry>开始于<replaceable>x</replaceable>并且结束于<replaceable>y</replaceable>的一个一维区间，反之亦然。顺序并不重要
      </entry>
     </row>
<!--==========================orignal english content==========================
     <row>
      <entry><literal>[(<replaceable>x</>),(<replaceable>y</>)]</literal></entry>
      <entry>Same as above</entry>
     </row>
____________________________________________________________________________-->
     <row>
      <entry><literal>[(<replaceable>x</replaceable>),(<replaceable>y</replaceable>)]</literal></entry>
      <entry>同上</entry>
     </row>
<!--==========================orignal english content==========================
     <row>
      <entry><literal>(<replaceable>x1</>,...,<replaceable>xn</>),(<replaceable>y1</>,...,<replaceable>yn</>)</literal></entry>
      <entry>An n-dimensional cube represented by a pair of its diagonally
       opposite corners
      </entry>
     </row>
____________________________________________________________________________-->
     <row>
      <entry><literal>(<replaceable>x1</replaceable>,...,<replaceable>xn</replaceable>),(<replaceable>y1</replaceable>,...,<replaceable>yn</replaceable>)</literal></entry>
      <entry>一个 n-维立方体，用它的对角顶点对表示
      </entry>
     </row>
<!--==========================orignal english content==========================
     <row>
      <entry><literal>[(<replaceable>x1</>,...,<replaceable>xn</>),(<replaceable>y1</>,...,<replaceable>yn</>)]</literal></entry>
      <entry>Same as above</entry>
     </row>
____________________________________________________________________________-->
     <row>
      <entry><literal>[(<replaceable>x1</replaceable>,...,<replaceable>xn</replaceable>),(<replaceable>y1</replaceable>,...,<replaceable>yn</replaceable>)]</literal></entry>
      <entry>同上</entry>
     </row>
    </tbody>
   </tgroup>
  </table>

<!--==========================orignal english content==========================
  <para>
   It does not matter which order the opposite corners of a cube are
   entered in.  The <type>cube</> functions
   automatically swap values if needed to create a uniform
   <quote>lower left &mdash; upper right</> internal representation.
   When the corners coincide, <type>cube</> stores only one corner
   along with an <quote>is point</> flag to avoid wasting space.
  </para>
____________________________________________________________________________-->
  <para>
   一个立方体的对角录入的顺序无关紧要。如果需要创建一种统一的<quote>左下 &mdash; 右上</quote>的内部表示，<type>cube</type>函数会自动地交换值。当角重合时，<type>cube</type>只存储一个角和一个<quote>is point</quote>标志，这样避免浪费空间。
  </para>

<!--==========================orignal english content==========================
  <para>
   White space is ignored on input, so
   <literal>[(<replaceable>x</>),(<replaceable>y</>)]</literal> is the same as
   <literal>[ ( <replaceable>x</> ), ( <replaceable>y</> ) ]</literal>.
  </para>
____________________________________________________________________________-->
  <para>
   输入中的空白空间会被忽略，因此<literal>[(<replaceable>x</replaceable>),(<replaceable>y</replaceable>)]</literal>与<literal>[ ( <replaceable>x</replaceable> ), ( <replaceable>y</replaceable> ) ]</literal>相同。
  </para>
 </sect2>

 <sect2>
<!--==========================orignal english content==========================
  <title>Precision</title>
____________________________________________________________________________-->
  <title>精度</title>

<!--==========================orignal english content==========================
  <para>
   Values are stored internally as 64-bit floating point numbers. This means
   that numbers with more than about 16 significant digits will be truncated.
  </para>
____________________________________________________________________________-->
  <para>
   值在内部被存储为 64 位浮点数。这意味着超过 16 位有效位的数字将被截断。
  </para>
 </sect2>

 <sect2>
<!--==========================orignal english content==========================
  <title>Usage</title>
____________________________________________________________________________-->
  <title>用法</title>

<!--==========================orignal english content==========================
  <para>
   <xref linkend="cube-operators-table"> shows the operators provided for
   type <type>cube</>.
  </para>
____________________________________________________________________________-->
  <para>
   <xref linkend="cube-operators-table"/>展示了为类型<type>cube</type>提供的操作符。
  </para>

  <table id="cube-operators-table">
<!--==========================orignal english content==========================
   <title>Cube Operators</title>
____________________________________________________________________________-->
   <title>立方体操作符</title>
   <tgroup cols="3">
    <thead>
<!--==========================orignal english content==========================
     <row>
      <entry>Operator</entry>
      <entry>Result</entry>
      <entry>Description</entry>
     </row>
____________________________________________________________________________-->
     <row>
      <entry>操作符</entry>
      <entry>结果</entry>
      <entry>描述</entry>
     </row>
    </thead>

    <tbody>
<!--==========================orignal english content==========================
     <row>
      <entry><literal>a = b</></entry>
      <entry><type>boolean</></entry>
      <entry>The cubes a and b are identical.</entry>
     </row>
____________________________________________________________________________-->
     <row>
      <entry><literal>a = b</literal></entry>
      <entry><type>boolean</type></entry>
      <entry>立方体 a 和 b 相同。</entry>
     </row>

<!--==========================orignal english content==========================
     <row>
      <entry><literal>a &amp;&amp; b</></entry>
      <entry><type>boolean</></entry>
      <entry>The cubes a and b overlap.</entry>
     </row>
____________________________________________________________________________-->
     <row>
      <entry><literal>a &amp;&amp; b</literal></entry>
      <entry><type>boolean</type></entry>
      <entry>立方体 a 和 b 重叠。</entry>
     </row>

<!--==========================orignal english content==========================
     <row>
      <entry><literal>a @&gt; b</></entry>
      <entry><type>boolean</></entry>
      <entry>The cube a contains the cube b.</entry>
     </row>
____________________________________________________________________________-->
     <row>
      <entry><literal>a @&gt; b</literal></entry>
      <entry><type>boolean</type></entry>
      <entry>立方体 a 包含 立方体 b。</entry>
     </row>

<!--==========================orignal english content==========================
     <row>
      <entry><literal>a &lt;@ b</></entry>
      <entry><type>boolean</></entry>
      <entry>The cube a is contained in the cube b.</entry>
     </row>
____________________________________________________________________________-->
     <row>
      <entry><literal>a &lt;@ b</literal></entry>
      <entry><type>boolean</type></entry>
      <entry>立方体 a 被包含在立方体 b 中。</entry>
     </row>
     
<!--==========================orignal english content==========================
     <row>
      <entry><literal>a &lt; b</></entry>
      <entry><type>boolean</></entry>
      <entry>The cube a is less than the cube b.</entry>
     </row>
____________________________________________________________________________-->
     <row>
      <entry><literal>a &lt; b</literal></entry>
      <entry><type>boolean</type></entry>
      <entry>立方体 a 小于立方体 b。</entry>
     </row>

<!--==========================orignal english content==========================
     <row>
      <entry><literal>a &lt;= b</></entry>
      <entry><type>boolean</></entry>
      <entry>The cube a is less than or equal to the cube b.</entry>
     </row>
____________________________________________________________________________-->
     <row>
      <entry><literal>a &lt;= b</literal></entry>
      <entry><type>boolean</type></entry>
      <entry>立方体 a 小于或者等于立方体 b。</entry>
     </row>

<!--==========================orignal english content==========================
     <row>
      <entry><literal>a &gt; b</></entry>
      <entry><type>boolean</></entry>
      <entry>The cube a is greater than the cube b.</entry>
     </row>
____________________________________________________________________________-->
     <row>
      <entry><literal>a &gt; b</literal></entry>
      <entry><type>boolean</type></entry>
      <entry>立方体 a 大于立方体 b。</entry>
     </row>

<!--==========================orignal english content==========================
     <row>
      <entry><literal>a &gt;= b</></entry>
      <entry><type>boolean</></entry>
      <entry>The cube a is greater than or equal to the cube b.</entry>
     </row>
____________________________________________________________________________-->
     <row>
      <entry><literal>a &gt;= b</literal></entry>
      <entry><type>boolean</type></entry>
      <entry>立方体 a 大于或者等于立方体 b。</entry>
     </row>

<!--==========================orignal english content==========================
     <row>
      <entry><literal>a &lt;&gt; b</></entry>
      <entry><type>boolean</></entry>
      <entry>The cube a is not equal to the cube b.</entry>
     </row>
____________________________________________________________________________-->
     <row>
      <entry><literal>a &lt;&gt; b</literal></entry>
      <entry><type>boolean</type></entry>
      <entry>立方体 a 不等于立方体 b。</entry>
     </row>

<!--==========================orignal english content==========================
     <row>
      <entry><literal>a -&gt; n</></entry>
      <entry><type>float8</></entry>
      <entry>Get <replaceable>n</>-th coordinate of cube (counting from 1).</entry>
     </row>
____________________________________________________________________________-->
     <row>
      <entry><literal>a -&gt; n</literal></entry>
      <entry><type>float8</type></entry>
      <entry>得到立方体的第<replaceable>n</replaceable>个坐标（从 1 开始数）。</entry>
     </row>

<!--==========================orignal english content==========================
     <row>
      <entry><literal>a ~&gt; n</></entry>
      <entry><type>float8</></entry>
      <entry>
        Get <replaceable>n</replaceable>-th coordinate of cube in following way:
        n = 2 * k - 1 means lower bound of <replaceable>k</replaceable>-th
        dimension, n = 2 * k means upper bound of
        <replaceable>k</replaceable>-th dimension.  Negative
        <replaceable>n</replaceable> denotes the inverse value of the corresponding
        positive coordinate.  This operator is designed for KNN-GiST support.
      </entry>
     </row>
____________________________________________________________________________-->
     <row>
      <entry><literal>a ~&gt; n</literal></entry>
      <entry><type>float8</type></entry>
      <entry>
        以下列方式获取多维数据集的第<replaceable>n</replaceable>个坐标：
         n = 2 * k  -  1表示第<replaceable>k</replaceable>维度的下限，
         n = 2 * k表示第<replaceable>k</replaceable>维度的上限。 
         负的<replaceable>n</replaceable>表示相应正坐标的倒数值。此运算符专为KNN-GiST支持而设计。
      </entry>
     </row>

<!--==========================orignal english content==========================
     <row>
      <entry><literal>a &lt;-&gt; b</></entry>
      <entry><type>float8</></entry>
      <entry>Euclidean distance between a and b.</entry>
     </row>
____________________________________________________________________________-->
     <row>
      <entry><literal>a &lt;-&gt; b</literal></entry>
      <entry><type>float8</type></entry>
      <entry>a 和 b 之间的欧氏距离。</entry>
     </row>

<!--==========================orignal english content==========================
     <row>
      <entry><literal>a &lt;#&gt; b</></entry>
      <entry><type>float8</></entry>
      <entry>Taxicab (L-1 metric) distance between a and b.</entry>
     </row>
____________________________________________________________________________-->
     <row>
      <entry><literal>a &lt;#&gt; b</literal></entry>
      <entry><type>float8</type></entry>
      <entry>a 和 b 之间的直线距离（taxicab 距离，L1 度量）。</entry>
     </row>

<!--==========================orignal english content==========================
     <row>
      <entry><literal>a &lt;=&gt; b</></entry>
      <entry><type>float8</></entry>
      <entry>Chebyshev (L-inf metric) distance between a and b.</entry>
     </row>
____________________________________________________________________________-->
     <row>
      <entry><literal>a &lt;=&gt; b</literal></entry>
      <entry><type>float8</type></entry>
      <entry>a 和 b 之间的切比雪夫（L-inf 度量）距离。</entry>
     </row>
    </tbody>
   </tgroup>
  </table>

<!--==========================orignal english content==========================
  <para>
   (Before PostgreSQL 8.2, the containment operators <literal>@&gt;</> and <literal>&lt;@</> were
   respectively called <literal>@</> and <literal>~</>.  These names are still available, but are
   deprecated and will eventually be retired.  Notice that the old names
   are reversed from the convention formerly followed by the core geometric
   data types!)
  </para>
____________________________________________________________________________-->
  <para>
   （在 PostgreSQL 8.2 之前，包含操作符<literal>@&gt;</literal>和<literal>&lt;@</literal>分别被称为<literal>@</literal>和<literal>~</literal>。这些名称仍然可用，但是已经被废弃并且最终将会退休。注意旧的名字与之前核心几何数据类型遵循的习惯相反！）
  </para>

<!--==========================orignal english content==========================
  <para>
   The scalar ordering operators (<literal>&lt;</>, <literal>&gt;=</>, etc)
   do not make a lot of sense for any practical purpose but sorting.  These
   operators first compare the first coordinates, and if those are equal,
   compare the second coordinates, etc.  They exist mainly to support the
   b-tree index operator class for <type>cube</>, which can be useful for
   example if you would like a UNIQUE constraint on a <type>cube</> column.
  </para>
____________________________________________________________________________-->
  <para>
   标量排序操作符（<literal>&lt;</literal>、<literal>&gt;=</literal>等）除了用来排序之外没有什么实际用途。这些操作符首先比较第一个坐标，如果它们相等再比较第二个坐标等等。它们主要为支持<type>cube</type>的 b-树索引操作符类而存在，这类操作符对支持<type>cube</type>列上的 UNIQUE 约束等很有用。
  </para>

<!--==========================orignal english content==========================
  <para>
   The <filename>cube</> module also provides a GiST index operator class for
   <type>cube</> values.
   A <type>cube</> GiST index can be used to search for values using the
   <literal>=</>, <literal>&amp;&amp;</>, <literal>@&gt;</>, and
   <literal>&lt;@</> operators in <literal>WHERE</> clauses.
  </para>
____________________________________________________________________________-->
  <para>
   <filename>cube</filename>模块也为<type>cube</type>值提供了一个 GiST 索引操作符类。<type>cube</type> GiST 索引可以被用于在<literal>WHERE</literal>子句中通过<literal>=</literal>、<literal>&amp;&amp;</literal>、<literal>@&gt;</literal>以及<literal>&lt;@</literal>操作符来搜索值。
  </para>

<!--==========================orignal english content==========================
  <para>
   In addition, a <type>cube</> GiST index can be used to find nearest
   neighbors using the metric operators
   <literal>&lt;-&gt;</>, <literal>&lt;#&gt;</>, and
   <literal>&lt;=&gt;</> in <literal>ORDER BY</> clauses.
   For example, the nearest neighbor of the 3-D point (0.5, 0.5, 0.5)
   could be found efficiently with:
<programlisting>
SELECT c FROM test ORDER BY c &lt;-&gt; cube(array[0.5,0.5,0.5]) LIMIT 1;
</programlisting>
  </para>
____________________________________________________________________________-->
  <para>
   此外，<type>cube</type> GiST 索引可以被用在<literal>ORDER BY</literal>子句中通过度量操作符<literal>&lt;-&gt;</literal>、<literal>&lt;#&gt;</literal>和<literal>&lt;=&gt;</literal>来查找最近邻。例如， 3-D 点(0.5, 0.5, 0.5)的最近邻可以用下面的查询很快地找到：
<programlisting>
SELECT c FROM test ORDER BY c &lt;-&gt; cube(array[0.5,0.5,0.5]) LIMIT 1;
</programlisting>
  </para>

<!--==========================orignal english content==========================
  <para>
   The <literal>~&gt;</> operator can also be used in this way to
   efficiently retrieve the first few values sorted by a selected coordinate.
   For example, to get the first few cubes ordered by the first coordinate
   (lower left corner) ascending one could use the following query:
<programlisting>
SELECT c FROM test ORDER BY c ~&gt; 1 LIMIT 5;
</programlisting>
   And to get 2-D cubes ordered by the first coordinate of the upper right
   corner descending:
<programlisting>
SELECT c FROM test ORDER BY c ~&gt; 3 DESC LIMIT 5;
</programlisting>
  </para>
____________________________________________________________________________-->
  <para>
   也可以用这种方式使用<literal>~&gt;</literal>操作符来高效地检索通过选定坐标排序后的前几个值。例如，可以用下面的查询得到通过第一个坐标（左下角）升序排列后的前几个立方体：
<programlisting>
SELECT c FROM test ORDER BY c ~&gt; 1 LIMIT 5;
</programlisting>
   以及得到通过右上角第一个坐标降序排列后的 2-D 立方体：
<programlisting>
SELECT c FROM test ORDER BY c ~&gt; 3 DESC LIMIT 5;
</programlisting>
  </para>

<!--==========================orignal english content==========================
  <para>
   <xref linkend="cube-functions-table"> shows the available functions.
  </para>
____________________________________________________________________________-->
  <para>
   <xref linkend="cube-functions-table"/>展示了可用的函数。
  </para>

  <table id="cube-functions-table">
<!--==========================orignal english content==========================
   <title>Cube Functions</title>
____________________________________________________________________________-->
   <title>立方体函数</title>
   <tgroup cols="4">
    <thead>
<!--==========================orignal english content==========================
     <row>
      <entry>Function</entry>
      <entry>Result</entry>
      <entry>Description</entry>
      <entry>Example</entry>
     </row>
____________________________________________________________________________-->
     <row>
      <entry>函数</entry>
      <entry>结果</entry>
      <entry>描述</entry>
      <entry>例子</entry>
     </row>
    </thead>
    
    <tbody>
<!--==========================orignal english content==========================
     <row>
      <entry><literal>cube(float8)</literal></entry>
      <entry><type>cube</type></entry>
      <entry>Makes a one dimensional cube with both coordinates the same.
      </entry>
      <entry>
       <literal>cube(1) == '(1)'</literal>
      </entry>
     </row>
____________________________________________________________________________-->
     <row>
      <entry><literal>cube(float8)</literal></entry>
      <entry><type>cube</type></entry>
      <entry>制造一个一维立方体，坐标都是相同的。
      </entry>
      <entry>
       <literal>cube(1) == '(1)'</literal>
      </entry>
     </row>

<!--==========================orignal english content==========================
     <row>
      <entry><literal>cube(float8, float8)</literal></entry>
      <entry><type>cube</type></entry>
      <entry>Makes a one dimensional cube.
      </entry>
      <entry>
       <literal>cube(1,2) == '(1),(2)'</literal>
      </entry>
     </row>
____________________________________________________________________________-->
     <row>
      <entry><literal>cube(float8, float8)</literal></entry>
      <entry><type>cube</type></entry>
      <entry>制造一个一维立方体。
      </entry>
      <entry>
       <literal>cube(1,2) == '(1),(2)'</literal>
      </entry>
     </row>

<!--==========================orignal english content==========================
     <row>
      <entry><literal>cube(float8[])</literal></entry>
      <entry><type>cube</type></entry>
      <entry>Makes a zero-volume cube using the coordinates
       defined by the array.
      </entry>
      <entry>
       <literal>cube(ARRAY[1,2]) == '(1,2)'</literal>
      </entry>
     </row>
____________________________________________________________________________-->
     <row>
      <entry><literal>cube(float8[])</literal></entry>
      <entry><type>cube</type></entry>
      <entry>使用数组定义的坐标制造一个零容积的立方体。
      </entry>
      <entry>
       <literal>cube(ARRAY[1,2]) == '(1,2)'</literal>
      </entry>
     </row>

<!--==========================orignal english content==========================
     <row>
      <entry><literal>cube(float8[], float8[])</literal></entry>
      <entry><type>cube</type></entry>
      <entry>Makes a cube with upper right and lower left
       coordinates as defined by the two arrays, which must be of the
       same length.
      </entry>
      <entry>
       <literal>cube(ARRAY[1,2], ARRAY[3,4]) == '(1,2),(3,4)'
       </literal>
      </entry>
     </row>
____________________________________________________________________________-->
     <row>
      <entry><literal>cube(float8[], float8[])</literal></entry>
      <entry><type>cube</type></entry>
      <entry>用由两个数组定义的右上和左下坐标制造一个立方体，两个数组必须等长。
      </entry>
      <entry>
       <literal>cube(ARRAY[1,2], ARRAY[3,4]) == '(1,2),(3,4)'
       </literal>
      </entry>
     </row>

<!--==========================orignal english content==========================
     <row>
      <entry><literal>cube(cube, float8)</literal></entry>
      <entry><type>cube</type></entry>
      <entry>Makes a new cube by adding a dimension on to an existing cube,
       with the same values for both endpoints of the new coordinate.  This
       is useful for building cubes piece by piece from calculated values.
      </entry>
      <entry>
       <literal>cube('(1,2),(3,4)'::cube, 5) == '(1,2,5),(3,4,5)'</literal>
      </entry>
     </row>
____________________________________________________________________________-->
     <row>
      <entry><literal>cube(cube, float8)</literal></entry>
      <entry><type>cube</type></entry>
      <entry>在一个现有的立方体上增加一维来制造一个新立方体，对新坐标的各个端点都采用相同的值。这可以用于从计算得到的值逐渐地构建立方体。
      </entry>
      <entry>
       <literal>cube('(1,2),(3,4)'::cube, 5) == '(1,2,5),(3,4,5)'</literal>
      </entry>
     </row>

<!--==========================orignal english content==========================
     <row>
      <entry><literal>cube(cube, float8, float8)</literal></entry>
      <entry><type>cube</type></entry>
      <entry>Makes a new cube by adding a dimension on to an existing
       cube. This is useful for building cubes piece by piece from calculated
       values.
      </entry>
      <entry>
       <literal>cube('(1,2),(3,4)'::cube, 5, 6) == '(1,2,5),(3,4,6)'</literal>
      </entry>
     </row>
____________________________________________________________________________-->
     <row>
      <entry><literal>cube(cube, float8, float8)</literal></entry>
      <entry><type>cube</type></entry>
      <entry>在一个现有的立方体上增加一维来制造一个新立方体。这可以用于从计算得到的值逐渐地构建立方体。
      </entry>
      <entry>
       <literal>cube('(1,2),(3,4)'::cube, 5, 6) == '(1,2,5),(3,4,6)'</literal>
      </entry>
     </row>

<!--==========================orignal english content==========================
     <row>
      <entry><literal>cube_dim(cube)</literal></entry>
      <entry><type>integer</type></entry>
      <entry>Returns the number of dimensions of the cube.
      </entry>
      <entry>
       <literal>cube_dim('(1,2),(3,4)') == '2'</literal>
      </entry>
     </row>
____________________________________________________________________________-->
     <row>
      <entry><literal>cube_dim(cube)</literal></entry>
      <entry><type>integer</type></entry>
      <entry>返回该立方体的维数
      </entry>
      <entry>
       <literal>cube_dim('(1,2),(3,4)') == '2'</literal>
      </entry>
     </row>

<!--==========================orignal english content==========================
     <row>
      <entry><literal>cube_ll_coord(cube, integer)</literal></entry>
      <entry><type>float8</type></entry>
      <entry>Returns the <replaceable>n</>-th coordinate value for the lower
       left corner of the cube.
      </entry>
      <entry>
       <literal>cube_ll_coord('(1,2),(3,4)', 2) == '2'</literal>
      </entry>
     </row>
____________________________________________________________________________-->
     <row>
      <entry><literal>cube_ll_coord(cube, integer)</literal></entry>
      <entry><type>float8</type></entry>
      <entry>返回一个立方体的左下角的第 <replaceable>n</replaceable>个坐标值
      </entry>
      <entry>
       <literal>cube_ll_coord('(1,2),(3,4)', 2) == '2'</literal>
      </entry>
     </row>

<!--==========================orignal english content==========================
    <row>
      <entry><literal>cube_ur_coord(cube, integer)</literal></entry>
      <entry><type>float8</type></entry>
      <entry>Returns the <replaceable>n</>-th coordinate value for the
       upper right corner of the cube.
      </entry>
      <entry>
       <literal>cube_ur_coord('(1,2),(3,4)', 2) == '4'</literal>
      </entry>
     </row>
____________________________________________________________________________-->
    <row>
      <entry><literal>cube_ur_coord(cube, integer)</literal></entry>
      <entry><type>float8</type></entry>
      <entry>返回一个立方体的右上角的第<replaceable>n</replaceable>个坐标值
      </entry>
      <entry>
       <literal>cube_ur_coord('(1,2),(3,4)', 2) == '4'</literal>
      </entry>
     </row>

<!--==========================orignal english content==========================
     <row>
      <entry><literal>cube_is_point(cube)</literal></entry>
      <entry><type>boolean</type></entry>
      <entry>Returns true if the cube is a point, that is,
       the two defining corners are the same.</entry>
      <entry>
      </entry>
     </row>
____________________________________________________________________________-->
     <row>
      <entry><literal>cube_is_point(cube)</literal></entry>
      <entry><type>boolean</type></entry>
      <entry>如果一个立方体是一个点则返回真，也就是两个定义点相同。</entry>
      <entry>
      </entry>
     </row>

<!--==========================orignal english content==========================
     <row>
      <entry><literal>cube_distance(cube, cube)</literal></entry>
      <entry><type>float8</type></entry>
      <entry>Returns the distance between two cubes. If both
       cubes are points, this is the normal distance function.
      </entry>
      <entry>
      </entry>
     </row>
____________________________________________________________________________-->
     <row>
      <entry><literal>cube_distance(cube, cube)</literal></entry>
      <entry><type>float8</type></entry>
      <entry>返回两个立方体之间的距离。如果两个都是点，这就是普通距离函数。
      </entry>
      <entry>
      </entry>
     </row>

<!--==========================orignal english content==========================
     <row>
      <entry><literal>cube_subset(cube, integer[])</literal></entry>
      <entry><type>cube</type></entry>
      <entry>Makes a new cube from an existing cube, using a list of
       dimension indexes from an array. Can be used to extract the endpoints
       of a single dimension, or to drop dimensions, or to reorder them as
       desired.
      </entry>
      <entry>
       <literal>cube_subset(cube('(1,3,5),(6,7,8)'), ARRAY[2]) == '(3),(7)'</>
       <literal>cube_subset(cube('(1,3,5),(6,7,8)'), ARRAY[3,2,1,1]) ==
        '(5,3,1,1),(8,7,6,6)'</>
      </entry>
     </row>
____________________________________________________________________________-->
     <row>
      <entry><literal>cube_subset(cube, integer[])</literal></entry>
      <entry><type>cube</type></entry>
      <entry>从一个现有的立方体制造一个新立方体，使用来自于一个数组的维索引列表。它可以被用来抽取一个单一维度的端点，或者它可以被用来去除维度，或者按照需要对它们重新排序。
      </entry>
      <entry>
       <literal>cube_subset(cube('(1,3,5),(6,7,8)'), ARRAY[2]) == '(3),(7)'</literal>
       <literal>cube_subset(cube('(1,3,5),(6,7,8)'), ARRAY[3,2,1,1]) ==
        '(5,3,1,1),(8,7,6,6)'</literal>
      </entry>
     </row>

<!--==========================orignal english content==========================
     <row>
      <entry><literal>cube_union(cube, cube)</literal></entry>
      <entry><type>cube</type></entry>
      <entry>Produces the union of two cubes.
      </entry>
      <entry>
      </entry>
     </row>
____________________________________________________________________________-->
     <row>
      <entry><literal>cube_union(cube, cube)</literal></entry>
      <entry><type>cube</type></entry>
      <entry>产生两个立方体的并
      </entry>
      <entry>
      </entry>
     </row>

<!--==========================orignal english content==========================
     <row>
      <entry><literal>cube_inter(cube, cube)</literal></entry>
      <entry><type>cube</type></entry>
      <entry>Produces the intersection of two cubes.
      </entry>
      <entry>
      </entry>
     </row>
____________________________________________________________________________-->
     <row>
      <entry><literal>cube_inter(cube, cube)</literal></entry>
      <entry><type>cube</type></entry>
      <entry>产生两个立方体的交
      </entry>
      <entry>
      </entry>
     </row>

<!--==========================orignal english content==========================
     <row>
      <entry><literal>cube_enlarge(c cube, r double, n integer)</literal></entry>
      <entry><type>cube</type></entry>
      <entry>Increases the size of the cube by the specified
       radius <replaceable>r</> in at least <replaceable>n</> dimensions.
       If the radius is negative the cube is shrunk instead.
       All defined dimensions are changed by the radius <replaceable>r</>.
       Lower-left coordinates are decreased by <replaceable>r</> and
       upper-right coordinates are increased by <replaceable>r</>.  If a
       lower-left coordinate is increased to more than the corresponding
       upper-right coordinate (this can only happen when <replaceable>r</>
       &lt; 0) than both coordinates are set to their average.
       If <replaceable>n</> is greater than the number of defined dimensions
       and the cube is being enlarged (<replaceable>r</> &gt; 0), then extra
       dimensions are added to make <replaceable>n</> altogether;
       0 is used as the initial value for the extra coordinates.
       This function is useful for creating bounding boxes around a point for
       searching for nearby points.
      </entry>
      <entry>
       <literal>cube_enlarge('(1,2),(3,4)', 0.5, 3) ==
        '(0.5,1.5,-0.5),(3.5,4.5,0.5)'</>
      </entry>
     </row>
____________________________________________________________________________-->
     <row>
      <entry><literal>cube_enlarge(c cube, r double, n integer)</literal></entry>
      <entry><type>cube</type></entry>
      <entry>用一个指定的半径<replaceable>r</replaceable>在至少<replaceable>n</replaceable>个维度上增加立方体的尺寸。如果该半径是负值，则该立方体会收缩。这有助于围绕一个点创建一个外包盒来搜索附近点。所有已定义的维度都会按照半径<replaceable>r</replaceable>被改变。左下坐标按照<replaceable>r</replaceable>被减小并且右上坐标按照<replaceable>r</replaceable>被增加。如果一个左下坐标被增加得超过对应的右上坐标（这只会发生在<replaceable>r</replaceable>&lt; 0 时），则两个坐标会被设置为它们的均值。如果<replaceable>n</replaceable>大于已定义的维度数并且该立方体被增加（<replaceable>r</replaceable> &gt;= 0）， 则额外的维度会被加入以让维度数达到<replaceable>n</replaceable>，对于额外的坐标将使用 0 作为初始值。这个函数可用来创建围绕一个点的外包盒以搜索临近点。
      </entry>
      <entry>
       <literal>cube_enlarge('(1,2),(3,4)', 0.5, 3) ==
        '(0.5,1.5,-0.5),(3.5,4.5,0.5)'</literal>
      </entry>
     </row>
    </tbody>
   </tgroup>
  </table>
 </sect2>

 <sect2>
<!--==========================orignal english content==========================
  <title>Defaults</title>
____________________________________________________________________________-->
  <title>默认值</title>

<!--==========================orignal english content==========================
  <para>
   I believe this union:
  </para>
____________________________________________________________________________-->
  <para>
   我相信这个并：
  </para>
<!--==========================orignal english content==========================
<programlisting>
select cube_union('(0,5,2),(2,3,1)', '0');
cube_union
-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-
(0, 0, 0),(2, 5, 2)
(1 row)
</programlisting>
____________________________________________________________________________-->
<programlisting>
select cube_union('(0,5,2),(2,3,1)', '0');
cube_union
-------------------
(0, 0, 0),(2, 5, 2)
(1 row)
</programlisting>

<!--==========================orignal english content==========================
   <para>
    does not contradict common sense, neither does the intersection
   </para>
____________________________________________________________________________-->
   <para>
    不会与常识矛盾，下面的交也不会
   </para>

<!--==========================orignal english content==========================
<programlisting>
select cube_inter('(0,-1),(1,1)', '(-2),(2)');
cube_inter
-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-
(0, 0),(1, 0)
(1 row)
</programlisting>
____________________________________________________________________________-->
<programlisting>
select cube_inter('(0,-1),(1,1)', '(-2),(2)');
cube_inter
-------------
(0, 0),(1, 0)
(1 row)
</programlisting>

<!--==========================orignal english content==========================
   <para>
    In all binary operations on differently-dimensioned cubes, I assume the
    lower-dimensional one to be a Cartesian projection, i. e., having zeroes
    in place of coordinates omitted in the string representation. The above
    examples are equivalent to:
   </para>
____________________________________________________________________________-->
   <para>
    在所有不同维度立方体的二元操作中，我假定低纬度的那一个要做笛卡尔投影，即为字符串表示中被省略的坐标取零。上面的例子等同于：
   </para>

<!--==========================orignal english content==========================
<programlisting>
cube_union('(0,5,2),(2,3,1)','(0,0,0),(0,0,0)');
cube_inter('(0,-1),(1,1)','(-2,0),(2,0)');
</programlisting>
____________________________________________________________________________-->
<programlisting>
cube_union('(0,5,2),(2,3,1)','(0,0,0),(0,0,0)');
cube_inter('(0,-1),(1,1)','(-2,0),(2,0)');
</programlisting>

<!--==========================orignal english content==========================
   <para>
    The following containment predicate uses the point syntax,
    while in fact the second argument is internally represented by a box.
    This syntax makes it unnecessary to define a separate point type
    and functions for (box,point) predicates.
   </para>
____________________________________________________________________________-->
   <para>
    下列包含谓词使用点语法，不过实际上第二个参数在内部被表示为一个盒子。这种语法让我们不必定义一种单独的点类型以及用于（盒子, 点）谓词的函数。
   </para>

<!--==========================orignal english content==========================
<programlisting>
select cube_contains('(0,0),(1,1)', '0.5,0.5');
cube_contains
-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;
t
(1 row)
</programlisting>
____________________________________________________________________________-->
<programlisting>
select cube_contains('(0,0),(1,1)', '0.5,0.5');
cube_contains
--------------
t
(1 row)
</programlisting>
 </sect2>

 <sect2>
<!--==========================orignal english content==========================
  <title>Notes</title>
____________________________________________________________________________-->
  <title>注解</title>

<!--==========================orignal english content==========================
  <para>
   For examples of usage, see the regression test <filename>sql/cube.sql</>.
  </para>
____________________________________________________________________________-->
  <para>
   用法的例子可见回归测试<filename>sql/cube.sql</filename>。
  </para>

<!--==========================orignal english content==========================
  <para>
   To make it harder for people to break things, there
   is a limit of 100 on the number of dimensions of cubes. This is set
   in <filename>cubedata.h</> if you need something bigger.
  </para>
____________________________________________________________________________-->
  <para>
   为了不容易出问题，对于立方体的维度数有 100 的限制。如果你想要更大的立方体，可以在<filename>cubedata.h</filename>中修改。
  </para>
 </sect2>

 <sect2>
<!--==========================orignal english content==========================
  <title>Credits</title>
____________________________________________________________________________-->
  <title>工作人员</title>

<!--==========================orignal english content==========================
  <para>
   Original author: Gene Selkov, Jr. <email>selkovjr@mcs.anl.gov</email>,
   Mathematics and Computer Science Division, Argonne National Laboratory.
  </para>
____________________________________________________________________________-->
  <para>
   原作者：Gene Selkov, Jr. <email>selkovjr@mcs.anl.gov</email>，数学与计算机科学部，阿尔贡国家实验室。
  </para>

<!--==========================orignal english content==========================
  <para>
   My thanks are primarily to Prof. Joe Hellerstein
   (<ulink url="http://db.cs.berkeley.edu/jmh/"></ulink>) for elucidating the
   gist of the GiST (<ulink url="http://gist.cs.berkeley.edu/"></ulink>), and
   to his former student Andy Dong for his example written for Illustra.
   I am also grateful to all Postgres developers, present and past, for
   enabling myself to create my own world and live undisturbed in it. And I
   would like to acknowledge my gratitude to Argonne Lab and to the
   U.S. Department of Energy for the years of faithful support of my database
   research.
  </para>
____________________________________________________________________________-->
  <para>
   我的感谢主要要献给 Joe Hellerstein 教授（<ulink url="http://db.cs.berkeley.edu/jmh/"></ulink>），他阐明了 GiST （<ulink url="http://gist.cs.berkeley.edu/"></ulink>），还要送给他以前的学生 Andy Dong，他为 Illustra 编写了例子。我也对所有的 Postgres 开发者（现在的和以前的）心存感激，他们让我能够创造自己的世界并且宁静地生活在其中。我也要感谢阿尔贡实验室和美国能源局对我多年数据库研究的支持。
  </para>

<!--==========================orignal english content==========================
  <para>
   Minor updates to this package were made by Bruno Wolff III
   <email>bruno@wolff.to</email> in August/September of 2002. These include
   changing the precision from single precision to double precision and adding
   some new functions.
  </para>
____________________________________________________________________________-->
  <para>
   这个包的小更新由 Bruno Wolff III <email>bruno@wolff.to</email>于 2002 年 8/9 月完成。这些修改包括将精度从单精度改为双精度以及增加了一些新的函数。
  </para>

<!--==========================orignal english content==========================
  <para>
   Additional updates were made by Joshua Reich <email>josh@root.net</email> in
   July 2006. These include <literal>cube(float8[], float8[])</literal> and
   cleaning up the code to use the V1 call protocol instead of the deprecated
   V0 protocol.
  </para>
____________________________________________________________________________-->
  <para>
   额外的更新由 Joshua Reich <email>josh@root.net</email> 在 2006 年 7 月做出。其中包括<literal>cube(float8[], float8[])</literal>并且将代码从废弃的 V0 协议改到 V1 调用协议。
  </para>
 </sect2>

</sect1>
