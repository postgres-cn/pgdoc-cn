<!-- doc/src/sgml/btree-gist.sgml -->

<sect1 id="btree-gist" xreflabel="btree_gist">
<!--==========================orignal english content==========================
 <title>btree_gist</title>
____________________________________________________________________________-->
 <title>btree_gist</title>

<!--==========================orignal english content==========================
 <indexterm zone="btree-gist">
  <primary>btree_gist</primary>
 </indexterm>
____________________________________________________________________________-->
 <indexterm zone="btree-gist">
  <primary>btree_gist</primary>
 </indexterm>

<!--==========================orignal english content==========================
 <para>
  <filename>btree_gist</> provides GiST index operator classes that
  implement B-tree equivalent behavior for the data types
  <type>int2</>, <type>int4</>, <type>int8</>, <type>float4</>,
  <type>float8</>, <type>numeric</>, <type>timestamp with time zone</>,
  <type>timestamp without time zone</>, <type>time with time zone</>,
  <type>time without time zone</>, <type>date</>, <type>interval</>,
  <type>oid</>, <type>money</>, <type>char</>,
  <type>varchar</>, <type>text</>, <type>bytea</>, <type>bit</>,
  <type>varbit</>, <type>macaddr</>, <type>macaddr8</>, <type>inet</>,
  <type>cidr</>, <type>uuid</>, and all <type>enum</> types.
 </para>
____________________________________________________________________________-->
 <para>
  <filename>btree_gist</filename>为数据类型
  <type>int2</type>、<type>int4</type>、<type>int8</type>、<type>float4</type>、
  <type>float8</type>、<type>numeric</type>、<type>timestamp with time zone</type>、
  <type>timestamp without time zone</type>、<type>time with time zone</type>、
  <type>time without time zone</type>、<type>date</type>、<type>interval</type>、
  <type>oid</type>、<type>money</type>、<type>char</type>、
  <type>varchar</type>、<type>text</type>、<type>bytea</type>、<type>bit</type>、
  <type>varbit</type>、<type>macaddr</type>、<type>macaddr8</type>、
  <type>inet</type>、<type>cidr</type>、<type>uuid</type>和所有<type>enum</type>
  类型提供了实现 B 树等效行为的 GiST 索引操作符类。
 </para>

<!--==========================orignal english content==========================
 <para>
  In general, these operator classes will not outperform the equivalent
  standard B-tree index methods, and they lack one major feature of the
  standard B-tree code: the ability to enforce uniqueness.  However,
  they provide some other features that are not available with a B-tree
  index, as described below.  Also, these operator classes are useful
  when a multicolumn GiST index is needed, wherein some of the columns
  are of data types that are only indexable with GiST but other columns
  are just simple data types.  Lastly, these operator classes are useful for
  GiST testing and as a base for developing other GiST operator classes.
 </para>
____________________________________________________________________________-->
 <para>
  通常，这些操作符类不会比等效的标准 B 树索引方法更好，并且它们缺少标准 B 树代码的一个主要特性：强制一致性的能力。但是，如下文所述，它们提供了在一个 B 树索引中没有的一些其他特性。另外，当需要一个多列 GiST 索引，并且其某些列的数据类型只在 GiST 中是可索引的而其他列是简单数据类型时，这些操作符类就有用了。最后，这些操作符可以用于 GiST 测试以及作为开发其他 GiST 操作符类的基础。
 </para>

<!--==========================orignal english content==========================
 <para>
  In addition to the typical B-tree search operators, <filename>btree_gist</>
  also provides index support for <literal>&lt;&gt;</literal> (<quote>not
  equals</quote>). This may be useful in combination with an
  <link linkend="SQL-CREATETABLE-EXCLUDE">exclusion constraint</link>,
  as described below.
 </para>
____________________________________________________________________________-->
 <para>
  除了典型的 B 树搜索操作符之外，<filename>btree_gist</filename>也为<literal>&lt;&gt;</literal>（<quote>不等于</quote>）提供了索引支持。这可能与下文描述的<link linkend="SQL-CREATETABLE-EXCLUDE">排他约束</link>组合在一起产生作用。
 </para>

<!--==========================orignal english content==========================
 <para>
  Also, for data types for which there is a natural distance metric,
  <filename>btree_gist</> defines a distance operator <literal>&lt;-&gt;</>,
  and provides GiST index support for nearest-neighbor searches using
  this operator.  Distance operators are provided for
  <type>int2</>, <type>int4</>, <type>int8</>, <type>float4</>,
  <type>float8</>, <type>timestamp with time zone</>,
  <type>timestamp without time zone</>,
  <type>time without time zone</>, <type>date</>, <type>interval</>,
  <type>oid</>, and <type>money</>.
 </para>
____________________________________________________________________________-->
 <para>
  另外，对于那些具有自然距离度量的数据类型，<filename>btree_gist</filename>定义了一个距离操作符<literal>&lt;-&gt;</literal>，并且为使用这个操作符的最近邻搜索提供了 GiST 索引支持。距离操作符还提供给了：<type>int2</type>、<type>int4</type>、 <type>int8</type>、<type>float4</type>、
  <type>float8</type>、<type>timestamp with time zone</type>、
  <type>timestamp without time zone</type>、
  <type>time without time zone</type>、<type>date</type>、<type>interval</type>、
  <type>oid</type>和<type>money</type>。
 </para>

 <sect2>
<!--==========================orignal english content==========================
  <title>Example Usage</title>
____________________________________________________________________________-->
  <title>用法示例</title>

<!--==========================orignal english content==========================
  <para>
   Simple example using <literal>btree_gist</literal> instead of <literal>btree</literal>:
  </para>
____________________________________________________________________________-->
  <para>
   使用<literal>btree_gist</literal>代替<literal>btree</literal>的简单例子：
  </para>

<!--==========================orignal english content==========================
<programlisting>
CREATE TABLE test (a int4);
-&minus; create index
CREATE INDEX testidx ON test USING GIST (a);
-&minus; query
SELECT * FROM test WHERE a &lt; 10;
-&minus; nearest-neighbor search: find the ten entries closest to "42"
SELECT *, a &lt;-&gt; 42 AS dist FROM test ORDER BY a &lt;-&gt; 42 LIMIT 10;
</programlisting>
____________________________________________________________________________-->
<programlisting>
CREATE TABLE test (a int4);
-- create index
CREATE INDEX testidx ON test USING GIST (a);
-- query
SELECT * FROM test WHERE a &lt; 10;
-- nearest-neighbor search: find the ten entries closest to "42"
SELECT *, a &lt;-&gt; 42 AS dist FROM test ORDER BY a &lt;-&gt; 42 LIMIT 10;
</programlisting>

<!--==========================orignal english content==========================
  <para>
   Use an <link linkend="SQL-CREATETABLE-EXCLUDE">exclusion
   constraint</link> to enforce the rule that a cage at a zoo
   can contain only one kind of animal:
  </para>
____________________________________________________________________________-->
  <para>
   使用一个<link linkend="SQL-CREATETABLE-EXCLUDE">排他约束</link>来强制规则：一个动物园里的一个笼子只能装一种动物：
  </para>

<!--==========================orignal english content==========================
<programlisting>
=&gt; CREATE TABLE zoo (
  cage   INTEGER,
  animal TEXT,
  EXCLUDE USING GIST (cage WITH =, animal WITH &lt;&gt;)
);

=&gt; INSERT INTO zoo VALUES(123, 'zebra');
INSERT 0 1
=&gt; INSERT INTO zoo VALUES(123, 'zebra');
INSERT 0 1
=&gt; INSERT INTO zoo VALUES(123, 'lion');
ERROR:  conflicting key value violates exclusion constraint "zoo_cage_animal_excl"
DETAIL:  Key (cage, animal)=(123, lion) conflicts with existing key (cage, animal)=(123, zebra).
=&gt; INSERT INTO zoo VALUES(124, 'lion');
INSERT 0 1
</programlisting>
____________________________________________________________________________-->
<programlisting>
=&gt; CREATE TABLE zoo (
  cage   INTEGER,
  animal TEXT,
  EXCLUDE USING GIST (cage WITH =, animal WITH &lt;&gt;)
);

=&gt; INSERT INTO zoo VALUES(123, 'zebra');
INSERT 0 1
=&gt; INSERT INTO zoo VALUES(123, 'zebra');
INSERT 0 1
=&gt; INSERT INTO zoo VALUES(123, 'lion');
ERROR:  conflicting key value violates exclusion constraint "zoo_cage_animal_excl"
DETAIL:  Key (cage, animal)=(123, lion) conflicts with existing key (cage, animal)=(123, zebra).
=&gt; INSERT INTO zoo VALUES(124, 'lion');
INSERT 0 1
</programlisting>

 </sect2>

 <sect2>
<!--==========================orignal english content==========================
  <title>Authors</title>
____________________________________________________________________________-->
  <title>作者</title>

<!--==========================orignal english content==========================
  <para>
   Teodor Sigaev (<email>teodor@stack.net</email>),
   Oleg Bartunov (<email>oleg@sai.msu.su</email>),
   Janko Richter (<email>jankorichter@yahoo.de</email>), and
   Paul Jungwirth (<email>pj@illuminatedcomputing.com</email>).  See
   <ulink url="http://www.sai.msu.su/~megera/postgres/gist/"></ulink>
   for additional information.
  </para>
____________________________________________________________________________-->
  <para>
   Teodor Sigaev（<email>teodor@stack.net</email>）、
   Oleg Bartunov (<email>oleg@sai.msu.su</email>)、
   Janko Richter (<email>jankorichter@yahoo.de</email>)和
   Paul Jungwirth (<email>pj@illuminatedcomputing.com</email>)。参阅
   <ulink url="http://www.sai.msu.su/~megera/postgres/gist/"></ulink>。
  </para>

 </sect2>

</sect1>
