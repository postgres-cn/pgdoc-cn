<!-- doc/src/sgml/sourcerepo.sgml -->

<appendix id="sourcerepo">
<!--==========================orignal english content==========================
 <title>The Source Code Repository</title>
____________________________________________________________________________-->
 <title>源代码仓库</title>

<!--==========================orignal english content==========================
 <para>
  The <productname>PostgreSQL</productname> source code is stored and managed
  using the <productname>Git</productname> version control system. A public
  mirror of the master repository is available; it is updated within a minute
  of any change to the master repository.
 </para>
____________________________________________________________________________-->
 <para>
  <productname>PostgreSQL</productname>源代码使用<productname>Git</productname>版本控制系统存储和管理。有一个主仓库的公共镜像可用，它每分钟都会根据主仓库的任何改变而更新。
 </para>

<!--==========================orignal english content==========================
 <para>
  Our wiki, <ulink
  url="https://wiki.postgresql.org/wiki/Working_with_Git"></ulink>,
  has some discussion on working with Git.
 </para>
____________________________________________________________________________-->
 <para>
  我们的维基（<ulink url="https://wiki.postgresql.org/wiki/Working_with_Git"></ulink>）上有使用 Git 工作的一些讨论。
 </para>

<!--==========================orignal english content==========================
  <para>
   Note that building <productname>PostgreSQL</productname> from the source
   repository requires reasonably up-to-date versions of <application>bison</>,
   <application>flex</>, and <application>Perl</>. These tools are not needed
   to build from a distribution tarball, because the files that these tools
   are used to build are included in the tarball.  Other tool requirements
   are the same as shown in <xref linkend="install-requirements">.
  </para>
____________________________________________________________________________-->
  <para>
   注意从源代码仓库编译<productname>PostgreSQL</productname>要求合理的最新版本的
   <application>bison</application>、<application>flex</application>和<application>Perl</application>。
   在从一个发布的 tarball 中编译时不需要这些工具，因为它们需要去编译的文件已经被包括在 tarball 中。
   其他工具要求和<xref linkend="installation"/>中显示的一样。
  </para>

 <sect1 id="git">
<!--==========================orignal english content==========================
  <title>Getting The Source via <productname>Git</></title>
____________________________________________________________________________-->
  <title>通过<productname>Git</productname>得到源码</title>

<!--==========================orignal english content==========================
  <para>
   With <productname>Git</> you will make a copy of the entire code repository
   on your local machine, so you will have access to all history and branches
   offline. This is the fastest and most flexible way to develop or test
   patches.
  </para>
____________________________________________________________________________-->
  <para>
   使用<productname>Git</productname>你将可以在你的本地机器上创建一份整个代码库的拷贝，这样你将能够离线访问所有历史和分支。这是开发或测试补丁最快也是最灵活的方式。
  </para>

  <procedure>
<!--==========================orignal english content==========================
   <title>Git</title>
____________________________________________________________________________-->
   <title>Git</title>

   <step>
<!--==========================orignal english content==========================
    <para>
     You will need an installed version of <productname>Git</application>, which you can
     get from <ulink url="https://git-scm.com"></ulink>. Many systems already
     have a recent version of <application>Git</application> installed by default, or
     available in their package distribution system.
    </para>
____________________________________________________________________________-->
    <para>
     你将需要一个已安装的<productname>Git</productname>版本，你可以从<ulink url="https://git-scm.com"></ulink>得到。很多系统已经默认安装了一个最近版本的<application>Git</application>，或者可以从它们的包发布系统中找到。
    </para>
   </step>

   <step>
<!--==========================orignal english content==========================
    <para>
     To begin using the Git repository, make a clone of the official mirror:

<programlisting>
git clone https://git.postgresql.org/git/postgresql.git
</programlisting>

     This will copy the full repository to your local machine, so it may take
     a while to complete, especially if you have a slow Internet connection.
     The files will be placed in a new subdirectory <filename>postgresql</> of
     your current directory.
    </para>
____________________________________________________________________________-->
    <para>
     要开始使用 Git 仓库，先做一个官方镜像的克隆：

<programlisting>
git clone https://git.postgresql.org/git/postgresql.git
</programlisting>

     这将复制整个仓库到你的本地机器上，这样它会花上一会儿来完成（特别是如果你使用的互联网连接速度较慢）。文件将被放在你当前目录下的一个新子目录<filename>postgresql</filename>中。
    </para>

<!--==========================orignal english content==========================
    <para>
     The Git mirror can also be reached via the Git protocol, Just change the URL
     prefix to <literal>git</>, as in:

<programlisting>
git clone https://git.postgresql.org/git/postgresql.git
</programlisting>
    </para>
____________________________________________________________________________-->
    <para>
     Git 镜像也可以通过 Git 协议访问。只需要将 URL 前缀改成<literal>git</literal>：

<programlisting>
git clone https://git.postgresql.org/git/postgresql.git
</programlisting>

    </para>
   </step>

   <step>
<!--==========================orignal english content==========================
    <para>
     Whenever you want to get the latest updates in the system, <command>cd</>
     into the repository, and run:

<programlisting>
git fetch
</programlisting>
    </para>
____________________________________________________________________________-->
    <para>
     不管什么时候你希望得到系统的最新更新，<command>cd</command>进入仓库并且运行：

<programlisting>
git fetch
</programlisting>
    </para>
   </step>
  </procedure>

<!--==========================orignal english content==========================
  <para>
   <productname>Git</> can do a lot more things than just fetch the source. For
   more information, consult the <productname>Git</> man pages, or see the
   website at <ulink url="https://git-scm.com"></>.
  </para>
____________________________________________________________________________-->
  <para>
   除了取得源码，<productname>Git</productname>可以做更多事情。要了解更多，请参考<productname>Git</productname>手册页，或者访问网站<ulink url="https://git-scm.com"></ulink>。
  </para>
 </sect1>

</appendix>
