<!-- doc/src/sgml/docguide.sgml -->

<appendix id="docguide">
<!--==========================orignal english content==========================
 <title>Documentation</title>
____________________________________________________________________________-->
 <title>文档</title>

<!--==========================orignal english content==========================
 <para>
  <productname>PostgreSQL</productname> has four primary documentation
  formats:

  <itemizedlist>
   <listitem>
    <para>
     Plain text, for pre-installation information
    </para>
   </listitem>
   <listitem>
    <para>
     <acronym>HTML</acronym>, for on-line browsing and reference
    </para>
   </listitem>
   <listitem>
    <para>
     PDF, for printing
    </para>
   </listitem>
   <listitem>
    <para>
     man pages, for quick reference.
    </para>
   </listitem>
  </itemizedlist>

  Additionally, a number of plain-text <filename>README</filename> files can
  be found throughout the <productname>PostgreSQL</productname> source tree,
  documenting various implementation issues.
 </para>
____________________________________________________________________________-->
 <para>
  <productname>PostgreSQL</productname>有四种主要的文档格式：

  <itemizedlist>
   <listitem>
    <para>
     纯文本，用于安装前信息
    </para>
   </listitem>
   <listitem>
    <para>
     <acronym>HTML</acronym>，用于在线浏览和参考
    </para>
   </listitem>
   <listitem>
    <para>
     PDF，用于打印
    </para>
   </listitem>
   <listitem>
    <para>
     手册页，用于快速参考
    </para>
   </listitem>
  </itemizedlist>

  另外，在<productname>PostgreSQL</productname>源码树里面还有许多纯文本风格的<filename>README</filename>文件，它们记录各种实现问题。
 </para>

<!--==========================orignal english content==========================
 <para>
  <acronym>HTML</acronym> documentation and man pages are part of a
  standard distribution and are installed by default.  PDF
  format documentation is available separately for
  download.
 </para>
____________________________________________________________________________-->
 <para>
  <acronym>HTML</acronym>文档和手册页是标准发布的一部分并且被默认安装。PDF格式的文档可以独立地下载。
 </para>

 <sect1 id="docguide-docbook">
<!--==========================orignal english content==========================
  <title>DocBook</title>
____________________________________________________________________________-->
  <title>DocBook</title>
<!--==========================orignal english content==========================
  <para>
   The documentation sources are written in
   <firstterm>DocBook</firstterm>, which is a markup language
   defined in <acronym>XML</acronym>.  In what
   follows, the terms DocBook and <acronym>XML</acronym> are both
   used, but technically they are not interchangeable.
  </para>
____________________________________________________________________________-->
  <para>
   文档源码是用<firstterm>DocBook</firstterm>编写的，它是一种用<acronym>XML</acronym>定义的标记语言。在下文中，虽然术语 DocBook 和<acronym>XML</acronym>都被使用，但在技术上它们是不能互换的。
  </para>

<!--==========================orignal english content==========================
  <para>
  <productname>DocBook</productname> allows an author to specify the
   structure and content of a technical document without worrying
   about presentation details.  A document style defines how that
   content is rendered into one of several final forms.  DocBook is
   maintained by the <ulink url="https://www.oasis-open.org">
   OASIS group</ulink>.  The <ulink url="https://www.oasis-open.org/docbook/">
   official DocBook site</ulink> has good introductory and reference documentation and
   a complete O'Reilly book for your online reading pleasure.  The
   <ulink url="http://newbiedoc.sourceforge.net/metadoc/docbook-guide.html">
   NewbieDoc Docbook Guide</ulink> is very helpful for beginners.
   The <ulink url="https://www.freebsd.org/docproj/docproj.html">
   FreeBSD Documentation Project</ulink> also uses DocBook and has some good
   information, including a number of style guidelines that might be
   worth considering.
  </para>
____________________________________________________________________________-->
  <para>
  <productname>DocBook</productname>允许作者指定一份技术文档的结构和内容，而不需要关心表现的细节。一份文档风格定义其内容如何呈现为几种最终形式之一。DocBook 由<ulink url="https://www.oasis-open.org">OASIS group</ulink>工作组维护。<ulink url="https://www.oasis-open.org/docbook/">官方 DocBook 站点</ulink>有很好的介绍和参考文档以及一整本 O'Reilly 的书可供你在线阅读。<ulink url="http://newbiedoc.sourceforge.net/metadoc/docbook-guide.html">NewbieDoc Docbook Guide</ulink>非常适合初学者。 <ulink url="https://www.freebsd.org/docproj/docproj.html">FreeBSD 文档项目</ulink>也使用 DocBook 并且有一些很好 的信息，包括一些很值得考虑的风格参考。
  </para>
 </sect1>


 <sect1 id="docguide-toolsets">
<!--==========================orignal english content==========================
  <title>Tool Sets</title>
____________________________________________________________________________-->
  <title>工具集</title>

<!--==========================orignal english content==========================
  <para>
   The following tools are used to process the documentation.  Some
   might be optional, as noted.

   <variablelist>
    <varlistentry>
     <term><ulink url="https://www.oasis-open.org/docbook/">DocBook DTD</ulink></term>
     <listitem>
      <para>
       This is the definition of DocBook itself.  We currently use version
       4.2; you cannot use later or earlier versions.  You need
       the <acronym>XML</acronym> variant of the DocBook DTD, not
       the <acronym>SGML</acronym> variant.
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><ulink url="https://github.com/docbook/wiki/wiki/DocBookXslStylesheets">DocBook XSL Stylesheets</ulink></term>
     <listitem>
      <para>
       These contain the processing instructions for converting the
       DocBook sources to other formats, such as
       <acronym>HTML</acronym>.
      </para>

      <para>
       The minimum required version is currently 1.77.0, but it is recommended
       to use the latest available version for best results.
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><ulink url="http://xmlsoft.org/">Libxml2</ulink> for <command>xmllint</command></term>
     <listitem>
      <para>
       This library and the <command>xmllint</command> tool it contains are
       used for processing XML.  Many developers will already
       have <application>Libxml2</application> installed, because it is also
       used when building the PostgreSQL code.  Note, however,
       that <command>xmllint</command> might need to be installed from a
       separate subpackage.
      </para>
     </listitem>
     </varlistentry>

    <varlistentry>
     <term><ulink url="http://xmlsoft.org/XSLT/">Libxslt</ulink> for <command>xsltproc</command></term>
     <listitem>
      <para>
       <command>xsltproc</command> is an XSLT processor, that is, a program to
       convert XML to other formats using XSLT stylesheets.
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><ulink url="https://xmlgraphics.apache.org/fop/">FOP</ulink></term>
     <listitem>
      <para>
       This is a program for converting, among other things, XML to PDF.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
____________________________________________________________________________-->
  <para>
   下面的工具用于处理此文档。如标注所示，有些工具可能是可选的。

   <variablelist>
    <varlistentry>
     <term><ulink url="https://www.oasis-open.org/docbook/">DocBook DTD</ulink></term>
     <listitem>
      <para>
       这是 DocBook 本身的定义。我们目前使用版本 4.2；你不能使用更新或者更早的版本。你需要 DocBook DTD 的<acronym>XML</acronym>变体，而不是<acronym>SGML</acronym>变体。
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><ulink url="https://github.com/docbook/wiki/wiki/DocBookXslStylesheets">DocBook XSL Stylesheets</ulink></term>
     <listitem>
      <para>
       这些包含了将 DocBook 源码转换到其他格式（如<acronym>HTML</acronym>）所要用的处理指令。
      </para>

      <para>
       最低要求的版本当前是 1.77.0，但推荐使用最新可用的版本来得到最好的结果。
      </para>
     </listitem>
    </varlistentry>
    
    <varlistentry>
     <term><command>xmllint</command>的<ulink url="http://xmlsoft.org/">Libxml2</ulink></term>
     <listitem>
      <para>
       这个库和它所包含的<command>xmllint</command>工具被用来处理 XML。
       很多开发者将已经安装了<application>Libxml2</application>，因为在编译
       PostgreSQL 代码时就已经用到它了。不过要注意，可能需要从一个独立的包中
       安装<command>xmllint</command>。
      </para>
     </listitem>
     </varlistentry>

    <varlistentry>
     <term><command>xsltproc</command>的<ulink url="http://xmlsoft.org/XSLT/">Libxslt</ulink></term>
     <listitem>
      <para>
       <command>xsltproc</command>是一个XSLT处理器，也就是说它是一个使用XSLT将XML转换成其他格式的程序。
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><ulink url="https://xmlgraphics.apache.org/fop/">FOP</ulink></term>
     <listitem>
      <para>
       这是一个在其他东西中将XML转换为PDF的程序。
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>

<!--==========================orignal english content==========================
  <para>
   We have documented experience with several installation methods for
   the various tools that are needed to process the documentation.
   These will be described below.  There might be some other packaged
   distributions for these tools. Please report package status to the
   documentation mailing list, and we will include that information
   here.
  </para>
____________________________________________________________________________-->
  <para>
   我们已经在文档中记录了几种安装处理此文档所需的各种工具的方法。它们将在下文中描述。也可能有这些工具的其他打包发布。请向文档邮件列表报告那些包的状态，我们就会在这里包括它们的信息。
  </para>

<!--==========================orignal english content==========================
  <para>
   You can get away with not installing DocBook XML and the DocBook XSLT
   stylesheets locally, because the required files will be downloaded from the
   Internet and cached locally.  This may in fact be the preferred solution if
   your operating system packages provide only an old version of especially
   the stylesheets or if no packages are available at all.  See
   the <option>-&minus;nonet</option> option for <command>xmllint</command>
   and <command>xsltproc</command> for more information.
  </para>
____________________________________________________________________________-->
  <para>
   你可以在本地不安装DocBook XML和DocBook XSLT样式表的情况下开始工作，因为所需的文件将从Internet下载下来并且缓存在本地。如果你的操作系统包仅提供了旧版本的样式表或者根本就没有所需的包，那么这种方式实际上是最好的解决方案。更多信息请见<command>xmllint</command>和<command>xsltproc</command>的<option>--nonet</option>选项。
  </para>

  <sect2>
<!--==========================orignal english content==========================
   <title>Installation on Fedora, RHEL, and Derivatives</title>
____________________________________________________________________________-->
   <title>在 Fedora、RHEL 和衍生品上安装</title>
<!--==========================orignal english content==========================
   <para>
    To install the required packages, use:
<programlisting>
yum install docbook-dtds docbook-style-xsl fop libxslt
</programlisting>
   </para>
____________________________________________________________________________-->
   <para>
    要安装所需的包，可使用：
<programlisting>
yum install docbook-dtds docbook-style-xsl fop libxslt
</programlisting>
   </para>
  </sect2>

  <sect2>
<!--==========================orignal english content==========================
   <title>Installation on FreeBSD</title>
____________________________________________________________________________-->
   <title>在 FreeBSD 上安装</title>

<!--==========================orignal english content==========================
   <para>
    To install the required packages with <command>pkg</command>, use:
<programlisting>
pkg install docbook-xml docbook-xsl fop libxslt
</programlisting>
   </para>
____________________________________________________________________________-->
   <para>
    要用<command>pkg</command>安装所需的包，可以使用：
<programlisting>
pkg install docbook-xml docbook-xsl fop libxslt
</programlisting>
   </para>

<!--==========================orignal english content==========================
   <para>
    When building the documentation from the <filename>doc</filename>
    directory you'll need to use <command>gmake</command>, because the
    makefile provided is not suitable for FreeBSD's <command>make</command>.
   </para>
____________________________________________________________________________-->
   <para>
    在从<filename>doc</filename>目录构建文档时，你会需要用到<command>gmake</command>，因为所提供的makefile不适合于FreeBSD的<command>make</command>。
   </para>
  </sect2>

  <sect2>
<!--==========================orignal english content==========================
   <title>Debian Packages</title>
____________________________________________________________________________-->
   <title>Debian 包</title>

<!--==========================orignal english content==========================
   <para>
    There is a full set of packages of the documentation tools
    available for <productname>Debian GNU/Linux</productname>.
    To install, simply use:
<programlisting>
apt-get install docbook-xml docbook-xsl fop libxml2-utils xsltproc
</programlisting>
   </para>
____________________________________________________________________________-->
   <para>
    <productname>Debian GNU/Linux</productname>也有一整套可以用的文档工具包。要安装，只需简单地使用：
<programlisting>
apt-get install docbook-xml docbook-xsl fop libxml2-utils xsltproc
</programlisting>
   </para>
  </sect2>

  <sect2>
<!--==========================orignal english content==========================
   <title>macOS</title>
____________________________________________________________________________-->
   <title>macOS</title>

<!--==========================orignal english content==========================
   <para>
    On macOS, you can build the HTML and man documentation without installing
    anything extra.  If you want to build PDFs or want to install a local copy
    of DocBook, you can get those from your preferred package manager.
   </para>
____________________________________________________________________________-->
   <para>
    在macOS上，你可以不安装任何额外的东西就编译HTML和man文档。如果你想要编译PDF或者想要安装DocBook的本地拷贝，可以采用你喜欢的包管理器来得到它们。
   </para>

<!--==========================orignal english content==========================
   <para>
    If you use MacPorts, the following will get you set up:
<programlisting>
sudo port install docbook-xml-4.2 docbook-xsl fop
</programlisting>
    If you use Homebrew, use this:
<programlisting>
brew install docbook docbook-xsl fop
</programlisting>
   </para>
____________________________________________________________________________-->
   <para>
    如果使用MacPorts，下面的命令会帮你准备好一切：
<programlisting>
sudo port install docbook-xml-4.2 docbook-xsl fop
</programlisting>
    如果使用的是Homebrew，就用这个：
<programlisting>
brew install docbook docbook-xsl fop
</programlisting>
   </para>
  </sect2>

  <sect2 id="docguide-toolsets-configure">
<!--==========================orignal english content==========================
   <title>Detection by <command>configure</command></title>
____________________________________________________________________________-->
   <title>用<command>configure</command>检测</title>

<!--==========================orignal english content==========================
  <para>
   Before you can build the documentation you need to run the
   <filename>configure</filename> script as you would when building
   the <productname>PostgreSQL</productname> programs themselves.
   Check the output near the end of the run, it should look something
   like this:
<screen>
checking for xmllint... xmllint
checking for DocBook XML V4.2... yes
checking for dbtoepub... dbtoepub
checking for xsltproc... xsltproc
checking for fop... fop
</screen>
   If <filename>xmllint</filename> was not found then some of the following
   tests will be skipped.
  </para>
____________________________________________________________________________-->
  <para>
   在你能编译文档之前，你需要运行<filename>configure</filename>脚本，就像你在编译<productname>PostgreSQL</productname>程序本身时所作的那样。检查运行末尾附近的输出，应该看起来像这样：
<screen>
checking for xmllint... xmllint
checking for DocBook XML V4.2... yes
checking for dbtoepub... dbtoepub
checking for xsltproc... xsltproc
checking for fop... fop
</screen>
   如果没有找到<filename>xmllint</filename>，那么一些后续测试将被跳过。
  </para>

  </sect2>
 </sect1>

 <sect1 id="docguide-build">
<!--==========================orignal english content==========================
  <title>Building The Documentation</title>
____________________________________________________________________________-->
  <title>编译文档</title>

<!--==========================orignal english content==========================
  <para>
   Once you have everything set up, change to the directory
   <filename>doc/src/sgml</filename> and run one of the commands
   described in the following subsections to build the
   documentation. (Remember to use GNU make.)
  </para>
____________________________________________________________________________-->
  <para>
   一旦你把所有的东西都设置好以后，切换到<filename>doc/src/sgml</filename>目录，并且运行下面小节中介绍的命令之一就可以编译文档（记住使用 GNU make）。
  </para>

  <sect2>
<!--==========================orignal english content==========================
   <title>HTML</title>
____________________________________________________________________________-->
   <title>HTML</title>

<!--==========================orignal english content==========================
   <para>
    To build the <acronym>HTML</acronym> version of the documentation:
<screen>
<prompt>doc/src/sgml$ </prompt><userinput>make html</userinput>
</screen>
    This is also the default target.  The output appears in the
    subdirectory <filename>html</filename>.
   </para>
____________________________________________________________________________-->
   <para>
    要编译文档的<acronym>HTML</acronym>版本：
<screen>
<prompt>doc/src/sgml$ </prompt><userinput>make html</userinput>
</screen>
    这也是默认的目标。这个命令的输出将出现在子目录<filename>html</filename>中。
   </para>
   
<!--==========================orignal english content==========================
   <para>
    To produce HTML documentation with the stylesheet used on <ulink
    url="https://www.postgresql.org/docs/current/">postgresql.org</ulink> instead of the
    default simple style use:
<screen>
<prompt>doc/src/sgml$ </prompt><userinput>make STYLE=website html</userinput>
</screen>
   </para>
____________________________________________________________________________-->
   <para>
    要用<ulink
    url="https://www.postgresql.org/docs/current">postgresql.org</ulink>所使用的样式表
    而不是默认的简单样式生成 HTML 文档：
<screen>
<prompt>doc/src/sgml$ </prompt><userinput>make STYLE=website html</userinput>
</screen>
   </para>
  </sect2>

 <sect2>
<!--==========================orignal english content==========================
  <title>Manpages</title>
____________________________________________________________________________-->
  <title>手册页</title>

<!--==========================orignal english content==========================
  <para>
   We use the DocBook XSL stylesheets to
   convert <productname>DocBook</productname>
   <sgmltag>refentry</sgmltag> pages to *roff output suitable for man
   pages.  To create the man pages, use the command:
<screen>
<prompt>doc/src/sgml$ </prompt><userinput>make man</userinput>
</screen>
  </para>
____________________________________________________________________________-->
  <para>
   我们使用 DocBook XSL 样式表来把<productname>DocBook</productname>
   <sgmltag>refentry</sgmltag>页转换成适合于手册页的 *roff 输出。要创建手册页，使用命令：
<screen>
<prompt>doc/src/sgml$ </prompt><userinput>make man</userinput>
</screen>
  </para>
 </sect2>

  <sect2>
<!--==========================orignal english content==========================
   <title>PDF</title>
____________________________________________________________________________-->
   <title>PDF</title>

<!--==========================orignal english content==========================
   <para>
    To produce a PDF rendition of the documentation
    using <productname>FOP</productname>, you can use one of the following
    commands, depending on the preferred paper format:

    <itemizedlist>
     <listitem>
      <para>
       For A4 format:
<screen>
<prompt>doc/src/sgml$ </prompt><userinput>make postgres-A4.pdf</userinput>
</screen>
      </para>
     </listitem>

     <listitem>
      <para>
       For U.S. letter format:
<screen>
<prompt>doc/src/sgml$ </prompt><userinput>make postgres-US.pdf</userinput>
</screen>
      </para>
     </listitem>
    </itemizedlist>
   </para>
____________________________________________________________________________-->
   <para>
    要使用<productname>FOP</productname>产生文档的PDF版本，可以使用下列命令之一，取决于你喜欢的纸张格式：

    <itemizedlist>
     <listitem>
      <para>
       A4格式：
<screen>
<prompt>doc/src/sgml$ </prompt><userinput>make postgres-A4.pdf</userinput>
</screen>
      </para>
     </listitem>

     <listitem>
      <para>
       U.S.信纸格式：
<screen>
<prompt>doc/src/sgml$ </prompt><userinput>make postgres-US.pdf</userinput>
</screen>
      </para>
     </listitem>
    </itemizedlist>
   </para>

<!--==========================orignal english content==========================
   <para>
    Because the PostgreSQL documentation is fairly
    big, <productname>FOP</productname> will require a significant amount of
    memory.  Because of that, on some systems, the build will fail with a
    memory-related error message.  This can usually be fixed by configuring
    Java heap settings in the configuration
    file <filename>~/.foprc</filename>, for example:
<programlisting>
# FOP binary distribution
FOP_OPTS='-Xmx1500m'
# Debian
JAVA_ARGS='-Xmx1500m'
# Red Hat
ADDITIONAL_FLAGS='-Xmx1500m'
</programlisting>
    There is a minimum amount of memory that is required, and to some extent
    more memory appears to make things a bit faster.  On systems with very
    little memory (less than 1 GB), the build will either be very slow due to
    swapping or will not work at all.
   </para>
____________________________________________________________________________-->
   <para>
    因为PostgreSQL文档很大，<productname>FOP</productname>会要求可观的内存量。因此，在一些系统上，构建过程将会由于内存相关的错误而失败。通常可以通过在配置文件<filename>~/.foprc</filename>中配置Java的堆设置来解决这类问题，例如：
<programlisting>
# FOP binary distribution
FOP_OPTS='-Xmx1500m'
# Debian
JAVA_ARGS='-Xmx1500m'
# Red Hat
ADDITIONAL_FLAGS='-Xmx1500m'
</programlisting>
    这是所要求的最小内存量，当然更多的内存会让编译过程更快一些。在内存非常小（小于1GB）的系统上，编译过程会因为磁盘交换而非常慢或者根本就不工作。
   </para>

<!--==========================orignal english content==========================
   <para>
    Other XSL-FO processors can also be used manually, but the automated build
    process only supports FOP.
   </para>
____________________________________________________________________________-->
   <para>
    也可以手工使用其他XSL-FO处理器，但是自动编译过程仅支持FOP。
   </para>
  </sect2>

  <sect2>
<!--==========================orignal english content==========================
   <title>Plain Text Files</title>
____________________________________________________________________________-->
   <title>纯文本文件</title>

<!--==========================orignal english content==========================
   <para>
    The installation instructions are also distributed as plain text,
    in case they are needed in a situation where better reading tools
    are not available.  The <filename>INSTALL</filename> file
    corresponds to <xref linkend="installation"/>, with some minor
    changes to account for the different context.  To recreate the
    file, change to the directory <filename>doc/src/sgml</filename>
    and enter <userinput>make INSTALL</userinput>.
   </para>
____________________________________________________________________________-->
   <para>
    安装指导也被发布为纯文本，它们被用于那些没有好的阅读工具的情况。<filename>INSTALL</filename>文件对应于<xref linkend="installation"/>，但针对不同的环境做了小幅修改。要重建该文件，切换到目录<filename>doc/src/sgml</filename>并输入<userinput>make INSTALL</userinput>。
   </para>

<!--==========================orignal english content==========================
   <para>
    In the past, the release notes and regression testing instructions
    were also distributed as plain text, but this practice has been
    discontinued.
   </para>
____________________________________________________________________________-->
   <para>
    在过去，发行注记和回归测试指导也被作为纯文本发布，但是事实上已经没有这样做了。
   </para>
  </sect2>

  <sect2>
<!--==========================orignal english content==========================
   <title>Syntax Check</title>
____________________________________________________________________________-->
   <title>语法检查</title>

<!--==========================orignal english content==========================
   <para>
    Building the documentation can take very long.  But there is a
    method to just check the correct syntax of the documentation
    files, which only takes a few seconds:
<screen>
<prompt>doc/src/sgml$ </prompt><userinput>make check</userinput>
</screen>
   </para>
____________________________________________________________________________-->
   <para>
    便以文档可能会花很长时间。但是有办法只检查文档中的语法，这个过程只需要数秒：
<screen>
<prompt>doc/src/sgml$ </prompt><userinput>make check</userinput>
</screen>
   </para>
  </sect2>
 </sect1>


 <sect1 id="docguide-authoring">
<!--==========================orignal english content==========================
  <title>Documentation Authoring</title>
____________________________________________________________________________-->
  <title>文档创作</title>

<!--==========================orignal english content==========================
   <para>
    The documentation sources are most conveniently modified with an editor
    that has a mode for editing XML, and even more so if it has some awareness
    of XML schema languages so that it can know about
    <productname>DocBook</productname> syntax specifically.
   </para>
____________________________________________________________________________-->
   <para>
    文档的源码可以很方便地用具有XML编辑模式的编辑器来修改，而如果它们懂一些XML模式语言那就更好了，那样它们就能理解专门的<productname>DocBook</productname>语法。
   </para>

<!--==========================orignal english content==========================
   <para>
    Note that for historical reasons the documentation source files are named
    with an extension <filename>.sgml</filename> even though they are now XML
    files.  So you might need to adjust your editor configuration to set the
    correct mode.
   </para>
____________________________________________________________________________-->
   <para>
    注意由于历史原因，文档源文件被命名为以扩展名<filename>.sgml</filename>结尾，尽管它们现在都是XML文件。因此你可能需要调整你的编辑器配置来设置正确的模式。
   </para>

   <sect2>
<!--==========================orignal english content==========================
    <title>Emacs</title>
____________________________________________________________________________-->
    <title>Emacs</title>

<!--==========================orignal english content==========================
    <para>
     <productname>nXML Mode</productname>, which ships with
     <productname>Emacs</productname>, is the most common mode for editing
     <acronym>XML</acronym> documents with <productname>Emacs</productname>.
     It will allow you to use <application>Emacs</application> to insert tags
     and check markup consistency, and it supports
     <productname>DocBook</productname> out of the box.  Check the <ulink
     url="https://www.gnu.org/software/emacs/manual/html_mono/nxml-mode.html">
     nXML manual</ulink> for detailed documentation.
    </para>
____________________________________________________________________________-->
    <para>
     <productname>Emacs</productname>中自带的<productname>nXML Mode</productname>是用<productname>Emacs</productname>编辑<acronym>XML</acronym>文档最常用的模式。它允许用户使用<application>Emacs</application>插入标签并且检查标记的一致性，它还自带对<productname>DocBook</productname>的支持。详细的文档请参考<ulink url="https://www.gnu.org/software/emacs/manual/html_mono/nxml-mode.html">nXML manual</ulink>。
    </para>

<!--==========================orignal english content==========================
    <para>
     <filename>src/tools/editors/emacs.samples</filename> contains
     recommended settings for this mode.
    </para>
____________________________________________________________________________-->
    <para>
     <filename>src/tools/editors/emacs.samples</filename>包含了这种模式的推荐设置。
    </para>
   </sect2>
 </sect1>


 <sect1 id="docguide-style">
<!--==========================orignal english content==========================
  <title>Style Guide</title>
____________________________________________________________________________-->
  <title>样式指导</title>

  <sect2>
<!--==========================orignal english content==========================
   <title>Reference Pages</title>
____________________________________________________________________________-->
   <title>参考页</title>

<!--==========================orignal english content==========================
   <para>
    Reference pages should follow a standard layout.  This allows
    users to find the desired information more quickly, and it also
    encourages writers to document all relevant aspects of a command.
    Consistency is not only desired among
    <productname>PostgreSQL</productname> reference pages, but also
    with reference pages provided by the operating system and other
    packages.  Hence the following guidelines have been developed.
    They are for the most part consistent with similar guidelines
    established by various operating systems.
   </para>
____________________________________________________________________________-->
   <para>
    参考页应该遵循一种标准布局。这允许用户更快找到想要的信息，并且它也鼓励作者记录一个命令的所有相关方面。不止在<productname>PostgreSQL</productname>参考页中需要一致性，操作系统或其他包提供的参考页也需要。因此人们开发了下列方针。它们的大部分与由多个操作系统建立的类似方针保持一致。
   </para>

<!--==========================orignal english content==========================
   <para>
    Reference pages that describe executable commands should contain
    the following sections, in this order.  Sections that do not apply
    can be omitted.  Additional top-level sections should only be used
    in special circumstances; often that information belongs in the
    <quote>Usage</quote> section.

    <variablelist>
     <varlistentry>
      <term>Name</term>
      <listitem>
       <para>
        This section is generated automatically.  It contains the
        command name and a half-sentence summary of its functionality.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term>Synopsis</term>
      <listitem>
       <para>
        This section contains the syntax diagram of the command.  The
        synopsis should normally not list each command-line option;
        that is done below.  Instead, list the major components of the
        command line, such as where input and output files go.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term>Description</term>
      <listitem>
       <para>
        Several paragraphs explaining what the command does.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term>Options</term>
      <listitem>
       <para>
        A list describing each command-line option.  If there are a
        lot of options, subsections can be used.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term>Exit Status</term>
      <listitem>
       <para>
        If the program uses 0 for success and non-zero for failure,
        then you do not need to document it.  If there is a meaning
        behind the different non-zero exit codes, list them here.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term>Usage</term>
      <listitem>
       <para>
        Describe any sublanguage or run-time interface of the program.
        If the program is not interactive, this section can usually be
        omitted.  Otherwise, this section is a catch-all for
        describing run-time features.  Use subsections if appropriate.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term>Environment</term>
      <listitem>
       <para>
        List all environment variables that the program might use.
        Try to be complete; even seemingly trivial variables like
        <envar>SHELL</envar> might be of interest to the user.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term>Files</term>
      <listitem>
       <para>
        List any files that the program might access implicitly.  That
        is, do not list input and output files that were specified on
        the command line, but list configuration files, etc.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term>Diagnostics</term>
      <listitem>
       <para>
        Explain any unusual output that the program might create.
        Refrain from listing every possible error message.  This is a
        lot of work and has little use in practice.  But if, say, the
        error messages have a standard format that the user can parse,
        this would be the place to explain it.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term>Notes</term>
      <listitem>
       <para>
        Anything that doesn't fit elsewhere, but in particular bugs,
        implementation flaws, security considerations, compatibility
        issues.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term>Examples</term>
      <listitem>
       <para>
        Examples
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term>History</term>
      <listitem>
       <para>
        If there were some major milestones in the history of the
        program, they might be listed here.  Usually, this section can
        be omitted.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term>Author</term>
      <listitem>
       <para>
        Author (only used in the contrib section)
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term>See Also</term>
      <listitem>
       <para>
        Cross-references, listed in the following order: other
        <productname>PostgreSQL</productname> command reference pages,
        <productname>PostgreSQL</productname> SQL command reference
        pages, citation of <productname>PostgreSQL</productname>
        manuals, other reference pages (e.g., operating system, other
        packages), other documentation.  Items in the same group are
        listed alphabetically.
       </para>
      </listitem>
     </varlistentry>

    </variablelist>
   </para>
____________________________________________________________________________-->
   <para>
    描述可执行命令的参考页应该包含以下的小节，并且是按照介绍的顺序。不适用的小节可以被忽略。额外的顶层小节应该只被用在特殊的环境下；通常那些信息属于<quote>Usage</quote>小节。

    <variablelist>
     <varlistentry>
      <term>名称</term>
      <listitem>
       <para>
        这个小节是自动生成的。它包含命令名称和对其功能的一个半句话摘要。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term>概要</term>
      <listitem>
       <para>
        这个小节包含该命令的语法表。概要通常应该不列出每个命令行选项；那些东西由后续小节介绍。概要应该列出命令行的主要部分，比如输入和输出文件会到哪里去。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term>描述</term>
      <listitem>
       <para>
        解释命令干什么的几个段落。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term>选项</term>
      <listitem>
       <para>
        一个描述每一个命令行选项的列表。如果有很多选项，可以使用子节。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term>退出状态</term>
      <listitem>
       <para>
        如果程序用 0 表示成功，非零表示失败，那么你不需要为此写文档。如果在每个非零退出码有不同的含义，那么在这里列出它们。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term>用法</term>
      <listitem>
       <para>
        描述程序的任意子语言或者运行时接口。如果程序不是交互式的，那么本节通常可以省略。否则，本节是全方位描述运行时特性的地方。如果需要可以使用子小节。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term>环境</term>
      <listitem>
       <para>
        列出所有程序可能使用的环境变量。尽量完整；即使是那些看起来很琐碎的变量，比如<envar>SHELL</envar>都可能让读者感兴趣。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term>文件</term>
      <listitem>
       <para>
        列出程序可能隐式访问的任何文件。也就是说，不要列出在命令行上指定的输入和输出文件，但是要列出配置文件等。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term>诊断</term>
      <listitem>
       <para>
        解释程序可能生成的任何不正常的输出。避免列出所有可能的错误消息。 这样做工作量很大但没有太多实际用处。但是如果错误消息有一种用户可以解析的标准格式，那么它应当在这里解释。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term>注意</term>
      <listitem>
       <para>
        任何放在其他地方都不合适的东西可以放在这里，但是特别是缺陷、实现瑕疵、安全考虑、兼容性问题。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term>例子</term>
      <listitem>
       <para>
        例子
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term>历史</term>
      <listitem>
       <para>
        如果在程序的历史上有一些主要的里程碑，那么可以在这里列出。通常，这个小节可以被省略。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term>作者</term>
      <listitem>
       <para>
        作者（只在 contrib 节中使用）
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term>另见</term>
      <listitem>
       <para>
        交叉引用，按照下面的顺序列出：其它<productname>PostgreSQL</productname>命令参考页、<productname>PostgreSQL</productname> SQL命令参考页、引用<productname>PostgreSQL</productname>手册、 其它参考页（如操作系统、其它包）、其它文档。在同一组中的项按照字母表顺序列出。
       </para>
      </listitem>
     </varlistentry>

    </variablelist>
   </para>

<!--==========================orignal english content==========================
   <para>
    Reference pages describing SQL commands should contain the
    following sections: Name, Synopsis, Description, Parameters,
    Outputs, Notes, Examples, Compatibility, History, See
    Also.  The Parameters section is like the Options section, but
    there is more freedom about which clauses of the command can be
    listed.  The Outputs section is only needed if the command returns
    something other than a default command-completion tag.  The Compatibility
    section should explain to what extent
    this command conforms to the SQL standard(s), or to which other
    database system it is compatible.  The See Also section of SQL
    commands should list SQL commands before cross-references to
    programs.
   </para>
____________________________________________________________________________-->
   <para>
    描述 SQL 命令的参考页应该包含下列小节：名称、概要、描述、参数、输出、注意、例子、兼容性、历史、另见。 用法、诊断、注意、例子、兼容性、历史、又见。参数小节类似选项小节， 但是在选择哪些子句是可列出的方面有更多自由。输出小节只有在命令返回非命令结束标签的东西时才需要。兼容性小节应该解释此命令遵循 SQL 标准的程度，或者它兼容哪种其它数据库系统。SQL 命令的另见小节应该在交叉引用其它程序之前列出 SQL 命令。
   </para>
  </sect2>

 </sect1>
</appendix>
