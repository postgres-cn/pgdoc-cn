<!-- doc/src/sgml/sslinfo.sgml -->

<sect1 id="sslinfo" xreflabel="sslinfo">
<!--==========================orignal english content==========================
 <title>sslinfo</title>
____________________________________________________________________________-->
 <title>sslinfo</title>

<!--==========================orignal english content==========================
 <indexterm zone="sslinfo">
  <primary>sslinfo</primary>
 </indexterm>
____________________________________________________________________________-->
 <indexterm zone="sslinfo">
  <primary>sslinfo</primary>
 </indexterm>

<!--==========================orignal english content==========================
 <para>
  The <filename>sslinfo</> module provides information about the SSL
  certificate that the current client provided when connecting to
  <productname>PostgreSQL</>.  The module is useless (most functions
  will return NULL) if the current connection does not use SSL.
 </para>
____________________________________________________________________________-->
 <para>
  在连接到<productname>PostgreSQL</productname>时，<filename>sslinfo</filename>模块提供当前客户端提供的 SSL 证书的有关信息。如果当前连接不使用 SSL，这个模块就没有用处（大部分函数将返回 NULL）。
 </para>

<!--==========================orignal english content==========================
 <para>
  This extension won't build at all unless the installation was
  configured with <literal>-&minus;with-openssl</>.
 </para>
____________________________________________________________________________-->
 <para>
  除非安装时用<literal>--with-openssl</literal>进行了配置，这个扩展压根就不会被编译。
 </para>

 <sect2>
<!--==========================orignal english content==========================
  <title>Functions Provided</title>
____________________________________________________________________________-->
  <title>提供的函数</title>

  <variablelist>
   <varlistentry>
<!--==========================orignal english content==========================
    <term>
     <function>ssl_is_used() returns boolean</function>
     <indexterm>
      <primary>ssl_is_used</primary>
     </indexterm>
    </term>
____________________________________________________________________________-->
    <term>
     <function>ssl_is_used() 返回 boolean</function>
    <indexterm>
     <primary>ssl_is_used</primary>
    </indexterm>
    </term>
    <listitem>
<!--==========================orignal english content==========================
    <para>
     Returns true if current connection to server uses SSL, and false
     otherwise.
    </para>
____________________________________________________________________________-->
    <para>
     如果当前到服务器的连接使用 SSL 则返回 true，否则返回 false。
    </para>
    </listitem>
   </varlistentry>

   <varlistentry>
<!--==========================orignal english content==========================
    <term>
     <function>ssl_version() returns text</function>
     <indexterm>
      <primary>ssl_version</primary>
     </indexterm>
    </term>
____________________________________________________________________________-->
    <term>
     <function>ssl_version() 返回 text</function>
     <indexterm>
     <primary>ssl_version</primary>
    </indexterm>
    </term>
    <listitem>
<!--==========================orignal english content==========================
    <para>
     Returns the name of the protocol used for the SSL connection (e.g. TLSv1.0
     TLSv1.1, or TLSv1.2).
    </para>
____________________________________________________________________________-->
    <para>
     返回 SSL 连接使用的协议名称（如 TLSv1.0、TLSv1.1 或者 TLSv1.2）。
    </para>
    </listitem>
   </varlistentry>

   <varlistentry>
<!--==========================orignal english content==========================
    <term>
     <function>ssl_cipher() returns text</function>
     <indexterm>
      <primary>ssl_cipher</primary>
     </indexterm>
    </term>
____________________________________________________________________________-->
    <term>
     <function>ssl_cipher() 返回 text</function>
     <indexterm>
     <primary>ssl_cipher</primary>
    </indexterm>
    </term>
    <listitem>
<!--==========================orignal english content==========================
    <para>
     Returns the name of the cipher used for the SSL connection
     (e.g. DHE-RSA-AES256-SHA).
    </para>
____________________________________________________________________________-->
    <para>
     返回 SSL 连接所用的加密方法名称（如 DHE-RSA-AES256-SHA）。
    </para>
    </listitem>
   </varlistentry>

   <varlistentry>
<!--==========================orignal english content==========================
    <term>
     <function>ssl_client_cert_present() returns boolean</function>
     <indexterm>
      <primary>ssl_client_cert_present</primary>
     </indexterm>
    </term>
____________________________________________________________________________-->
    <term>
     <function>ssl_client_cert_present() 返回 boolean</function>
     <indexterm>
     <primary>ssl_client_cert_present</primary>
    </indexterm>
    </term>
    <listitem>
<!--==========================orignal english content==========================
    <para>
     Returns true if current client has presented a valid SSL client
     certificate to the server, and false otherwise.  (The server
     might or might not be configured to require a client certificate.)
    </para>
____________________________________________________________________________-->
    <para>
     如果当前客户端已经向服务器出示了一个合法的 SSL 客户端证书则返回 true，否则返回 false（服务器可能被配置要求一个客户端配置，也可能没有被配置成这样）。
    </para>
    </listitem>
   </varlistentry>

   <varlistentry>
<!--==========================orignal english content==========================
    <term>
     <function>ssl_client_serial() returns numeric</function>
     <indexterm>
      <primary>ssl_client_serial</primary>
     </indexterm>
    </term>
____________________________________________________________________________-->
    <term>
     <function>ssl_client_serial() 返回 numeric</function>
     <indexterm>
     <primary>ssl_client_serial</primary>
    </indexterm>
    </term>
    <listitem>
<!--==========================orignal english content==========================
    <para>
     Returns serial number of current client certificate.  The combination of
     certificate serial number and certificate issuer is guaranteed to
     uniquely identify a certificate (but not its owner &mdash; the owner
     ought to regularly change their keys, and get new certificates from the
     issuer).
    </para>
____________________________________________________________________________-->
    <para>
     返回当前客户端证书的序列号。证书序列号和证书发行人的组合被确保可以
     唯一标识一个证书（但是不能唯一标识其拥有者 &mdash; 拥有者应该定期地更换其密钥，
     并且从发行人那里得到新的证书）。
    </para>

<!--==========================orignal english content==========================
    <para>
     So, if you run your own CA and allow only certificates from this CA to
     be accepted by the server, the serial number is the most reliable (albeit
     not very mnemonic) means to identify a user.
    </para>
____________________________________________________________________________-->
    <para>
     因此，如果你运行自己的 CA 并且只允许服务器接收来自于这个 CA 的证书，序列号就是最可靠的（虽然并非很好记忆）标识一个用户的方法。
    </para>
    </listitem>
   </varlistentry>

   <varlistentry>
<!--==========================orignal english content==========================
    <term>
     <function>ssl_client_dn() returns text</function>
     <indexterm>
      <primary>ssl_client_dn</primary>
     </indexterm>
    </term>
____________________________________________________________________________-->
    <term>
     <function>ssl_client_dn() 返回 text</function>
     <indexterm>
     <primary>ssl_client_dn</primary>
    </indexterm>
    </term>
    <listitem>
<!--==========================orignal english content==========================
    <para>
     Returns the full subject of the current client certificate, converting
     character data into the current database encoding.  It is assumed that
     if you use non-ASCII characters in the certificate names, your
     database is able to represent these characters, too.  If your database
     uses the SQL_ASCII encoding, non-ASCII characters in the name will be
     represented as UTF-8 sequences.
    </para>
____________________________________________________________________________-->
    <para>
     返回当前客户端证书的完整主题，并且将字符数据转换成当前数据库的编码。我们假定如果你在证书名中使用非 ASCII 字符，你的数据库也有能力展示这些字符。如果你的数据库使用 SQL_ASCII 编码，名称中的非 ASCII 字符将被表示为 UTF-8 序列。
    </para>

<!--==========================orignal english content==========================
    <para>
     The result looks like <literal>/CN=Somebody /C=Some country/O=Some organization</>.
    </para>
____________________________________________________________________________-->
    <para>
     结果看起来像<literal>/CN=某人 /C=某个国家 /O=某个组织</literal>。
    </para>
    </listitem>
   </varlistentry>

   <varlistentry>
<!--==========================orignal english content==========================
    <term>
     <function>ssl_issuer_dn() returns text</function>
     <indexterm>
      <primary>ssl_issuer_dn</primary>
     </indexterm>
    </term>
____________________________________________________________________________-->
    <term>
     <function>ssl_issuer_dn() 返回 text</function>
    <indexterm>
     <primary>ssl_issuer_dn</primary>
    </indexterm>
    </term>
    <listitem>
<!--==========================orignal english content==========================
    <para>
     Returns the full issuer name of the current client certificate, converting
     character data into the current database encoding.  Encoding conversions
     are handled the same as for <function>ssl_client_dn</>.
    </para>
____________________________________________________________________________-->
    <para>
     返回当前客户端证书的完整的发行人名称，并把字符数据转换成当前数据库的编码。编码转换以与<function>ssl_client_dn</function>相同的方式处理。
    </para>
<!--==========================orignal english content==========================
    <para>
     The combination of the return value of this function with the
     certificate serial number uniquely identifies the certificate.
    </para>
____________________________________________________________________________-->
    <para>
     这个函数的返回值与证书序列号的组合唯一地标识证书。
    </para>
<!--==========================orignal english content==========================
    <para>
     This function is really useful only if you have more than one trusted CA
     certificate in your server's certificate authority file, or if this CA
     has issued some intermediate certificate authority certificates.
    </para>
____________________________________________________________________________-->
    <para>
     如果在服务器的证书授权中心文件中有多于一个的可信 CA 证书，或者如果 CAI 已经发行了某些中间认证授权证书，这个函数就真的很有用。
    </para>
    </listitem>
   </varlistentry>

   <varlistentry>
<!--==========================orignal english content==========================
    <term>
     <function>ssl_client_dn_field(fieldname text) returns text</function>
     <indexterm>
      <primary>ssl_client_dn_field</primary>
     </indexterm>
    </term>
____________________________________________________________________________-->
    <term>
     <function>ssl_client_dn_field(fieldname text) 返回 text</function>
    <indexterm>
     <primary>ssl_client_dn_field</primary>
    </indexterm>
    </term>
    <listitem>
<!--==========================orignal english content==========================
    <para>
     This function returns the value of the specified field in the
     certificate subject, or NULL if the field is not present.
     Field names are string constants that are
     converted into ASN1 object identifiers using the OpenSSL object
     database.  The following values are acceptable:
    </para>
____________________________________________________________________________-->
    <para>
     这个函数返回证书主题中指定域的值，如果域不存在则返回 NULL。域的名称是字符串常量，它们被使用 OpenSSL 对象数据库转换成 ASN1 对象标识符。下列值是可接受的：
    </para>
<!--==========================orignal english content==========================
<literallayout class="monospaced">
commonName (alias CN)
surname (alias SN)
name
givenName (alias GN)
countryName (alias C)
localityName (alias L)
stateOrProvinceName (alias ST)
organizationName (alias O)
organizationUnitName (alias OU)
title
description
initials
postalCode
streetAddress
generationQualifier
description
dnQualifier
x500UniqueIdentifier
pseudonym
role
emailAddress
</literallayout>
____________________________________________________________________________-->
<literallayout class="monospaced">
commonName (alias CN)
surname (alias SN)
name
givenName (alias GN)
countryName (alias C)
localityName (alias L)
stateOrProvinceName (alias ST)
organizationName (alias O)
organizationUnitName (alias OU)
title
description
initials
postalCode
streetAddress
generationQualifier
description
dnQualifier
x500UniqueIdentifier
pseudonym
role
emailAddress
</literallayout>
<!--==========================orignal english content==========================
    <para>
     All of these fields are optional, except <structfield>commonName</>.
     It depends
     entirely on your CA's policy which of them would be included and which
     wouldn't.  The meaning of these fields, however, is strictly defined by
     the X.500 and X.509 standards, so you cannot just assign arbitrary
     meaning to them.
    </para>
____________________________________________________________________________-->
    <para>
     这些域中除了<structfield>commonName</structfield>都是可选的。它们之中哪些会被包括或者不会被包括完全取决于你的 CA 策略。不过，这些域的含义由 X.500 和 X.509 标准严格地定义，因此你不能只是为它们分配任意含义。
    </para>
    </listitem>
   </varlistentry>

   <varlistentry>
<!--==========================orignal english content==========================
    <term>
     <function>ssl_issuer_field(fieldname text) returns text</function>
     <indexterm>
      <primary>ssl_issuer_field</primary>
     </indexterm>
    </term>
____________________________________________________________________________-->
    <term>
     <function>ssl_issuer_field(fieldname text) 返回 text</function>
    <indexterm>
     <primary>ssl_issuer_field</primary>
    </indexterm>
    </term>
    <listitem>
<!--==========================orignal english content==========================
    <para>
     Same as <function>ssl_client_dn_field</>, but for the certificate issuer
     rather than the certificate subject.
    </para>
____________________________________________________________________________-->
    <para>
     和<function>ssl_client_dn_field</function>一样，但是用于证书发行人而不是证书主题。
    </para>
    </listitem>
   </varlistentry>
   
   <varlistentry>
<!--==========================orignal english content==========================
    <term>
     <function>ssl_extension_info() returns setof record</function>
     <indexterm>
      <primary>ssl_extension_info</primary>
     </indexterm>
    </term>
____________________________________________________________________________-->
    <term>
     <function>ssl_extension_info() 返回 setof record</function>
     <indexterm>
      <primary>ssl_extension_info</primary>
     </indexterm>
    </term>
    <listitem>
<!--==========================orignal english content==========================
    <para>
     Provide information about extensions of client certificate: extension name,
     extension value, and if it is a critical extension.
    </para>
____________________________________________________________________________-->
    <para>
     提供有关客户端证书扩展的信息：扩展名、扩展值以及是否为
     决定性的扩展。
    </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </sect2>

 <sect2>
<!--==========================orignal english content==========================
  <title>Author</title>
____________________________________________________________________________-->
  <title>作者</title>

<!--==========================orignal english content==========================
  <para>
   Victor Wagner <email>vitus@cryptocom.ru</email>, Cryptocom LTD
  </para>
____________________________________________________________________________-->
  <para>
   Victor Wagner <email>vitus@cryptocom.ru</email>, Cryptocom LTD
  </para>
  
<!--==========================orignal english content==========================
  <para>
   Dmitry Voronin <email>carriingfate92@yandex.ru</email>
  </para>
____________________________________________________________________________-->
  <para>
   Dmitry Voronin <email>carriingfate92@yandex.ru</email>
  </para>

<!--==========================orignal english content==========================
  <para>
   E-Mail of Cryptocom OpenSSL development group:
   <email>openssl@cryptocom.ru</email>
  </para>
____________________________________________________________________________-->
  <para>
   Cryptocom OpenSSL 开发组的 E-Mail：
   <email>openssl@cryptocom.ru</email>
  </para>
 </sect2>

</sect1>
